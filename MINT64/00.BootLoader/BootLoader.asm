
[ORG 0x00]          ; ¿¿¿ ¿¿ ¿¿¿¿¿ 0x00¿¿ ¿¿
[BITS 16]           ; ¿¿¿ ¿¿¿ 16¿¿ ¿¿¿ ¿¿

SECTION .text       ; text ¿¿(¿¿¿¿)¿ ¿¿

jmp 0x07C0:START    ; CS ¿¿¿¿ ¿¿¿¿¿ 0x07C0¿ ¿¿¿¿¿, START ¿¿¿¿ ¿¿

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;   MINT64 OS¿ ¿¿¿ ¿¿ ¿¿ ¿
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
TOTALSECTORCOUNT:   dw  1       ; ¿¿ ¿¿¿ ¿¿¿ MINT64 OS ¿¿¿¿ ¿¿
                                ; ¿¿ 1152 ¿¿ (0x90000byte)¿¿ ¿¿

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;   ¿¿ ¿¿
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
START:
    mov ax, 0x07C0  ; ¿¿ ¿¿¿ ¿¿ ¿¿¿¿(0x07C0)¿ ¿¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿
    mov ds, ax      ; DS ¿¿¿¿ ¿¿¿¿¿ ¿¿
    mov ax, 0xB800  ; ¿¿¿ ¿¿¿¿ ¿¿ ¿¿¿¿(0xB800)¿ ¿¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿
    mov es, ax      ; ES ¿¿¿¿ ¿¿¿¿¿ ¿¿

    ; ¿¿¿ 0x0000:0000~0x0000:FFFF ¿¿¿ 64kb ¿¿¿ ¿¿
    mov ax, 0x0000  ; ¿¿ ¿¿¿¿¿ ¿¿ ¿¿¿¿(0x0000)¿ ¿¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿
    mov ss, ax      ; SS ¿¿¿¿ ¿¿¿¿¿ ¿¿
    mov sp, 0xFFFF  ; SP ¿¿¿¿¿ ¿¿¿¿¿ 0xFFFF¿¿ ¿¿(¿¿¿)
    mov bp, 0xFFFF  ; BP ¿¿¿¿¿ ¿¿¿¿¿ 0xFFFF¿¿ ¿¿(¿¿¿)

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; ¿¿¿ ¿¿ ¿¿¿, ¿¿¿¿ ¿¿¿¿ ¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    mov si,    0                    ; SI ¿¿¿¿(¿¿¿ ¿¿ ¿¿¿ ¿¿¿¿)¿ ¿¿¿
        
.SCREENCLEARLOOP:                   ; ¿¿¿ ¿¿¿ ¿¿
    mov byte [ es: si ], 0          ; ¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿¿¿ ¿¿¿¿¿ 0¿ ¿¿¿¿ ¿¿¿ ¿¿
                                    
    mov byte [ es: si + 1 ], 0x0A   ; ¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿¿¿ ¿¿¿¿¿ 0x0A(¿¿ ¿¿¿ ¿¿ ¿¿)¿ ¿¿
                                    


    add si, 2                       ; ¿¿¿ ¿¿¿ ¿¿¿¿¿¿ ¿¿ ¿¿¿ ¿¿

    cmp si, 80 * 25 * 2     ; ¿¿¿ ¿¿ ¿¿¿ 80 ¿¿ * 25 ¿¿¿
                            ; ¿¿¿ ¿¿¿ ¿¿ ¿¿¿¿ SI ¿¿¿¿¿ ¿¿
    jl .SCREENCLEARLOOP     ; SI ¿¿¿¿¿ 80*25*2¿¿ ¿¿¿ ¿¿ ¿¿¿ ¿¿ ¿¿¿ ¿¿¿¿ .SCREENCLEARLOOP ¿¿¿¿ ¿¿ 
                            
    
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; ¿¿ ¿¿¿ ¿¿ ¿¿¿ ¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    push MESSAGE1               ; ¿¿¿ ¿¿¿¿ ¿¿¿¿¿ ¿¿¿ ¿¿
    push 0                      ; ¿¿ Y ¿¿(0)¿ ¿¿¿ ¿¿
    push 0                      ; ¿¿ X ¿¿(0)¿ ¿¿¿ ¿¿
    call PRINTMESSAGE           ; PRINTMESSAGE ÇÔ¼ö È£Ãâ
    add  sp, 6                  ; ¿¿¿ ¿¿¿¿ ¿¿ cdecl ¿¿ 
    
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; OS ¿¿¿¿ ¿¿¿¿¿ ¿¿¿ ¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    push IMAGELOADINGMESSAGE    ; ¿¿¿ ¿¿¿¿ ¿¿¿¿¿ ¿¿¿ ¿¿         
    push 1                      ; ¿¿ Y ¿¿(1)¿ ¿¿¿ ¿¿           
    push 0                      ; ¿¿ X ¿¿(0)¿ ¿¿¿ ¿¿                     
    call PRINTMESSAGE           ; PRINTMESSAGE ¿¿ ¿¿                      
    add  sp, 6                  ; ¿¿¿ ¿¿¿¿ ¿¿                           
        
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; ¿¿¿¿¿ ­ OS ¿¿¿¿ ¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; ¿¿¿¿ ¿¿ ¿¿ ¿¿ ¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
RESETDISK:                          ; ¿¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; BIOS Reset Function ¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; ¿¿¿ ¿¿ 0, ¿¿¿¿ ¿¿(0=Floppy)
    mov ax, 0
    mov dl, 0              
    int 0x13     
    ; ¿¿¿ ¿¿¿¿ ¿¿ ¿¿¿ ¿¿
    jc  HANDLEDISKERROR
        
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; ¿¿¿¿¿ ¿¿¿ ¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; ¿¿¿¿ ¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿¿¿(ES:BX)¿ 0x10000À¿¿ ¿¿
    mov si, 0x1000                  ; OS ¿¿¿¿ ¿¿¿ ¿¿¿¿(0x10000)¿ 
                                    ; ¿¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿
    mov es, si                      ; ES ¿¿¿¿ ¿¿¿¿¿ ¿ ¿¿
    mov bx, 0x0000                  ; BX ¿¿¿¿¿ 0x0000¿ ¿¿¿¿ ¿¿¿ 
                                    ; ¿¿¿¿¿  0x1000:0000(0x10000)¿¿ ¿¿ ¿¿

    mov di, word [ TOTALSECTORCOUNT ] ; ¿¿¿ OS ¿¿¿¿ ¿¿ ¿¿ DI ¿¿¿¿¿ ¿¿

READDATA:                           ; ¿¿¿¿ ¿¿ ¿¿¿ ¿¿
    ; ¿¿ ¿¿¿ ¿ ¿¿¿¿ ¿¿
    cmp di, 0               ; ¿¿¿ OS ¿¿¿¿ ¿¿¿¿ 0¿ ¿¿
    je  READEND             ; ¿¿¿ ¿¿ ¿¿ 0¿¿¿ ¿ ¿¿ ¿¿¿¿ READEND¿ ¿¿
    sub di, 0x1             ; ¿¿¿ ¿¿ ¿¿ 1 ¿¿

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; BIOS Read Function È£Ãâ
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    mov ah, 0x02                        ; BIO ¿¿¿  2(Read Sector)
    mov al, 0x1                         ; ¿¿ ¿¿ ¿¿ 1
    mov ch, byte [ TRACKNUMBER ]        ; ¿¿ ¿¿ ¿¿ ¿¿
    mov cl, byte [ SECTORNUMBER ]       ; ¿¿ ¿¿ ¿¿ ¿¿
    mov dh, byte [ HEADNUMBER ]         ; ¿¿ ¿¿ ¿¿ ¿¿
    mov dl, 0x00                        ; ¿¿ ¿¿¿¿ ¿¿ (0=Floppy) ¿¿
    int 0x13                            ; ¿¿¿¿ ¿¿¿ ¿¿
    jc HANDLEDISKERROR                  ; ¿¿¿ ¿¿¿¿¿ HANDLEDISKERROR¿ ¿¿
    
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; ¿¿¿ ¿¿¿¿¿ ¿¿, ¿¿, ¿¿ ¿¿¿¿ ¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    add si, 0x0020      ; 512(0x200)¿¿¿¿¿ ¿¿¿¿¿, ¿¿ ¿¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿
                        
    mov es, si          ; ES ¿¿¿¿ ¿¿¿¿¿ ¿¿¿ ¿¿¿¿¿ ¿ ¿¿ ¿¿ ¿¿
    
    ; ¿ ¿¿¿ ¿¿¿¿¿ ¿¿ ¿¿¿ ¿¿¿¿¿ ¿¿¿ ¿¿(18)¿¿ ¿¿¿¿ ¿¿
    ; ¿¿¿ ¿¿¿ ¿¿¿ ¿¿ ¿¿¿ ¿¿¿¿ ¿¿ ¿¿ ¿¿ ¿¿
    mov al, byte [ SECTORNUMBER ]       ; ¿¿ ¿¿¿ AL ¿¿¿¿¿ ¿¿
    add al, 0x01                        ; ¿¿ ¿¿¿ 1 ¿¿
    mov byte [ SECTORNUMBER ], al       ; ¿¿¿¿ ¿¿ ¿¿¿ SECTORNUMBER¿ ¿¿ ¿¿
    cmp al, 19                          ; ¿¿¿¿ ¿¿ ¿¿¿ 19¿ ¿¿
    jl READDATA                         ; ¿¿ ¿¿¿ 19 ¿¿¿¿¿ READDATA¿ ¿¿
    
    ; ¿¿¿ ¿¿¿¿ ¿¿¿¿(¿¿ ¿¿¿ 19¿¿) ¿¿¿ ¿¿(0->1,1->0)¿¿,
    ; ¿¿ ¿¿¿ 1¿ ¿¿

    xor byte [ HEADNUMBER ], 0x01       ; ¿¿ ¿¿¿ 0x01¿ XOR¿¿ ¿¿(0->1, 1->1)
    mov byte [ SECTORNUMBER ], 0x01     ; ¿¿ ¿¿¿ ¿¿ 1¿ ¿¿
    
    ; ¿¿ ¿¿¿ 1->0¿¿ ¿¿¿¿¿ ¿¿ ¿¿¿ ¿¿ ¿¿ ¿¿¿¿ ¿¿¿ ¿¿¿¿ ¿¿ ¿¿¿ 1 ¿¿
    cmp byte [ HEADNUMBER ], 0x00       ; ¿¿ ¿¿¿ 0x00¿ ¿¿
    jne READDATA                        ; ¿¿ ¿¿¿ 0¿ ¿¿¿ READDATA¿ ¿¿
    
    ; ¿¿¿ 1 ¿¿¿¿ ¿ ¿¿ ¿¿ ¿¿¿ ¿¿
    add byte [ TRACKNUMBER ], 0x01      ; ¿¿ ¿¿¿ 1 ¿¿
    jmp READDATA                        ; READDATA¿ ¿¿
READEND:

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; OS ¿¿¿¿ ¿¿¿¿¿¿ ¿¿¿¿ ¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    push LOADINGCOMPLETEMESSAGE     ; ¿¿¿ ¿¿¿¿ ¿¿¿¿¿ ¿¿¿ ¿¿
    push 1                          ; ¿¿ Y ¿¿(1)¿ ¿¿¿ ¿¿
    push 20                         ; ¿¿ X ¿¿(20)¿ ¿¿¿ ¿¿
    call PRINTMESSAGE               ; PRINTMESSAGE ¿¿ ¿¿
    add  sp, 6                      ; ¿¿¿ ¿¿¿¿ ¿¿

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; ¿¿¿ ¿¿ OS ¿¿¿ ¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    jmp 0x1000:0x0000
    
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;   ¿¿ ¿¿ ¿¿
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ¿¿¿ ¿¿¿ ¿¿¿¿ ¿¿
HANDLEDISKERROR:
    push DISKERRORMESSAGE   ; ¿¿ ¿¿¿¿ ¿¿¿¿¿ ¿¿¿ ¿¿
    push 1                  ; ¿¿ Y ¿¿(1)¿ ¿¿¿ ¿¿
    push 20                 ; ¿¿ X ¿¿(20)¿ ¿¿¿ ¿¿
    call PRINTMESSAGE       ; PRINTMESSAGE ¿¿ ¿¿
    
    jmp $                   ; ¿¿ ¿¿¿¿ ¿¿ ¿¿ ¿¿

; ¿¿¿¿ ¿¿¿¿ ¿¿
;   PARAM: x ¿¿,y ¿¿, ¿¿¿
PRINTMESSAGE:
    push bp         ; ¿¿¿ ¿¿¿ ¿¿¿¿(BP)¿ ¿¿¿ ¿¿
    mov bp, sp      ; ¿¿¿ ¿¿¿ ¿¿¿¿(BP)¿ ¿¿ ¿¿¿ ¿¿¿¿(SP¿ ¿¿ ¿¿
                    ; ¿¿¿ ¿¿¿ ¿¿¿¿(BP)¿ ¿¿¿¿ ¿¿¿¿¿ ¿¿¿ ¿¿

    push es         ; ES ¿¿¿¿ ¿¿¿¿¿¿ DX ¿¿¿¿¿¿ ¿¿¿ ¿¿
    push si         ; ¿¿¿¿ ¿¿¿ ¿¿¿¿ ¿¿¿¿¿ ¿¿¿ ¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿¿ ¿¿ ¿¿ ¿¿ ¿¿¿ ¿¿
    push di         
    push ax
    push cx
    push dx
    
    ; ES ¿¿¿¿ ¿¿¿¿¿ ¿¿¿ ¿¿ ¿¿¿¿ ¿¿
    mov ax, 0xB800              ; ¿¿¿ ¿¿¿ ¿¿ ¿¿¿¿(0x0B8000)¿
                                ; ¿¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿
    mov es, ax                  ; ES ¿¿¿¿ ¿¿¿¿¿ ¿¿
    
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; X, Y¿ ¿¿¿ ¿¿¿ ¿¿¿¿ ¿¿¿¿¿ ¿¿¿
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; Y ¿¿¿ ¿¿¿¿ ¿¿ ¿¿ ¿¿¿¿¿ ¿¿
    mov ax, word [ bp + 6 ]     ; ¿¿¿¿ 2(¿¿ ¿¿ Y)¿ AX ¿¿¿¿¿ ¿¿
    mov si, 160                 ; ¿ ¿¿¿ ¿¿¿ ¿ (2*80 ¿¿)¿ SI ¿¿¿¿¿ ¿¿
    mul si                      ; AX ¿¿¿¿¿ SI ¿¿¿¿¿ ¿¿¿ ¿¿ Y ¿¿¿¿ ¿¿
    mov di, ax                  ; ¿¿¿ ¿¿ Y ¿¿¿¿¿ DI ¿¿¿¿¿ ¿¿
    
    ; X ¿¿¿ ¿¿¿¿ 2¿ ¿¿ ¿ ¿¿ ¿¿¿¿¿ ¿¿
    mov ax, word [ bp + 4 ]     ; ¿¿¿¿ 1(¿¿ ¿¿X)¿ AX ¿¿¿¿¿ ¿¿
    mov si, 2                   ; ¿ ¿¿¿ ¿¿¿¿ ¿¿¿ ¿(2)¿ SI ¿¿¿¿¿ ¿¿
    mul si                      ; AX ¿¿¿¿¿ SI ¿¿¿¿¿ ¿¿¿ ¿¿ X ¿¿¿¿¿ ¿¿
    add di, ax                  ; ¿¿ Y ¿¿¿¿¿ ¿¿¿ X ¿¿¿¿¿ ¿¿¿
                                ; ¿¿ ¿¿¿ ¿¿¿ ¿¿¿¿¿ ¿¿
    
    ; ¿¿¿ ¿¿¿¿ ¿¿¿¿     
    mov si, word [ bp + 8 ]     ; ¿¿¿¿ 3(¿¿¿ ¿¿¿¿ ¿¿¿¿)

.MESSAGELOOP:               ; ¿¿¿¿ ¿¿¿¿ ¿¿
    mov cl, byte [ si ]     ; SI ¿¿¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿¿¿ ¿ ¿¿¿ 
                            ; CL ¿¿¿¿¿ ¿¿
                            ; CL ¿¿¿¿¿ CX ¿¿¿¿¿ ¿¿ 1¿¿¿¿ ¿¿
                            ; ¿¿¿¿ 1¿¿¿¿ ¿¿¿¿¿ CX ¿¿¿¿¿ ¿¿ 1¿¿¿¿ ¿¿
    
    cmp cl, 0               ; ¿¿¿ ¿¿¿ 0¿ ¿¿
    je .MESSAGEEND          ; ¿¿¿ ¿¿¿ ¿¿ 0¿¿ ¿¿¿¿ ¿¿¿¿¿¿
                            ; ¿¿¿¿¿ .MESSAGEEND¿ ¿¿¿¿ ¿¿ ¿¿ ¿¿

    mov byte [ es: di ], cl ; 0¿ ¿¿¿¿ ¿¿¿ ¿¿¿ ¿¿¿¿ 0xB800:di¿ ¿¿¿ ¿¿
    
    add si, 1               ; SI ¿¿¿¿¿ 1¿ ¿¿¿ ¿¿ ¿¿¿¿ ¿¿
    add di, 2               ; DI ¿¿¿¿¿ 2¿ ¿¿¿ ¿¿¿ ¿¿¿¿ ¿¿ ¿¿ ¿¿¿ ¿¿
                            ; ¿¿¿ ¿¿¿¿ (¿¿,¿¿)¿ ¿¿¿ ¿¿¿¿¿ ¿¿¿ ¿¿¿¿¿
                            ; 2¿ ¿¿¿ ¿

    jmp .MESSAGELOOP        ; ¿¿¿ ¿¿ ¿¿¿ ¿¿¿¿ ¿¿ ¿¿¿ ¿¿

.MESSAGEEND:
    pop dx      ; ¿¿¿¿ ¿¿¿ ¿¿ DX ¿¿¿¿¿¿ ES ¿¿¿¿¿¿¿ ¿¿¿
    pop cx      ; ¿¿¿ ¿¿ ¿¿¿¿ ¿¿
    pop ax     
    pop di      
    pop si      
    pop es
    pop bp      ; ¿¿¿ ¿¿¿ ¿¿¿¿(BP) ¿¿
    ret         ; ¿¿¿ ¿¿¿ ¿¿ ¿¿¿ ¿¿¿ ¿¿
    
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;   ¿¿¿ ¿¿
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ¿¿ ¿¿ ¿¿ ¿¿¿
MESSAGE1:    db 'MINT64 OS Boot Loader Start~!!', 0 ; ¿¿¿ ¿¿¿ ¿¿
                                                    ; ¿¿¿¿ 0¿¿ ¿¿¿¿ .MESSAGELOOP¿¿
                                                    ; ¿¿¿¿ ¿¿¿¿¿¿ ¿ ¿ ¿¿¿ ¿
DISKERRORMESSAGE:       db  'DISK Error~!!', 0
IMAGELOADINGMESSAGE:    db  'OS Image Loading...', 0
LOADINGCOMPLETEMESSAGE: db  'Complete~!!', 0

; ¿¿¿ ¿¿¿ ¿¿¿ ¿¿¿
SECTORNUMBER:           db  0x02    ; OS ¿¿¿¿ ¿¿¿¿ ¿¿ ¿¿¿ ¿¿¿¿ ¿¿
HEADNUMBER:             db  0x00    ; OS ¿¿¿¿ ¿¿¿¿ ¿¿ ¿¿¿ ¿¿¿¿ ¿¿
TRACKNUMBER:            db  0x00    ; OS ¿¿¿¿ ¿¿¿¿ ¿¿ ¿¿¿ ¿¿¿¿ ¿¿
    
times 510 - ( $ - $$ )    db    0x00    ; $ : ¿¿ ¿¿¿ ¿¿¿¿
                                        ; $$ : ¿¿ ¿¿(.text)¿ ¿¿ ¿¿¿¿
                                        ; $ - $$ : ¿¿ ¿¿¿ ¿¿¿¿ ¿¿ ¿¿¿
                                        ; 510 - ( $ - $$ ) : ¿¿¿¿ ¿¿¿¿ 510¿¿
                                        ; db 0x00 : 1¿¿¿¿ ¿¿¿¿ ¿¿ 0x00
                                        ; time : ¿¿ ¿¿
                                        ; ¿¿ ¿¿¿¿ ¿¿¿¿ 510¿¿ 0x00¿¿ ¿¿

db 0x55             ; 1¿¿¿¿ ¿¿¿¿ ¿¿  0x55
db 0xAA             ; 1¿¿¿¿ ¿¿¿¿ ¿¿ 0xAA
                    ; ¿¿¿¿ 511, 512¿ 0x55, 0xAA¿ ¿¿ ¿¿ ¿¿¿ ¿¿¿
