!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APIC_DELIVERYMODE_EXTINT	02.Kernel64/Source/LocalAPIC.h	28;"	d
APIC_DELIVERYMODE_EXTINT	save/02.Kernel64/Source/LocalAPIC.h	28;"	d
APIC_DELIVERYMODE_FIXED	02.Kernel64/Source/LocalAPIC.h	22;"	d
APIC_DELIVERYMODE_FIXED	save/02.Kernel64/Source/LocalAPIC.h	22;"	d
APIC_DELIVERYMODE_INIT	02.Kernel64/Source/LocalAPIC.h	26;"	d
APIC_DELIVERYMODE_INIT	save/02.Kernel64/Source/LocalAPIC.h	26;"	d
APIC_DELIVERYMODE_LOWESTPRIORITY	02.Kernel64/Source/LocalAPIC.h	23;"	d
APIC_DELIVERYMODE_LOWESTPRIORITY	save/02.Kernel64/Source/LocalAPIC.h	23;"	d
APIC_DELIVERYMODE_NMI	02.Kernel64/Source/LocalAPIC.h	25;"	d
APIC_DELIVERYMODE_NMI	save/02.Kernel64/Source/LocalAPIC.h	25;"	d
APIC_DELIVERYMODE_SMI	02.Kernel64/Source/LocalAPIC.h	24;"	d
APIC_DELIVERYMODE_SMI	save/02.Kernel64/Source/LocalAPIC.h	24;"	d
APIC_DELIVERYMODE_STARTUP	02.Kernel64/Source/LocalAPIC.h	27;"	d
APIC_DELIVERYMODE_STARTUP	save/02.Kernel64/Source/LocalAPIC.h	27;"	d
APIC_DELIVERYSTATUS_IDLE	02.Kernel64/Source/LocalAPIC.h	35;"	d
APIC_DELIVERYSTATUS_IDLE	save/02.Kernel64/Source/LocalAPIC.h	35;"	d
APIC_DELIVERYSTATUS_PENDING	02.Kernel64/Source/LocalAPIC.h	36;"	d
APIC_DELIVERYSTATUS_PENDING	save/02.Kernel64/Source/LocalAPIC.h	36;"	d
APIC_DESTINATIONMODE_LOGICAL	02.Kernel64/Source/LocalAPIC.h	32;"	d
APIC_DESTINATIONMODE_LOGICAL	save/02.Kernel64/Source/LocalAPIC.h	32;"	d
APIC_DESTINATIONMODE_PHYSICAL	02.Kernel64/Source/LocalAPIC.h	31;"	d
APIC_DESTINATIONMODE_PHYSICAL	save/02.Kernel64/Source/LocalAPIC.h	31;"	d
APIC_DESTINATIONSHORTHAND_ALLEXCLUDINGSELF	02.Kernel64/Source/LocalAPIC.h	50;"	d
APIC_DESTINATIONSHORTHAND_ALLEXCLUDINGSELF	save/02.Kernel64/Source/LocalAPIC.h	50;"	d
APIC_DESTINATIONSHORTHAND_ALLINCLUDINGSELF	02.Kernel64/Source/LocalAPIC.h	49;"	d
APIC_DESTINATIONSHORTHAND_ALLINCLUDINGSELF	save/02.Kernel64/Source/LocalAPIC.h	49;"	d
APIC_DESTINATIONSHORTHAND_NOSHORTHAND	02.Kernel64/Source/LocalAPIC.h	47;"	d
APIC_DESTINATIONSHORTHAND_NOSHORTHAND	save/02.Kernel64/Source/LocalAPIC.h	47;"	d
APIC_DESTINATIONSHORTHAND_SELF	02.Kernel64/Source/LocalAPIC.h	48;"	d
APIC_DESTINATIONSHORTHAND_SELF	save/02.Kernel64/Source/LocalAPIC.h	48;"	d
APIC_INTERRUPT_MASK	02.Kernel64/Source/LocalAPIC.h	53;"	d
APIC_LEVEL_ASSET	02.Kernel64/Source/LocalAPIC.h	40;"	d
APIC_LEVEL_ASSET	save/02.Kernel64/Source/LocalAPIC.h	40;"	d
APIC_LEVEL_DEASSERT	02.Kernel64/Source/LocalAPIC.h	39;"	d
APIC_LEVEL_DEASSERT	save/02.Kernel64/Source/LocalAPIC.h	39;"	d
APIC_POLARITY_ACTIVEHIGH	02.Kernel64/Source/LocalAPIC.h	61;"	d
APIC_POLARITY_ACTIVELOW	02.Kernel64/Source/LocalAPIC.h	60;"	d
APIC_REGISTER_APICID	02.Kernel64/Source/LocalAPIC.h	10;"	d
APIC_REGISTER_APICID	save/02.Kernel64/Source/LocalAPIC.h	10;"	d
APIC_REGISTER_EOI	02.Kernel64/Source/LocalAPIC.h	8;"	d
APIC_REGISTER_EOI	save/02.Kernel64/Source/LocalAPIC.h	8;"	d
APIC_REGISTER_ERROR	02.Kernel64/Source/LocalAPIC.h	17;"	d
APIC_REGISTER_ERROR	save/02.Kernel64/Source/LocalAPIC.h	17;"	d
APIC_REGISTER_ICR_LOWER	02.Kernel64/Source/LocalAPIC.h	18;"	d
APIC_REGISTER_ICR_LOWER	save/02.Kernel64/Source/LocalAPIC.h	18;"	d
APIC_REGISTER_ICR_UPPER	02.Kernel64/Source/LocalAPIC.h	19;"	d
APIC_REGISTER_ICR_UPPER	save/02.Kernel64/Source/LocalAPIC.h	19;"	d
APIC_REGISTER_LINT0	02.Kernel64/Source/LocalAPIC.h	15;"	d
APIC_REGISTER_LINT0	save/02.Kernel64/Source/LocalAPIC.h	15;"	d
APIC_REGISTER_LINT1	02.Kernel64/Source/LocalAPIC.h	16;"	d
APIC_REGISTER_LINT1	save/02.Kernel64/Source/LocalAPIC.h	16;"	d
APIC_REGISTER_PERFORMANCEMONITORINGCOUNTER	02.Kernel64/Source/LocalAPIC.h	14;"	d
APIC_REGISTER_PERFORMANCEMONITORINGCOUNTER	save/02.Kernel64/Source/LocalAPIC.h	14;"	d
APIC_REGISTER_SVR	02.Kernel64/Source/LocalAPIC.h	9;"	d
APIC_REGISTER_SVR	save/02.Kernel64/Source/LocalAPIC.h	9;"	d
APIC_REGISTER_TASKPRIORITY	02.Kernel64/Source/LocalAPIC.h	11;"	d
APIC_REGISTER_TASKPRIORITY	save/02.Kernel64/Source/LocalAPIC.h	11;"	d
APIC_REGISTER_THERMALSENSOR	02.Kernel64/Source/LocalAPIC.h	13;"	d
APIC_REGISTER_THERMALSENSOR	save/02.Kernel64/Source/LocalAPIC.h	13;"	d
APIC_REGISTER_TIMER	02.Kernel64/Source/LocalAPIC.h	12;"	d
APIC_REGISTER_TIMER	save/02.Kernel64/Source/LocalAPIC.h	12;"	d
APIC_TIMERMODE_ONESHOT	02.Kernel64/Source/LocalAPIC.h	57;"	d
APIC_TIMERMODE_PERIODIC	02.Kernel64/Source/LocalAPIC.h	56;"	d
APIC_TRIGGERMODE_EDGE	02.Kernel64/Source/LocalAPIC.h	43;"	d
APIC_TRIGGERMODE_EDGE	save/02.Kernel64/Source/LocalAPIC.h	43;"	d
APIC_TRIGGERMODE_LEVEL	02.Kernel64/Source/LocalAPIC.h	44;"	d
APIC_TRIGGERMODE_LEVEL	save/02.Kernel64/Source/LocalAPIC.h	44;"	d
ASSEMBLYOBJECTFILES	01.Kernel32/makefile	/^ASSEMBLYOBJECTFILES = $(notdir $(patsubst %.asm,%.o,$(ASSEMBLYSOURCEFILES)))$/;"	m
ASSEMBLYOBJECTFILES	02.Kernel64/makefile	/^ASSEMBLYOBJECTFILES = $(notdir $(patsubst %.asm,%.o,$(ASSEMBLYSOURCEFILES)))$/;"	m
ASSEMBLYOBJECTFILES	save/02.Kernel64/makefile	/^ASSEMBLYOBJECTFILES = $(notdir $(patsubst %.asm,%.o,$(ASSEMBLYSOURCEFILES)))$/;"	m
ASSEMBLYSOURCEFILES	01.Kernel32/makefile	/^ASSEMBLYSOURCEFILES = $(wildcard ..\/$(SOURCEDIRECTORY)\/*.asm)$/;"	m
ASSEMBLYSOURCEFILES	02.Kernel64/makefile	/^ASSEMBLYSOURCEFILES = $(wildcard ..\/$(SOURCEDIRECTORY)\/*.asm)$/;"	m
ASSEMBLYSOURCEFILES	save/02.Kernel64/makefile	/^ASSEMBLYSOURCEFILES = $(wildcard ..\/$(SOURCEDIRECTORY)\/*.asm)$/;"	m
AdjustInSectorSize	04.Utility/00.ImageMaker/ImageMaker.c	/^int AdjustInSectorSize( int iFd, int iSourceSize )$/;"	f
BITMAP	02.Kernel64/Source/DynamicMemory.h	/^} BITMAP;$/;"	t	typeref:struct:kBitmapStruct
BITMAP	save/02.Kernel64/Source/DynamicMemory.h	/^} BITMAP;$/;"	t	typeref:struct:kBitmapStruct
BOOL	01.Kernel32/Source/Types.h	8;"	d
BOOL	02.Kernel64/Source/Types.h	8;"	d
BOOL	save/02.Kernel64/Source/Types.h	8;"	d
BOOTSTRAPPROCESSOR	00.BootLoader/BootLoader.asm	/^BOOTSTRAPPROCESSOR:	db	0x01		; Bootstrap PRocessor인지 여부 $/;"	d
BOOTSTRAPPROCESSOR_FLAGADDESS	02.Kernel64/Source/MultiProcessor.h	8;"	d
BOOTSTRAPPROCESSOR_FLAGADDESS	save/02.Kernel64/Source/MultiProcessor.h	8;"	d
BOOTSTRAPPROCESSOR_FLAGADDRESS	01.Kernel32/Source/main.c	12;"	d	file:
BUSENTRY	02.Kernel64/Source/MPConfigurationTable.h	/^} BUSENTRY;$/;"	t	typeref:struct:kBusEntryStruct
BUSENTRY	save/02.Kernel64/Source/MPConfigurationTable.h	/^} BUSENTRY;$/;"	t	typeref:struct:kBusEntryStruct
BYTE	01.Kernel32/Source/Types.h	4;"	d
BYTE	02.Kernel64/Source/Types.h	4;"	d
BYTE	04.Utility/01.SerialTransfer/NetworkTransfer.c	14;"	d	file:
BYTE	save/02.Kernel64/Source/Types.h	4;"	d
BYTESOFSECTOR	04.Utility/00.ImageMaker/ImageMaker.c	9;"	d	file:
CACHEBUFFER	02.Kernel64/Source/CacheManager.h	/^} CACHEBUFFER;$/;"	t	typeref:struct:kCacheBufferStruct
CACHEBUFFER	save/02.Kernel64/Source/CacheManager.h	/^} CACHEBUFFER;$/;"	t	typeref:struct:kCacheBufferStruct
CACHEMANAGER	02.Kernel64/Source/CacheManager.h	/^} CACHEMANAGER;$/;"	t	typeref:struct:kCacheManagerStruct
CACHEMANAGER	save/02.Kernel64/Source/CacheManager.h	/^} CACHEMANAGER;$/;"	t	typeref:struct:kCacheManagerStruct
CACHE_CLUSTERLINKTABLEAREA	02.Kernel64/Source/CacheManager.h	17;"	d
CACHE_CLUSTERLINKTABLEAREA	save/02.Kernel64/Source/CacheManager.h	17;"	d
CACHE_DATAAREA	02.Kernel64/Source/CacheManager.h	19;"	d
CACHE_DATAAREA	save/02.Kernel64/Source/CacheManager.h	19;"	d
CACHE_INVALIDTAG	02.Kernel64/Source/CacheManager.h	12;"	d
CACHE_INVALIDTAG	save/02.Kernel64/Source/CacheManager.h	12;"	d
CACHE_MAXCACHETABLEINDEX	02.Kernel64/Source/CacheManager.h	15;"	d
CACHE_MAXCACHETABLEINDEX	save/02.Kernel64/Source/CacheManager.h	15;"	d
CACHE_MAXCLUSTERLINKTABLEAREACOUNT	02.Kernel64/Source/CacheManager.h	8;"	d
CACHE_MAXCLUSTERLINKTABLEAREACOUNT	save/02.Kernel64/Source/CacheManager.h	8;"	d
CACHE_MAXDATAAREACOUNT	02.Kernel64/Source/CacheManager.h	10;"	d
CACHE_MAXDATAAREACOUNT	save/02.Kernel64/Source/CacheManager.h	10;"	d
CENTRYPOINTOBJECTFILE	01.Kernel32/makefile	/^CENTRYPOINTOBJECTFILE = main.o$/;"	m
CHARACTER	01.Kernel32/Source/Types.h	/^} CHARACTER;$/;"	t	typeref:struct:kCharactorStruct
CHARACTER	02.Kernel64/Source/Types.h	/^} CHARACTER;$/;"	t	typeref:struct:kCharactorStruct
CHARACTER	save/02.Kernel64/Source/Types.h	/^} CHARACTER;$/;"	t	typeref:struct:kCharactorStruct
COBJECTFILES	01.Kernel32/makefile	/^COBJECTFILES = $(subst main.o, , $(notdir $(patsubst %.c,%.o,$(CSOURCEFILES))))$/;"	m
COBJECTFILES	02.Kernel64/makefile	/^COBJECTFILES =  $(notdir $(patsubst %.c,%.o,$(CSOURCEFILES)))$/;"	m
COBJECTFILES	save/02.Kernel64/makefile	/^COBJECTFILES =  $(notdir $(patsubst %.c,%.o,$(CSOURCEFILES)))$/;"	m
CODEDESCRIPTOR	01.Kernel32/Source/EntryPoint.s	/^CODEDESCRIPTOR:$/;"	l
CONSOLEMANAGER	02.Kernel64/Source/Console.h	/^} CONSOLEMANAGER;$/;"	t	typeref:struct:kConsoleManagerStruct
CONSOLEMANAGER	save/02.Kernel64/Source/Console.h	/^} CONSOLEMANAGER;$/;"	t	typeref:struct:kConsoleManagerStruct
CONSOLESHELL_MAXCOMMANDBUFFERCOUNT	02.Kernel64/Source/ConsoleShell.h	7;"	d
CONSOLESHELL_MAXCOMMANDBUFFERCOUNT	save/02.Kernel64/Source/ConsoleShell.h	7;"	d
CONSOLESHELL_PROMPRTMESSAGE	02.Kernel64/Source/ConsoleShell.h	8;"	d
CONSOLESHELL_PROMPRTMESSAGE	save/02.Kernel64/Source/ConsoleShell.h	8;"	d
CONSOLE_BACKGROUND_BLACK	02.Kernel64/Source/Console.h	8;"	d
CONSOLE_BACKGROUND_BLACK	save/02.Kernel64/Source/Console.h	8;"	d
CONSOLE_BACKGROUND_BLINK	02.Kernel64/Source/Console.h	16;"	d
CONSOLE_BACKGROUND_BLINK	save/02.Kernel64/Source/Console.h	16;"	d
CONSOLE_BACKGROUND_BLUE	02.Kernel64/Source/Console.h	9;"	d
CONSOLE_BACKGROUND_BLUE	save/02.Kernel64/Source/Console.h	9;"	d
CONSOLE_BACKGROUND_BROWN	02.Kernel64/Source/Console.h	14;"	d
CONSOLE_BACKGROUND_BROWN	save/02.Kernel64/Source/Console.h	14;"	d
CONSOLE_BACKGROUND_CYAN	02.Kernel64/Source/Console.h	11;"	d
CONSOLE_BACKGROUND_CYAN	save/02.Kernel64/Source/Console.h	11;"	d
CONSOLE_BACKGROUND_GREEN	02.Kernel64/Source/Console.h	10;"	d
CONSOLE_BACKGROUND_GREEN	save/02.Kernel64/Source/Console.h	10;"	d
CONSOLE_BACKGROUND_MAGENTA	02.Kernel64/Source/Console.h	13;"	d
CONSOLE_BACKGROUND_MAGENTA	save/02.Kernel64/Source/Console.h	13;"	d
CONSOLE_BACKGROUND_RED	02.Kernel64/Source/Console.h	12;"	d
CONSOLE_BACKGROUND_RED	save/02.Kernel64/Source/Console.h	12;"	d
CONSOLE_BACKGROUND_WHITE	02.Kernel64/Source/Console.h	15;"	d
CONSOLE_BACKGROUND_WHITE	save/02.Kernel64/Source/Console.h	15;"	d
CONSOLE_DEFAULTTEXTCOLOR	02.Kernel64/Source/Console.h	35;"	d
CONSOLE_DEFAULTTEXTCOLOR	save/02.Kernel64/Source/Console.h	35;"	d
CONSOLE_FOREGROUND_BRIGHTBLACK	02.Kernel64/Source/Console.h	25;"	d
CONSOLE_FOREGROUND_BRIGHTBLACK	save/02.Kernel64/Source/Console.h	25;"	d
CONSOLE_FOREGROUND_BRIGHTBLUE	02.Kernel64/Source/Console.h	26;"	d
CONSOLE_FOREGROUND_BRIGHTBLUE	save/02.Kernel64/Source/Console.h	26;"	d
CONSOLE_FOREGROUND_BRIGHTCYAN	02.Kernel64/Source/Console.h	28;"	d
CONSOLE_FOREGROUND_BRIGHTCYAN	save/02.Kernel64/Source/Console.h	28;"	d
CONSOLE_FOREGROUND_BRIGHTGREEN	02.Kernel64/Source/Console.h	27;"	d
CONSOLE_FOREGROUND_BRIGHTGREEN	save/02.Kernel64/Source/Console.h	27;"	d
CONSOLE_FOREGROUND_BRIGHTMAGENTA	02.Kernel64/Source/Console.h	30;"	d
CONSOLE_FOREGROUND_BRIGHTMAGENTA	save/02.Kernel64/Source/Console.h	30;"	d
CONSOLE_FOREGROUND_BRIGHTRED	02.Kernel64/Source/Console.h	29;"	d
CONSOLE_FOREGROUND_BRIGHTRED	save/02.Kernel64/Source/Console.h	29;"	d
CONSOLE_FOREGROUND_BRIGHTWHITE	02.Kernel64/Source/Console.h	32;"	d
CONSOLE_FOREGROUND_BRIGHTWHITE	save/02.Kernel64/Source/Console.h	32;"	d
CONSOLE_FOREGROUND_BRIGHTYELLOW	02.Kernel64/Source/Console.h	31;"	d
CONSOLE_FOREGROUND_BRIGHTYELLOW	save/02.Kernel64/Source/Console.h	31;"	d
CONSOLE_FOREGROUND_DARKBLACK	02.Kernel64/Source/Console.h	17;"	d
CONSOLE_FOREGROUND_DARKBLACK	save/02.Kernel64/Source/Console.h	17;"	d
CONSOLE_FOREGROUND_DARKBLUE	02.Kernel64/Source/Console.h	18;"	d
CONSOLE_FOREGROUND_DARKBLUE	save/02.Kernel64/Source/Console.h	18;"	d
CONSOLE_FOREGROUND_DARKBROWN	02.Kernel64/Source/Console.h	23;"	d
CONSOLE_FOREGROUND_DARKBROWN	save/02.Kernel64/Source/Console.h	23;"	d
CONSOLE_FOREGROUND_DARKCYAN	02.Kernel64/Source/Console.h	20;"	d
CONSOLE_FOREGROUND_DARKCYAN	save/02.Kernel64/Source/Console.h	20;"	d
CONSOLE_FOREGROUND_DARKGREEN	02.Kernel64/Source/Console.h	19;"	d
CONSOLE_FOREGROUND_DARKGREEN	save/02.Kernel64/Source/Console.h	19;"	d
CONSOLE_FOREGROUND_DARKMAGENTA	02.Kernel64/Source/Console.h	22;"	d
CONSOLE_FOREGROUND_DARKMAGENTA	save/02.Kernel64/Source/Console.h	22;"	d
CONSOLE_FOREGROUND_DARKRED	02.Kernel64/Source/Console.h	21;"	d
CONSOLE_FOREGROUND_DARKRED	save/02.Kernel64/Source/Console.h	21;"	d
CONSOLE_FOREGROUND_DARKWHITE	02.Kernel64/Source/Console.h	24;"	d
CONSOLE_FOREGROUND_DARKWHITE	save/02.Kernel64/Source/Console.h	24;"	d
CONSOLE_HEIGHT	02.Kernel64/Source/Console.h	40;"	d
CONSOLE_HEIGHT	save/02.Kernel64/Source/Console.h	40;"	d
CONSOLE_VIDEOMEMORYADDRESS	02.Kernel64/Source/Console.h	41;"	d
CONSOLE_VIDEOMEMORYADDRESS	save/02.Kernel64/Source/Console.h	41;"	d
CONSOLE_WIDTH	02.Kernel64/Source/Console.h	39;"	d
CONSOLE_WIDTH	save/02.Kernel64/Source/Console.h	39;"	d
CONTEXT	02.Kernel64/Source/Task.h	/^} CONTEXT;$/;"	t	typeref:struct:kContextStruct
CONTEXT	save/02.Kernel64/Source/Task.h	/^} CONTEXT;$/;"	t	typeref:struct:kContextStruct
CSOURCEFILES	01.Kernel32/makefile	/^CSOURCEFILES = $(wildcard ..\/$(SOURCEDIRECTORY)\/*.c)$/;"	m
CSOURCEFILES	02.Kernel64/makefile	/^CSOURCEFILES = $(wildcard ..\/$(SOURCEDIRECTORY)\/*.c)$/;"	m
CSOURCEFILES	save/02.Kernel64/makefile	/^CSOURCEFILES = $(wildcard ..\/$(SOURCEDIRECTORY)\/*.c)$/;"	m
CommandFunction	02.Kernel64/Source/ConsoleShell.h	/^typedef void (*CommandFunction)(const char* pcParameter);$/;"	t
CommandFunction	save/02.Kernel64/Source/ConsoleShell.h	/^typedef void (*CommandFunction)(const char* pcParameter);$/;"	t
CopyFile	04.Utility/00.ImageMaker/ImageMaker.c	/^int CopyFile( int iSourceFd, int iTargetFd )$/;"	f
DATADESCRIPTOR	01.Kernel32/Source/EntryPoint.s	/^DATADESCRIPTOR:$/;"	l
DIR	02.Kernel64/Source/FileSystem.h	/^} FILE, DIR;$/;"	t	typeref:struct:kFileDirectoryHandleStruct
DIR	save/02.Kernel64/Source/FileSystem.h	/^} FILE, DIR;$/;"	t	typeref:struct:kFileDirectoryHandleStruct
DIRECTORYENTRY	02.Kernel64/Source/FileSystem.h	/^} DIRECTORYENTRY;$/;"	t	typeref:struct:kDirectoryEntryStruct
DIRECTORYENTRY	save/02.Kernel64/Source/FileSystem.h	/^} DIRECTORYENTRY;$/;"	t	typeref:struct:kDirectoryEntryStruct
DIRECTORYHANDLE	02.Kernel64/Source/FileSystem.h	/^} DIRECTORYHANDLE;$/;"	t	typeref:struct:kDirectoryHandleStruct
DIRECTORYHANDLE	save/02.Kernel64/Source/FileSystem.h	/^} DIRECTORYHANDLE;$/;"	t	typeref:struct:kDirectoryHandleStruct
DISKERRORMESSAGE	00.BootLoader/BootLoader.asm	/^DISKERRORMESSAGE:	db	'DISK Error~!!',0$/;"	d
DISKERRORMESSAGE	00.BootLoader/BootLoader2.asm	/^DISKERRORMESSAGE:	db	'DISK Error~!!',0$/;"	d
DWORD	01.Kernel32/Source/Types.h	6;"	d
DWORD	02.Kernel64/Source/Types.h	6;"	d
DWORD	04.Utility/01.SerialTransfer/NetworkTransfer.c	13;"	d	file:
DWORD	save/02.Kernel64/Source/Types.h	6;"	d
DYNAMICMEMORY	02.Kernel64/Source/DynamicMemory.h	/^} DYNAMICMEMORY;$/;"	t	typeref:struct:kDynamicMemoryManagerStruct
DYNAMICMEMORY	save/02.Kernel64/Source/DynamicMemory.h	/^} DYNAMICMEMORY;$/;"	t	typeref:struct:kDynamicMemoryManagerStruct
DYNAMICMEMORY_EMPTY	02.Kernel64/Source/DynamicMemory.h	17;"	d
DYNAMICMEMORY_EMPTY	save/02.Kernel64/Source/DynamicMemory.h	16;"	d
DYNAMICMEMORY_EXIST	02.Kernel64/Source/DynamicMemory.h	16;"	d
DYNAMICMEMORY_EXIST	save/02.Kernel64/Source/DynamicMemory.h	15;"	d
DYNAMICMEMORY_MIN_SIZE	02.Kernel64/Source/DynamicMemory.h	13;"	d
DYNAMICMEMORY_MIN_SIZE	save/02.Kernel64/Source/DynamicMemory.h	12;"	d
DYNAMICMEMORY_START_ADDRESS	02.Kernel64/Source/DynamicMemory.h	9;"	d
DYNAMICMEMORY_START_ADDRESS	save/02.Kernel64/Source/DynamicMemory.h	8;"	d
ENTRYPOINTOBJECTFILE	02.Kernel64/makefile	/^ENTRYPOINTOBJECTFILE = EntryPoint.o$/;"	m
ENTRYPOINTOBJECTFILE	save/02.Kernel64/makefile	/^ENTRYPOINTOBJECTFILE = EntryPoint.o$/;"	m
ENTRYPOINTSOURCEFILE	02.Kernel64/makefile	/^ENTRYPOINTSOURCEFILE = ..\/$(SOURCEDIRECTORY)\/EntryPoint.s$/;"	m
ENTRYPOINTSOURCEFILE	save/02.Kernel64/makefile	/^ENTRYPOINTSOURCEFILE = ..\/$(SOURCEDIRECTORY)\/EntryPoint.s$/;"	m
FALSE	01.Kernel32/Source/Types.h	11;"	d
FALSE	02.Kernel64/Source/Types.h	11;"	d
FALSE	save/02.Kernel64/Source/Types.h	11;"	d
FILE	02.Kernel64/Source/FileSystem.h	/^} FILE, DIR;$/;"	t	typeref:struct:kFileDirectoryHandleStruct
FILE	save/02.Kernel64/Source/FileSystem.h	/^} FILE, DIR;$/;"	t	typeref:struct:kFileDirectoryHandleStruct
FILEHANDLE	02.Kernel64/Source/FileSystem.h	/^} FILEHANDLE;$/;"	t	typeref:struct:kFileHandleStruct
FILEHANDLE	save/02.Kernel64/Source/FileSystem.h	/^} FILEHANDLE;$/;"	t	typeref:struct:kFileHandleStruct
FILESYSTEMMANAGER	02.Kernel64/Source/FileSystem.h	/^} FILESYSTEMMANAGER;$/;"	t	typeref:struct:kFileSystemManagerStruct
FILESYSTEMMANAGER	save/02.Kernel64/Source/FileSystem.h	/^} FILESYSTEMMANAGER;$/;"	t	typeref:struct:kFileSystemManagerStruct
FILESYSTEM_CLUSTERSIZE	02.Kernel64/Source/FileSystem.h	21;"	d
FILESYSTEM_CLUSTERSIZE	save/02.Kernel64/Source/FileSystem.h	21;"	d
FILESYSTEM_FREECLUSTER	02.Kernel64/Source/FileSystem.h	17;"	d
FILESYSTEM_FREECLUSTER	save/02.Kernel64/Source/FileSystem.h	17;"	d
FILESYSTEM_HANDLE_MAXCOUNT	02.Kernel64/Source/FileSystem.h	24;"	d
FILESYSTEM_HANDLE_MAXCOUNT	save/02.Kernel64/Source/FileSystem.h	24;"	d
FILESYSTEM_LASTCLUSTER	02.Kernel64/Source/FileSystem.h	15;"	d
FILESYSTEM_LASTCLUSTER	save/02.Kernel64/Source/FileSystem.h	15;"	d
FILESYSTEM_MAXDIRECTORYENTRYCOUNT	02.Kernel64/Source/FileSystem.h	19;"	d
FILESYSTEM_MAXDIRECTORYENTRYCOUNT	save/02.Kernel64/Source/FileSystem.h	19;"	d
FILESYSTEM_MAXFILENAMELENGTH	02.Kernel64/Source/FileSystem.h	27;"	d
FILESYSTEM_MAXFILENAMELENGTH	save/02.Kernel64/Source/FileSystem.h	27;"	d
FILESYSTEM_SECTORPERCLUSTER	02.Kernel64/Source/FileSystem.h	13;"	d
FILESYSTEM_SECTORPERCLUSTER	save/02.Kernel64/Source/FileSystem.h	13;"	d
FILESYSTEM_SEEK_CUR	02.Kernel64/Source/FileSystem.h	36;"	d
FILESYSTEM_SEEK_CUR	save/02.Kernel64/Source/FileSystem.h	36;"	d
FILESYSTEM_SEEK_END	02.Kernel64/Source/FileSystem.h	37;"	d
FILESYSTEM_SEEK_END	save/02.Kernel64/Source/FileSystem.h	37;"	d
FILESYSTEM_SEEK_SET	02.Kernel64/Source/FileSystem.h	35;"	d
FILESYSTEM_SEEK_SET	save/02.Kernel64/Source/FileSystem.h	35;"	d
FILESYSTEM_SIGNATUR	02.Kernel64/Source/FileSystem.h	11;"	d
FILESYSTEM_SIGNATUR	save/02.Kernel64/Source/FileSystem.h	11;"	d
FILESYSTEM_TYPE_DIRECTORY	02.Kernel64/Source/FileSystem.h	32;"	d
FILESYSTEM_TYPE_DIRECTORY	save/02.Kernel64/Source/FileSystem.h	32;"	d
FILESYSTEM_TYPE_FILE	02.Kernel64/Source/FileSystem.h	31;"	d
FILESYSTEM_TYPE_FILE	save/02.Kernel64/Source/FileSystem.h	31;"	d
FILESYSTEM_TYPE_FREE	02.Kernel64/Source/FileSystem.h	30;"	d
FILESYSTEM_TYPE_FREE	save/02.Kernel64/Source/FileSystem.h	30;"	d
GCC32	01.Kernel32/makefile	/^GCC32 = x86_64-pc-linux-gcc -g -c -m32 -ffreestanding$/;"	m
GCC64	02.Kernel64/makefile	/^GCC64 = x86_64-pc-linux-gcc -g -c -m64 -ffreestanding$/;"	m
GCC64	save/02.Kernel64/makefile	/^GCC64 = x86_64-pc-linux-gcc -g -c -m64 -ffreestanding$/;"	m
GDT	01.Kernel32/Source/EntryPoint.s	/^GDT:$/;"	l
GDTEND	01.Kernel32/Source/EntryPoint.s	/^GDTEND:$/;"	l
GDTENTRY16	02.Kernel64/Source/Descriptor.h	/^} GDTENTRY16;$/;"	t	typeref:struct:kGDTEntry16struct
GDTENTRY16	save/02.Kernel64/Source/Descriptor.h	/^} GDTENTRY16;$/;"	t	typeref:struct:kGDTEntry16struct
GDTENTRY8	02.Kernel64/Source/Descriptor.h	/^} GDTENTRY8;$/;"	t	typeref:struct:kGDTEntry8Struct
GDTENTRY8	save/02.Kernel64/Source/Descriptor.h	/^} GDTENTRY8;$/;"	t	typeref:struct:kGDTEntry8Struct
GDTR	01.Kernel32/Source/EntryPoint.s	/^GDTR:$/;"	l
GDTR	02.Kernel64/Source/Descriptor.h	/^} GDTR,IDTR;$/;"	t	typeref:struct:kGDTRStruct
GDTR	save/02.Kernel64/Source/Descriptor.h	/^} GDTR,IDTR;$/;"	t	typeref:struct:kGDTRStruct
GDTR_STARTADDRESS	02.Kernel64/Source/Descriptor.h	45;"	d
GDTR_STARTADDRESS	save/02.Kernel64/Source/Descriptor.h	45;"	d
GDT_FLAGS_LOWER_DPL0	02.Kernel64/Source/Descriptor.h	16;"	d
GDT_FLAGS_LOWER_DPL0	save/02.Kernel64/Source/Descriptor.h	16;"	d
GDT_FLAGS_LOWER_DPL1	02.Kernel64/Source/Descriptor.h	17;"	d
GDT_FLAGS_LOWER_DPL1	save/02.Kernel64/Source/Descriptor.h	17;"	d
GDT_FLAGS_LOWER_DPL2	02.Kernel64/Source/Descriptor.h	18;"	d
GDT_FLAGS_LOWER_DPL2	save/02.Kernel64/Source/Descriptor.h	18;"	d
GDT_FLAGS_LOWER_DPL3	02.Kernel64/Source/Descriptor.h	19;"	d
GDT_FLAGS_LOWER_DPL3	save/02.Kernel64/Source/Descriptor.h	19;"	d
GDT_FLAGS_LOWER_KERNELCODE	02.Kernel64/Source/Descriptor.h	27;"	d
GDT_FLAGS_LOWER_KERNELCODE	save/02.Kernel64/Source/Descriptor.h	27;"	d
GDT_FLAGS_LOWER_KERNELDATA	02.Kernel64/Source/Descriptor.h	28;"	d
GDT_FLAGS_LOWER_KERNELDATA	save/02.Kernel64/Source/Descriptor.h	28;"	d
GDT_FLAGS_LOWER_P	02.Kernel64/Source/Descriptor.h	20;"	d
GDT_FLAGS_LOWER_P	save/02.Kernel64/Source/Descriptor.h	20;"	d
GDT_FLAGS_LOWER_S	02.Kernel64/Source/Descriptor.h	15;"	d
GDT_FLAGS_LOWER_S	save/02.Kernel64/Source/Descriptor.h	15;"	d
GDT_FLAGS_LOWER_TSS	02.Kernel64/Source/Descriptor.h	29;"	d
GDT_FLAGS_LOWER_TSS	save/02.Kernel64/Source/Descriptor.h	29;"	d
GDT_FLAGS_LOWER_USERCODE	02.Kernel64/Source/Descriptor.h	30;"	d
GDT_FLAGS_LOWER_USERCODE	save/02.Kernel64/Source/Descriptor.h	30;"	d
GDT_FLAGS_LOWER_USERDATA	02.Kernel64/Source/Descriptor.h	31;"	d
GDT_FLAGS_LOWER_USERDATA	save/02.Kernel64/Source/Descriptor.h	31;"	d
GDT_FLAGS_UPPER_CODE	02.Kernel64/Source/Descriptor.h	34;"	d
GDT_FLAGS_UPPER_CODE	save/02.Kernel64/Source/Descriptor.h	34;"	d
GDT_FLAGS_UPPER_DATA	02.Kernel64/Source/Descriptor.h	35;"	d
GDT_FLAGS_UPPER_DATA	save/02.Kernel64/Source/Descriptor.h	35;"	d
GDT_FLAGS_UPPER_DB	02.Kernel64/Source/Descriptor.h	22;"	d
GDT_FLAGS_UPPER_DB	save/02.Kernel64/Source/Descriptor.h	22;"	d
GDT_FLAGS_UPPER_G	02.Kernel64/Source/Descriptor.h	23;"	d
GDT_FLAGS_UPPER_G	save/02.Kernel64/Source/Descriptor.h	23;"	d
GDT_FLAGS_UPPER_L	02.Kernel64/Source/Descriptor.h	21;"	d
GDT_FLAGS_UPPER_L	save/02.Kernel64/Source/Descriptor.h	21;"	d
GDT_FLAGS_UPPER_TSS	02.Kernel64/Source/Descriptor.h	36;"	d
GDT_FLAGS_UPPER_TSS	save/02.Kernel64/Source/Descriptor.h	36;"	d
GDT_KERNELCODESEGMENT	02.Kernel64/Source/Descriptor.h	39;"	d
GDT_KERNELCODESEGMENT	save/02.Kernel64/Source/Descriptor.h	39;"	d
GDT_KERNELDATASEGMENT	02.Kernel64/Source/Descriptor.h	40;"	d
GDT_KERNELDATASEGMENT	save/02.Kernel64/Source/Descriptor.h	40;"	d
GDT_MAXENTRY16COUNT	02.Kernel64/Source/Descriptor.h	49;"	d
GDT_MAXENTRY16COUNT	save/02.Kernel64/Source/Descriptor.h	49;"	d
GDT_MAXENTRY8COUNT	02.Kernel64/Source/Descriptor.h	47;"	d
GDT_MAXENTRY8COUNT	save/02.Kernel64/Source/Descriptor.h	47;"	d
GDT_TABLESIZE	02.Kernel64/Source/Descriptor.h	51;"	d
GDT_TABLESIZE	save/02.Kernel64/Source/Descriptor.h	51;"	d
GDT_TSSSEGMENT	02.Kernel64/Source/Descriptor.h	41;"	d
GDT_TSSSEGMENT	save/02.Kernel64/Source/Descriptor.h	41;"	d
GDT_TYPE_CODE	02.Kernel64/Source/Descriptor.h	12;"	d
GDT_TYPE_CODE	save/02.Kernel64/Source/Descriptor.h	12;"	d
GDT_TYPE_DATA	02.Kernel64/Source/Descriptor.h	13;"	d
GDT_TYPE_DATA	save/02.Kernel64/Source/Descriptor.h	13;"	d
GDT_TYPE_TSS	02.Kernel64/Source/Descriptor.h	14;"	d
GDT_TYPE_TSS	save/02.Kernel64/Source/Descriptor.h	14;"	d
GETPRIORITY	02.Kernel64/Source/Task.h	72;"	d
GETPRIORITY	save/02.Kernel64/Source/Task.h	71;"	d
GETTCBFROMTHREADLINK	02.Kernel64/Source/Task.h	77;"	d
GETTCBFROMTHREADLINK	save/02.Kernel64/Source/Task.h	76;"	d
GETTCBOFFSET	02.Kernel64/Source/Task.h	74;"	d
GETTCBOFFSET	save/02.Kernel64/Source/Task.h	73;"	d
HANDLEDISKERROR	00.BootLoader/BootLoader.asm	/^HANDLEDISKERROR:$/;"	l
HANDLEDISKERROR	00.BootLoader/BootLoader2.asm	/^HANDLEDISKERROR:$/;"	l
HDDINFORMATION	02.Kernel64/Source/HardDisk.h	/^} HDDINFORMATION;$/;"	t	typeref:struct:kHDDInformationStruct
HDDINFORMATION	save/02.Kernel64/Source/HardDisk.h	/^} HDDINFORMATION;$/;"	t	typeref:struct:kHDDInformationStruct
HDDMANAGER	02.Kernel64/Source/HardDisk.h	/^} HDDMANAGER;$/;"	t	typeref:struct:kHDDManagerStruct
HDDMANAGER	save/02.Kernel64/Source/HardDisk.h	/^} HDDMANAGER;$/;"	t	typeref:struct:kHDDManagerStruct
HDD_COMMAND_IDENTIFY	02.Kernel64/Source/HardDisk.h	26;"	d
HDD_COMMAND_IDENTIFY	save/02.Kernel64/Source/HardDisk.h	26;"	d
HDD_COMMAND_READ	02.Kernel64/Source/HardDisk.h	24;"	d
HDD_COMMAND_READ	save/02.Kernel64/Source/HardDisk.h	24;"	d
HDD_COMMAND_WRITE	02.Kernel64/Source/HardDisk.h	25;"	d
HDD_COMMAND_WRITE	save/02.Kernel64/Source/HardDisk.h	25;"	d
HDD_DIGITALOUTPUT_DISABLEINTERRUPT	02.Kernel64/Source/HardDisk.h	44;"	d
HDD_DIGITALOUTPUT_DISABLEINTERRUPT	save/02.Kernel64/Source/HardDisk.h	44;"	d
HDD_DIGITALOUTPUT_RESET	02.Kernel64/Source/HardDisk.h	43;"	d
HDD_DIGITALOUTPUT_RESET	save/02.Kernel64/Source/HardDisk.h	43;"	d
HDD_DRIVEANDHEAD_LBA	02.Kernel64/Source/HardDisk.h	39;"	d
HDD_DRIVEANDHEAD_LBA	save/02.Kernel64/Source/HardDisk.h	39;"	d
HDD_DRIVEANDHEAD_SLAVE	02.Kernel64/Source/HardDisk.h	40;"	d
HDD_DRIVEANDHEAD_SLAVE	save/02.Kernel64/Source/HardDisk.h	40;"	d
HDD_MAXBULKSECTORCOUNT	02.Kernel64/Source/HardDisk.h	49;"	d
HDD_MAXBULKSECTORCOUNT	save/02.Kernel64/Source/HardDisk.h	49;"	d
HDD_PORT_INDEX_COMMAND	02.Kernel64/Source/HardDisk.h	20;"	d
HDD_PORT_INDEX_COMMAND	save/02.Kernel64/Source/HardDisk.h	20;"	d
HDD_PORT_INDEX_CYLINDERLSB	02.Kernel64/Source/HardDisk.h	16;"	d
HDD_PORT_INDEX_CYLINDERLSB	save/02.Kernel64/Source/HardDisk.h	16;"	d
HDD_PORT_INDEX_CYLINDERMSB	02.Kernel64/Source/HardDisk.h	17;"	d
HDD_PORT_INDEX_CYLINDERMSB	save/02.Kernel64/Source/HardDisk.h	17;"	d
HDD_PORT_INDEX_DATA	02.Kernel64/Source/HardDisk.h	13;"	d
HDD_PORT_INDEX_DATA	save/02.Kernel64/Source/HardDisk.h	13;"	d
HDD_PORT_INDEX_DIGITALOUTPUT	02.Kernel64/Source/HardDisk.h	21;"	d
HDD_PORT_INDEX_DIGITALOUTPUT	save/02.Kernel64/Source/HardDisk.h	21;"	d
HDD_PORT_INDEX_DRIVEANDHEAD	02.Kernel64/Source/HardDisk.h	18;"	d
HDD_PORT_INDEX_DRIVEANDHEAD	save/02.Kernel64/Source/HardDisk.h	18;"	d
HDD_PORT_INDEX_SECTORCOUNT	02.Kernel64/Source/HardDisk.h	14;"	d
HDD_PORT_INDEX_SECTORCOUNT	save/02.Kernel64/Source/HardDisk.h	14;"	d
HDD_PORT_INDEX_SECTORNUMBER	02.Kernel64/Source/HardDisk.h	15;"	d
HDD_PORT_INDEX_SECTORNUMBER	save/02.Kernel64/Source/HardDisk.h	15;"	d
HDD_PORT_INDEX_STATUS	02.Kernel64/Source/HardDisk.h	19;"	d
HDD_PORT_INDEX_STATUS	save/02.Kernel64/Source/HardDisk.h	19;"	d
HDD_PORT_PRIMARYBASE	02.Kernel64/Source/HardDisk.h	9;"	d
HDD_PORT_PRIMARYBASE	save/02.Kernel64/Source/HardDisk.h	9;"	d
HDD_PORT_SECONDARYBASE	02.Kernel64/Source/HardDisk.h	10;"	d
HDD_PORT_SECONDARYBASE	save/02.Kernel64/Source/HardDisk.h	10;"	d
HDD_STATUS_BUSY	02.Kernel64/Source/HardDisk.h	36;"	d
HDD_STATUS_BUSY	save/02.Kernel64/Source/HardDisk.h	36;"	d
HDD_STATUS_CORRECTEDDATA	02.Kernel64/Source/HardDisk.h	31;"	d
HDD_STATUS_CORRECTEDDATA	save/02.Kernel64/Source/HardDisk.h	31;"	d
HDD_STATUS_DATAREQUEST	02.Kernel64/Source/HardDisk.h	32;"	d
HDD_STATUS_DATAREQUEST	save/02.Kernel64/Source/HardDisk.h	32;"	d
HDD_STATUS_ERROR	02.Kernel64/Source/HardDisk.h	29;"	d
HDD_STATUS_ERROR	save/02.Kernel64/Source/HardDisk.h	29;"	d
HDD_STATUS_INDEX	02.Kernel64/Source/HardDisk.h	30;"	d
HDD_STATUS_INDEX	save/02.Kernel64/Source/HardDisk.h	30;"	d
HDD_STATUS_READY	02.Kernel64/Source/HardDisk.h	35;"	d
HDD_STATUS_READY	save/02.Kernel64/Source/HardDisk.h	35;"	d
HDD_STATUS_SEEKCOMPLETE	02.Kernel64/Source/HardDisk.h	33;"	d
HDD_STATUS_SEEKCOMPLETE	save/02.Kernel64/Source/HardDisk.h	33;"	d
HDD_STATUS_WRITEFAULT	02.Kernel64/Source/HardDisk.h	34;"	d
HDD_STATUS_WRITEFAULT	save/02.Kernel64/Source/HardDisk.h	34;"	d
HDD_WAITTIME	02.Kernel64/Source/HardDisk.h	47;"	d
HDD_WAITTIME	save/02.Kernel64/Source/HardDisk.h	47;"	d
HEADNUMBER	00.BootLoader/BootLoader.asm	/^HEADNUMBER:		db	0x00			; OS 이미지가 시작하는 헤드 번호를 지정하는 영역 $/;"	d
HEADNUMBER	00.BootLoader/BootLoader2.asm	/^HEADNUMBER:		db	0x00			; OS 이미지가 시작하는 헤드 번호를 지정하는 영역 $/;"	d
IA_32eCODEDESCRIPTOR	01.Kernel32/Source/EntryPoint.s	/^IA_32eCODEDESCRIPTOR:$/;"	l
IA_32eDATADESCRIPTOR	01.Kernel32/Source/EntryPoint.s	/^IA_32eDATADESCRIPTOR:$/;"	l
IDTENTRY	02.Kernel64/Source/Descriptor.h	/^} IDTENTRY;$/;"	t	typeref:struct:kIDTEntryStruct
IDTENTRY	save/02.Kernel64/Source/Descriptor.h	/^} IDTENTRY;$/;"	t	typeref:struct:kIDTEntryStruct
IDTR	02.Kernel64/Source/Descriptor.h	/^} GDTR,IDTR;$/;"	t	typeref:struct:kGDTRStruct
IDTR	save/02.Kernel64/Source/Descriptor.h	/^} GDTR,IDTR;$/;"	t	typeref:struct:kGDTRStruct
IDTR_STARTADDRESS	02.Kernel64/Source/Descriptor.h	78;"	d
IDTR_STARTADDRESS	save/02.Kernel64/Source/Descriptor.h	78;"	d
IDT_FLAGS_DPL0	02.Kernel64/Source/Descriptor.h	61;"	d
IDT_FLAGS_DPL0	save/02.Kernel64/Source/Descriptor.h	61;"	d
IDT_FLAGS_DPL1	02.Kernel64/Source/Descriptor.h	62;"	d
IDT_FLAGS_DPL1	save/02.Kernel64/Source/Descriptor.h	62;"	d
IDT_FLAGS_DPL2	02.Kernel64/Source/Descriptor.h	63;"	d
IDT_FLAGS_DPL2	save/02.Kernel64/Source/Descriptor.h	63;"	d
IDT_FLAGS_DPL3	02.Kernel64/Source/Descriptor.h	64;"	d
IDT_FLAGS_DPL3	save/02.Kernel64/Source/Descriptor.h	64;"	d
IDT_FLAGS_IST0	02.Kernel64/Source/Descriptor.h	66;"	d
IDT_FLAGS_IST0	save/02.Kernel64/Source/Descriptor.h	66;"	d
IDT_FLAGS_IST1	02.Kernel64/Source/Descriptor.h	67;"	d
IDT_FLAGS_IST1	save/02.Kernel64/Source/Descriptor.h	67;"	d
IDT_FLAGS_KERNEL	02.Kernel64/Source/Descriptor.h	71;"	d
IDT_FLAGS_KERNEL	save/02.Kernel64/Source/Descriptor.h	71;"	d
IDT_FLAGS_P	02.Kernel64/Source/Descriptor.h	65;"	d
IDT_FLAGS_P	save/02.Kernel64/Source/Descriptor.h	65;"	d
IDT_FLAGS_USER	02.Kernel64/Source/Descriptor.h	72;"	d
IDT_FLAGS_USER	save/02.Kernel64/Source/Descriptor.h	72;"	d
IDT_MAXENTRYCOUNT	02.Kernel64/Source/Descriptor.h	76;"	d
IDT_MAXENTRYCOUNT	save/02.Kernel64/Source/Descriptor.h	76;"	d
IDT_STARTADDRESS	02.Kernel64/Source/Descriptor.h	80;"	d
IDT_STARTADDRESS	save/02.Kernel64/Source/Descriptor.h	80;"	d
IDT_TABLESIZE	02.Kernel64/Source/Descriptor.h	82;"	d
IDT_TABLESIZE	save/02.Kernel64/Source/Descriptor.h	82;"	d
IDT_TYPE_INTERRUPT	02.Kernel64/Source/Descriptor.h	59;"	d
IDT_TYPE_INTERRUPT	save/02.Kernel64/Source/Descriptor.h	59;"	d
IDT_TYPE_TRAP	02.Kernel64/Source/Descriptor.h	60;"	d
IDT_TYPE_TRAP	save/02.Kernel64/Source/Descriptor.h	60;"	d
IMAGELOADINGMESSAGE	00.BootLoader/BootLoader.asm	/^IMAGELOADINGMESSAGE:	db 'OS Image Loading...',0$/;"	d
IMAGELOADINGMESSAGE	00.BootLoader/BootLoader2.asm	/^IMAGELOADINGMESSAGE:	db 'OS Image Loading...',0$/;"	d
INTERRUPTMANAGER	02.Kernel64/Source/InterruptHandler.h	/^} INTERRUPTMANAGER;$/;"	t	typeref:struct:kInterruptManagerStruct
INTERRUPT_LOADBALANCINGDIVIDOR	02.Kernel64/Source/InterruptHandler.h	11;"	d
INTERRUPT_MAXVECTORCOUNT	02.Kernel64/Source/InterruptHandler.h	9;"	d
IOAPICENTRY	02.Kernel64/Source/MPConfigurationTable.h	/^} IOAPICENTRY;$/;"	t	typeref:struct:kIOAPICEntryStruct
IOAPICENTRY	save/02.Kernel64/Source/MPConfigurationTable.h	/^} IOAPICENTRY;$/;"	t	typeref:struct:kIOAPICEntryStruct
IOAPICMANAGER	02.Kernel64/Source/IOAPIC.h	/^} IOAPICMANAGER;$/;"	t	typeref:struct:kIOAPICManagerStruct
IOAPIC_DELIVERYMODE_EXTINT	02.Kernel64/Source/IOAPIC.h	51;"	d
IOAPIC_DELIVERYMODE_FIXED	02.Kernel64/Source/IOAPIC.h	46;"	d
IOAPIC_DELIVERYMODE_INIT	02.Kernel64/Source/IOAPIC.h	50;"	d
IOAPIC_DELIVERYMODE_LOWESTPRIORITY	02.Kernel64/Source/IOAPIC.h	47;"	d
IOAPIC_DELIVERYMODE_NMI	02.Kernel64/Source/IOAPIC.h	49;"	d
IOAPIC_DELIVERYMODE_SMI	02.Kernel64/Source/IOAPIC.h	48;"	d
IOAPIC_DELIVERYSTATUS_IDLE	02.Kernel64/Source/IOAPIC.h	39;"	d
IOAPIC_DELIVERYSTATUS_SENDPENDING	02.Kernel64/Source/IOAPIC.h	38;"	d
IOAPIC_DESTINATIONMODE_LOGICALMODE	02.Kernel64/Source/IOAPIC.h	42;"	d
IOAPIC_DESTINATIONMODE_PHYSICALMODE	02.Kernel64/Source/IOAPIC.h	43;"	d
IOAPIC_INTERRUPT_MASK	02.Kernel64/Source/IOAPIC.h	22;"	d
IOAPIC_MAXIOREDIRECTIONTABLECOUNT	02.Kernel64/Source/IOAPIC.h	19;"	d
IOAPIC_MAXIRQTOINTINMAPCOUNT	02.Kernel64/Source/IOAPIC.h	54;"	d
IOAPIC_POLARITY_ACTIVEHIGH	02.Kernel64/Source/IOAPIC.h	34;"	d
IOAPIC_POLARITY_ACTIVELOW	02.Kernel64/Source/IOAPIC.h	33;"	d
IOAPIC_REGISTERINDEX_HIGHIOREDIRECTIONTABLE	02.Kernel64/Source/IOAPIC.h	16;"	d
IOAPIC_REGISTERINDEX_IOAPICARBID	02.Kernel64/Source/IOAPIC.h	14;"	d
IOAPIC_REGISTERINDEX_IOAPICID	02.Kernel64/Source/IOAPIC.h	12;"	d
IOAPIC_REGISTERINDEX_IOAPICVERSION	02.Kernel64/Source/IOAPIC.h	13;"	d
IOAPIC_REGISTERINDEX_LOWIOREDIRECTIONTABLE	02.Kernel64/Source/IOAPIC.h	15;"	d
IOAPIC_REGISTER_IOREGISTERSELECTOR	02.Kernel64/Source/IOAPIC.h	8;"	d
IOAPIC_REGISTER_IOWINDOW	02.Kernel64/Source/IOAPIC.h	9;"	d
IOAPIC_REMOTEIRR_ACCEPT	02.Kernel64/Source/IOAPIC.h	30;"	d
IOAPIC_REMOTEIRR_EOI	02.Kernel64/Source/IOAPIC.h	29;"	d
IOAPIC_TRIGGERMODE_EDGE	02.Kernel64/Source/IOAPIC.h	26;"	d
IOAPIC_TRIGGERMODE_LEVEL	02.Kernel64/Source/IOAPIC.h	25;"	d
IOINTERRUPTASSIGNMENTENTRY	02.Kernel64/Source/MPConfigurationTable.h	/^} IOINTERRUPTASSIGNMENTENTRY;$/;"	t	typeref:struct:kIOInterruptAssignmentEntryStruct
IOINTERRUPTASSIGNMENTENTRY	save/02.Kernel64/Source/MPConfigurationTable.h	/^} IOINTERRUPTASSIGNMENTENTRY;$/;"	t	typeref:struct:kIOInterruptAssignmentEntryStruct
IOREDIRECTIONTABLE	02.Kernel64/Source/IOAPIC.h	/^} IOREDIRECTIONTABLE;$/;"	t	typeref:struct:kIOREdirectionTableStrcut
IST_SIZE	02.Kernel64/Source/Descriptor.h	88;"	d
IST_SIZE	save/02.Kernel64/Source/Descriptor.h	88;"	d
IST_STARTADDRESS	02.Kernel64/Source/Descriptor.h	86;"	d
IST_STARTADDRESS	save/02.Kernel64/Source/Descriptor.h	86;"	d
KERNEL32SECTORCOUNT	00.BootLoader/BootLoader.asm	/^KERNEL32SECTORCOUNT: dw 0x02 		; 보호 모드 커널의 총 섹터 수$/;"	d
KEYBOARDMANAGER	02.Kernel64/Source/Keyboard.h	/^} KEYBOARDMANAGER;$/;"	t	typeref:struct:kKeyboardManagerStruct
KEYBOARDMANAGER	save/02.Kernel64/Source/Keyboard.h	/^} KEYBOARDMANAGER;$/;"	t	typeref:struct:kKeyboardManagerStruct
KEYDATA	02.Kernel64/Source/Keyboard.h	/^} KEYDATA;$/;"	t	typeref:struct:kKeyDataStruct
KEYDATA	save/02.Kernel64/Source/Keyboard.h	/^} KEYDATA;$/;"	t	typeref:struct:kKeyDataStruct
KEYMAPPINGENTRY	02.Kernel64/Source/Keyboard.h	/^} KEYMAPPINGENTRY;$/;"	t	typeref:struct:kKeyMappingEntryStruct
KEYMAPPINGENTRY	save/02.Kernel64/Source/Keyboard.h	/^} KEYMAPPINGENTRY;$/;"	t	typeref:struct:kKeyMappingEntryStruct
KEY_BACKSPACE	02.Kernel64/Source/Keyboard.h	23;"	d
KEY_BACKSPACE	save/02.Kernel64/Source/Keyboard.h	22;"	d
KEY_CAPSLOCK	02.Kernel64/Source/Keyboard.h	30;"	d
KEY_CAPSLOCK	save/02.Kernel64/Source/Keyboard.h	29;"	d
KEY_CENTER	02.Kernel64/Source/Keyboard.h	47;"	d
KEY_CENTER	save/02.Kernel64/Source/Keyboard.h	46;"	d
KEY_CTRL	02.Kernel64/Source/Keyboard.h	25;"	d
KEY_CTRL	save/02.Kernel64/Source/Keyboard.h	24;"	d
KEY_DEL	02.Kernel64/Source/Keyboard.h	53;"	d
KEY_DEL	save/02.Kernel64/Source/Keyboard.h	52;"	d
KEY_DOWN	02.Kernel64/Source/Keyboard.h	50;"	d
KEY_DOWN	save/02.Kernel64/Source/Keyboard.h	49;"	d
KEY_END	02.Kernel64/Source/Keyboard.h	49;"	d
KEY_END	save/02.Kernel64/Source/Keyboard.h	48;"	d
KEY_ENTER	02.Kernel64/Source/Keyboard.h	20;"	d
KEY_ENTER	save/02.Kernel64/Source/Keyboard.h	19;"	d
KEY_ESC	02.Kernel64/Source/Keyboard.h	22;"	d
KEY_ESC	save/02.Kernel64/Source/Keyboard.h	21;"	d
KEY_F1	02.Kernel64/Source/Keyboard.h	31;"	d
KEY_F1	save/02.Kernel64/Source/Keyboard.h	30;"	d
KEY_F10	02.Kernel64/Source/Keyboard.h	40;"	d
KEY_F10	save/02.Kernel64/Source/Keyboard.h	39;"	d
KEY_F11	02.Kernel64/Source/Keyboard.h	54;"	d
KEY_F11	save/02.Kernel64/Source/Keyboard.h	53;"	d
KEY_F12	02.Kernel64/Source/Keyboard.h	55;"	d
KEY_F12	save/02.Kernel64/Source/Keyboard.h	54;"	d
KEY_F2	02.Kernel64/Source/Keyboard.h	32;"	d
KEY_F2	save/02.Kernel64/Source/Keyboard.h	31;"	d
KEY_F3	02.Kernel64/Source/Keyboard.h	33;"	d
KEY_F3	save/02.Kernel64/Source/Keyboard.h	32;"	d
KEY_F4	02.Kernel64/Source/Keyboard.h	34;"	d
KEY_F4	save/02.Kernel64/Source/Keyboard.h	33;"	d
KEY_F5	02.Kernel64/Source/Keyboard.h	35;"	d
KEY_F5	save/02.Kernel64/Source/Keyboard.h	34;"	d
KEY_F6	02.Kernel64/Source/Keyboard.h	36;"	d
KEY_F6	save/02.Kernel64/Source/Keyboard.h	35;"	d
KEY_F7	02.Kernel64/Source/Keyboard.h	37;"	d
KEY_F7	save/02.Kernel64/Source/Keyboard.h	36;"	d
KEY_F8	02.Kernel64/Source/Keyboard.h	38;"	d
KEY_F8	save/02.Kernel64/Source/Keyboard.h	37;"	d
KEY_F9	02.Kernel64/Source/Keyboard.h	39;"	d
KEY_F9	save/02.Kernel64/Source/Keyboard.h	38;"	d
KEY_FLAGS_DOWN	02.Kernel64/Source/Keyboard.h	13;"	d
KEY_FLAGS_DOWN	save/02.Kernel64/Source/Keyboard.h	12;"	d
KEY_FLAGS_EXTENDEDKEY	02.Kernel64/Source/Keyboard.h	14;"	d
KEY_FLAGS_EXTENDEDKEY	save/02.Kernel64/Source/Keyboard.h	13;"	d
KEY_FLAGS_UP	02.Kernel64/Source/Keyboard.h	12;"	d
KEY_FLAGS_UP	save/02.Kernel64/Source/Keyboard.h	11;"	d
KEY_HOME	02.Kernel64/Source/Keyboard.h	43;"	d
KEY_HOME	save/02.Kernel64/Source/Keyboard.h	42;"	d
KEY_INS	02.Kernel64/Source/Keyboard.h	52;"	d
KEY_INS	save/02.Kernel64/Source/Keyboard.h	51;"	d
KEY_LALT	02.Kernel64/Source/Keyboard.h	29;"	d
KEY_LALT	save/02.Kernel64/Source/Keyboard.h	28;"	d
KEY_LEFT	02.Kernel64/Source/Keyboard.h	46;"	d
KEY_LEFT	save/02.Kernel64/Source/Keyboard.h	45;"	d
KEY_LSHIFT	02.Kernel64/Source/Keyboard.h	26;"	d
KEY_LSHIFT	save/02.Kernel64/Source/Keyboard.h	25;"	d
KEY_MAPPINGTABLEMAXCOUNT	02.Kernel64/Source/Keyboard.h	17;"	d
KEY_MAPPINGTABLEMAXCOUNT	save/02.Kernel64/Source/Keyboard.h	16;"	d
KEY_MAXQUEUECOUNT	02.Kernel64/Source/Keyboard.h	59;"	d
KEY_MAXQUEUECOUNT	save/02.Kernel64/Source/Keyboard.h	58;"	d
KEY_NONE	02.Kernel64/Source/Keyboard.h	19;"	d
KEY_NONE	save/02.Kernel64/Source/Keyboard.h	18;"	d
KEY_NUMLOCK	02.Kernel64/Source/Keyboard.h	41;"	d
KEY_NUMLOCK	save/02.Kernel64/Source/Keyboard.h	40;"	d
KEY_PAGEDOWN	02.Kernel64/Source/Keyboard.h	51;"	d
KEY_PAGEDOWN	save/02.Kernel64/Source/Keyboard.h	50;"	d
KEY_PAGEUP	02.Kernel64/Source/Keyboard.h	45;"	d
KEY_PAGEUP	save/02.Kernel64/Source/Keyboard.h	44;"	d
KEY_PAUSE	02.Kernel64/Source/Keyboard.h	56;"	d
KEY_PAUSE	save/02.Kernel64/Source/Keyboard.h	55;"	d
KEY_PRINTSCREEN	02.Kernel64/Source/Keyboard.h	28;"	d
KEY_PRINTSCREEN	save/02.Kernel64/Source/Keyboard.h	27;"	d
KEY_RIGHT	02.Kernel64/Source/Keyboard.h	48;"	d
KEY_RIGHT	save/02.Kernel64/Source/Keyboard.h	47;"	d
KEY_RSHIFT	02.Kernel64/Source/Keyboard.h	27;"	d
KEY_RSHIFT	save/02.Kernel64/Source/Keyboard.h	26;"	d
KEY_SCROLLLOCK	02.Kernel64/Source/Keyboard.h	42;"	d
KEY_SCROLLLOCK	save/02.Kernel64/Source/Keyboard.h	41;"	d
KEY_SKIPCOUNTFORPAUSE	02.Kernel64/Source/Keyboard.h	9;"	d
KEY_SKIPCOUNTFORPAUSE	save/02.Kernel64/Source/Keyboard.h	8;"	d
KEY_TAB	02.Kernel64/Source/Keyboard.h	21;"	d
KEY_TAB	save/02.Kernel64/Source/Keyboard.h	20;"	d
KEY_UP	02.Kernel64/Source/Keyboard.h	44;"	d
KEY_UP	save/02.Kernel64/Source/Keyboard.h	43;"	d
LD32	01.Kernel32/makefile	/^LD32 = x86_64-pc-linux-ld -melf_i386 -T ..\/elf_i386.x -nostdlib -e main -Ttext 0x10200$/;"	m
LD64	02.Kernel64/makefile	/^LD64 = x86_64-pc-linux-ld -melf_x86_64 -T ..\/elf_x86_64.x -nostdlib -e main -Ttext 0x200000$/;"	m
LD64	save/02.Kernel64/makefile	/^LD64 = x86_64-pc-linux-ld -melf_x86_64 -T ..\/elf_x86_64.x -nostdlib -e main -Ttext 0x200000$/;"	m
LIST	02.Kernel64/Source/List.h	/^} LIST;$/;"	t	typeref:struct:kListManagerStruct
LIST	save/02.Kernel64/Source/List.h	/^} LIST;$/;"	t	typeref:struct:kListManagerStruct
LISTLINK	02.Kernel64/Source/List.h	/^} LISTLINK;$/;"	t	typeref:struct:kListLinkStruct
LISTLINK	save/02.Kernel64/Source/List.h	/^} LISTLINK;$/;"	t	typeref:struct:kListLinkStruct
LOADINGCOMPLETEMESSAGE	00.BootLoader/BootLoader.asm	/^LOADINGCOMPLETEMESSAGE: db ' Complete~!!', 0$/;"	d
LOADINGCOMPLETEMESSAGE	00.BootLoader/BootLoader2.asm	/^LOADINGCOMPLETEMESSAGE: db ' Complete~!!', 0$/;"	d
LOCALINTERRUPTASSIGNMENTENTRY	02.Kernel64/Source/MPConfigurationTable.h	/^} LOCALINTERRUPTASSIGNMENTENTRY;$/;"	t	typeref:struct:kLocalInterruptEntryStruct
LOCALINTERRUPTASSIGNMENTENTRY	save/02.Kernel64/Source/MPConfigurationTable.h	/^} LOCALINTERRUPTASSIGNMENTENTRY;$/;"	t	typeref:struct:kLocalInterruptEntryStruct
MAX	02.Kernel64/Source/Utility.h	9;"	d
MAX	save/02.Kernel64/Source/Utility.h	9;"	d
MAXPROCESSORCOUNT	02.Kernel64/Source/MultiProcessor.h	10;"	d
MAXPROCESSORCOUNT	save/02.Kernel64/Source/MultiProcessor.h	10;"	d
MBR	02.Kernel64/Source/FileSystem.h	/^} MBR;$/;"	t	typeref:struct:kMBRStruct
MBR	save/02.Kernel64/Source/FileSystem.h	/^} MBR;$/;"	t	typeref:struct:kMBRStruct
MESSAGE1	00.BootLoader/BootLoader.asm	/^MESSAGE1:	db 'MINT64 OS Boot Loader Start~!!',0 ; 출력할 메시지 정의 마지막은 0으로 설정하여 .MESSAGELOOP에서 문자열이 종료되었음을 알 수 있도록 함$/;"	d
MESSAGE1	00.BootLoader/BootLoader2.asm	/^MESSAGE1:	db 'MINT64 OS Boot Loader Start~!!',0 ; 출력할 메시지 정의 마지막은 0으로 설정하여 .MESSAGELOOP에서 문자열이 종료되었음을 알 수 있도록 함$/;"	d
MIN	02.Kernel64/Source/Utility.h	8;"	d
MIN	04.Utility/01.SerialTransfer/NetworkTransfer.c	15;"	d	file:
MIN	save/02.Kernel64/Source/Utility.h	8;"	d
MPCONFIGURATIONMANAGER	02.Kernel64/Source/MPConfigurationTable.h	/^} MPCONFIGURATIONMANAGER;$/;"	t	typeref:struct:kMPConfigurationManagerStruct
MPCONFIGURATIONMANAGER	save/02.Kernel64/Source/MPConfigurationTable.h	/^} MPCONFIGURATIONMANAGER;$/;"	t	typeref:struct:kMPConfigurationManagerStruct
MPCONFIGURATIONTABLEHEADER	02.Kernel64/Source/MPConfigurationTable.h	/^} MPCONFIGURATIONTABLEHEADER;$/;"	t	typeref:struct:kMPConfigurationTableHeaderStruct
MPCONFIGURATIONTABLEHEADER	save/02.Kernel64/Source/MPConfigurationTable.h	/^} MPCONFIGURATIONTABLEHEADER;$/;"	t	typeref:struct:kMPConfigurationTableHeaderStruct
MPFLOATINGPOINTER	02.Kernel64/Source/MPConfigurationTable.h	/^} MPFLOATINGPOINTER;$/;"	t	typeref:struct:kMPFloatingPointerStruct
MPFLOATINGPOINTER	save/02.Kernel64/Source/MPConfigurationTable.h	/^} MPFLOATINGPOINTER;$/;"	t	typeref:struct:kMPFloatingPointerStruct
MP_BUS_TYPESTRING_ISA	02.Kernel64/Source/MPConfigurationTable.h	23;"	d
MP_BUS_TYPESTRING_ISA	save/02.Kernel64/Source/MPConfigurationTable.h	23;"	d
MP_BUS_TYPESTRING_PCI	02.Kernel64/Source/MPConfigurationTable.h	24;"	d
MP_BUS_TYPESTRING_PCI	save/02.Kernel64/Source/MPConfigurationTable.h	24;"	d
MP_BUS_TYPESTRING_PCMCIA	02.Kernel64/Source/MPConfigurationTable.h	25;"	d
MP_BUS_TYPESTRING_PCMCIA	save/02.Kernel64/Source/MPConfigurationTable.h	25;"	d
MP_BUS_TYPESTRING_VESALOCALBUS	02.Kernel64/Source/MPConfigurationTable.h	26;"	d
MP_BUS_TYPESTRING_VESALOCALBUS	save/02.Kernel64/Source/MPConfigurationTable.h	26;"	d
MP_ENTRYTYPE_BUS	02.Kernel64/Source/MPConfigurationTable.h	13;"	d
MP_ENTRYTYPE_BUS	save/02.Kernel64/Source/MPConfigurationTable.h	13;"	d
MP_ENTRYTYPE_IOAPIC	02.Kernel64/Source/MPConfigurationTable.h	14;"	d
MP_ENTRYTYPE_IOAPIC	save/02.Kernel64/Source/MPConfigurationTable.h	14;"	d
MP_ENTRYTYPE_IOINTERRUPTASSIGNMENT	02.Kernel64/Source/MPConfigurationTable.h	15;"	d
MP_ENTRYTYPE_IOINTERRUPTASSIGNMENT	save/02.Kernel64/Source/MPConfigurationTable.h	15;"	d
MP_ENTRYTYPE_LOCALINTERRUPTASSIGNMENT	02.Kernel64/Source/MPConfigurationTable.h	16;"	d
MP_ENTRYTYPE_LOCALINTERRUPTASSIGNMENT	save/02.Kernel64/Source/MPConfigurationTable.h	16;"	d
MP_ENTRYTYPE_PROCESSOR	02.Kernel64/Source/MPConfigurationTable.h	12;"	d
MP_ENTRYTYPE_PROCESSOR	save/02.Kernel64/Source/MPConfigurationTable.h	12;"	d
MP_FLOATINGPOINTER_FEATUREBYTE1_USEMPTABLE	02.Kernel64/Source/MPConfigurationTable.h	8;"	d
MP_FLOATINGPOINTER_FEATUREBYTE1_USEMPTABLE	save/02.Kernel64/Source/MPConfigurationTable.h	8;"	d
MP_FLOATINGPOINTER_FEATUREBYTE2_PICMODE	02.Kernel64/Source/MPConfigurationTable.h	9;"	d
MP_FLOATINGPOINTER_FEATUREBYTE2_PICMODE	save/02.Kernel64/Source/MPConfigurationTable.h	9;"	d
MP_INTERRUPTTYPE_EXITINT	02.Kernel64/Source/MPConfigurationTable.h	32;"	d
MP_INTERRUPTTYPE_EXITINT	save/02.Kernel64/Source/MPConfigurationTable.h	32;"	d
MP_INTERRUPTTYPE_INT	02.Kernel64/Source/MPConfigurationTable.h	29;"	d
MP_INTERRUPTTYPE_INT	save/02.Kernel64/Source/MPConfigurationTable.h	29;"	d
MP_INTERRUPTTYPE_NMI	02.Kernel64/Source/MPConfigurationTable.h	30;"	d
MP_INTERRUPTTYPE_NMI	save/02.Kernel64/Source/MPConfigurationTable.h	30;"	d
MP_INTERRUPTTYPE_SMI	02.Kernel64/Source/MPConfigurationTable.h	31;"	d
MP_INTERRUPTTYPE_SMI	save/02.Kernel64/Source/MPConfigurationTable.h	31;"	d
MP_INTERRUPT_FLAGS_ACTIVELOW	02.Kernel64/Source/MPConfigurationTable.h	37;"	d
MP_INTERRUPT_FLAGS_ACTIVELOW	save/02.Kernel64/Source/MPConfigurationTable.h	37;"	d
MP_INTERRUPT_FLAGS_ACTIVVEHIGH	02.Kernel64/Source/MPConfigurationTable.h	36;"	d
MP_INTERRUPT_FLAGS_ACTIVVEHIGH	save/02.Kernel64/Source/MPConfigurationTable.h	36;"	d
MP_INTERRUPT_FLAGS_CONFORMPOLARITY	02.Kernel64/Source/MPConfigurationTable.h	35;"	d
MP_INTERRUPT_FLAGS_CONFORMPOLARITY	save/02.Kernel64/Source/MPConfigurationTable.h	35;"	d
MP_INTERRUPT_FLAGS_CONFORMTRIGGER	02.Kernel64/Source/MPConfigurationTable.h	38;"	d
MP_INTERRUPT_FLAGS_CONFORMTRIGGER	save/02.Kernel64/Source/MPConfigurationTable.h	38;"	d
MP_INTERRUPT_FLAGS_EDGETRIGGERED	02.Kernel64/Source/MPConfigurationTable.h	39;"	d
MP_INTERRUPT_FLAGS_EDGETRIGGERED	save/02.Kernel64/Source/MPConfigurationTable.h	39;"	d
MP_INTERRUPT_FLAGS_LEVELTRIGGERED	02.Kernel64/Source/MPConfigurationTable.h	40;"	d
MP_INTERRUPT_FLAGS_LEVELTRIGGERED	save/02.Kernel64/Source/MPConfigurationTable.h	40;"	d
MP_PROCESSOR_CPUFLAGS_BSP	02.Kernel64/Source/MPConfigurationTable.h	20;"	d
MP_PROCESSOR_CPUFLAGS_BSP	save/02.Kernel64/Source/MPConfigurationTable.h	20;"	d
MP_PROCESSOR_CPUFLAGS_ENABLE	02.Kernel64/Source/MPConfigurationTable.h	19;"	d
MP_PROCESSOR_CPUFLAGS_ENABLE	save/02.Kernel64/Source/MPConfigurationTable.h	19;"	d
MSTOCOUNT	02.Kernel64/Source/PIT.h	8;"	d
MSTOCOUNT	save/02.Kernel64/Source/PIT.h	8;"	d
MUTEX	02.Kernel64/Source/Synchronization.h	/^} MUTEX;$/;"	t	typeref:struct:kMutextStruct
MUTEX	save/02.Kernel64/Source/Synchronization.h	/^} MUTEX;$/;"	t	typeref:struct:kMutextStruct
NASM32	01.Kernel32/makefile	/^NASM32 = nasm$/;"	m
NASM64	02.Kernel64/makefile	/^NASM64 = nasm -f elf64 -g -F stabs$/;"	m
NASM64	save/02.Kernel64/makefile	/^NASM64 = nasm -f elf64 -g -F stabs$/;"	m
NULL	01.Kernel32/Source/Types.h	12;"	d
NULL	02.Kernel64/Source/Types.h	12;"	d
NULL	save/02.Kernel64/Source/Types.h	12;"	d
NULLDESCRIPTOR	01.Kernel32/Source/EntryPoint.s	/^NULLDESCRIPTOR:$/;"	l
OBJCOPY32	01.Kernel32/makefile	/^OBJCOPY32 = x86_64-pc-linux-objcopy -j .text -j .data -j .rodata -j .bss -S -O binary$/;"	m
OBJCOPY64	02.Kernel64/makefile	/^OBJCOPY64 = x86_64-pc-linux-objcopy -j .text -j .data -j .rodata -j .bss -S -O binary$/;"	m
OBJCOPY64	save/02.Kernel64/makefile	/^OBJCOPY64 = x86_64-pc-linux-objcopy -j .text -j .data -j .rodata -j .bss -S -O binary$/;"	m
OBJECTDIRECTORY	01.Kernel32/makefile	/^OBJECTDIRECTORY = Temp$/;"	m
OBJECTDIRECTORY	02.Kernel64/makefile	/^OBJECTDIRECTORY = Temp$/;"	m
OBJECTDIRECTORY	save/02.Kernel64/makefile	/^OBJECTDIRECTORY = Temp$/;"	m
PAGE_DEFAULTSIZE	01.Kernel32/Source/Page.h	21;"	d
PAGE_FLAGS_A	01.Kernel32/Source/Page.h	12;"	d
PAGE_FLAGS_D	01.Kernel32/Source/Page.h	13;"	d
PAGE_FLAGS_DEFAULT	01.Kernel32/Source/Page.h	18;"	d
PAGE_FLAGS_EXB	01.Kernel32/Source/Page.h	17;"	d
PAGE_FLAGS_G	01.Kernel32/Source/Page.h	15;"	d
PAGE_FLAGS_P	01.Kernel32/Source/Page.h	7;"	d
PAGE_FLAGS_PAT	01.Kernel32/Source/Page.h	16;"	d
PAGE_FLAGS_PCD	01.Kernel32/Source/Page.h	11;"	d
PAGE_FLAGS_PS	01.Kernel32/Source/Page.h	14;"	d
PAGE_FLAGS_PWT	01.Kernel32/Source/Page.h	10;"	d
PAGE_FLAGS_RW	01.Kernel32/Source/Page.h	8;"	d
PAGE_FLAGS_US	01.Kernel32/Source/Page.h	9;"	d
PAGE_MAXENTRYCOUNT	01.Kernel32/Source/Page.h	20;"	d
PAGE_TABLESIZE	01.Kernel32/Source/Page.h	19;"	d
PARAMETERLIST	02.Kernel64/Source/ConsoleShell.h	/^} PARAMETERLIST;$/;"	t	typeref:struct:kParameterListStruct
PARAMETERLIST	save/02.Kernel64/Source/ConsoleShell.h	/^} PARAMETERLIST;$/;"	t	typeref:struct:kParameterListStruct
PARTITION	02.Kernel64/Source/FileSystem.h	/^} PARTITION;$/;"	t	typeref:struct:kPartitionStruct
PARTITION	save/02.Kernel64/Source/FileSystem.h	/^} PARTITION;$/;"	t	typeref:struct:kPartitionStruct
PDENTRY	01.Kernel32/Source/Page.h	/^} PML4ENTRY,PDPTENTRY,PDENTRY,PTENTRY;$/;"	t	typeref:struct:kPageTableEntryStruct
PDPTENTRY	01.Kernel32/Source/Page.h	/^} PML4ENTRY,PDPTENTRY,PDENTRY,PTENTRY;$/;"	t	typeref:struct:kPageTableEntryStruct
PIC_IRQSTARTVECTOR	02.Kernel64/Source/PIC.h	14;"	d
PIC_IRQSTARTVECTOR	save/02.Kernel64/Source/PIC.h	14;"	d
PIC_MASTER_PORT1	02.Kernel64/Source/PIC.h	8;"	d
PIC_MASTER_PORT1	save/02.Kernel64/Source/PIC.h	8;"	d
PIC_MASTER_PORT2	02.Kernel64/Source/PIC.h	9;"	d
PIC_MASTER_PORT2	save/02.Kernel64/Source/PIC.h	9;"	d
PIC_SLAVE_PORT1	02.Kernel64/Source/PIC.h	10;"	d
PIC_SLAVE_PORT1	save/02.Kernel64/Source/PIC.h	10;"	d
PIC_SLAVE_PORT2	02.Kernel64/Source/PIC.h	11;"	d
PIC_SLAVE_PORT2	save/02.Kernel64/Source/PIC.h	11;"	d
PIT_CONTER0_LATCH	02.Kernel64/Source/PIT.h	32;"	d
PIT_CONTER0_LATCH	save/02.Kernel64/Source/PIT.h	32;"	d
PIT_CONTROL_BCDCOUNTER	02.Kernel64/Source/PIT.h	28;"	d
PIT_CONTROL_BCDCOUNTER	save/02.Kernel64/Source/PIT.h	28;"	d
PIT_CONTROL_BINARYCOUNTER	02.Kernel64/Source/PIT.h	27;"	d
PIT_CONTROL_BINARYCOUNTER	save/02.Kernel64/Source/PIT.h	27;"	d
PIT_CONTROL_COUNTER0	02.Kernel64/Source/PIT.h	18;"	d
PIT_CONTROL_COUNTER0	save/02.Kernel64/Source/PIT.h	18;"	d
PIT_CONTROL_COUNTER1	02.Kernel64/Source/PIT.h	19;"	d
PIT_CONTROL_COUNTER1	save/02.Kernel64/Source/PIT.h	19;"	d
PIT_CONTROL_COUNTER2	02.Kernel64/Source/PIT.h	20;"	d
PIT_CONTROL_COUNTER2	save/02.Kernel64/Source/PIT.h	20;"	d
PIT_CONTROL_LATCH	02.Kernel64/Source/PIT.h	22;"	d
PIT_CONTROL_LATCH	save/02.Kernel64/Source/PIT.h	22;"	d
PIT_CONTROL_LSBMSBRW	02.Kernel64/Source/PIT.h	21;"	d
PIT_CONTROL_LSBMSBRW	save/02.Kernel64/Source/PIT.h	21;"	d
PIT_CONTROL_MODE0	02.Kernel64/Source/PIT.h	23;"	d
PIT_CONTROL_MODE0	save/02.Kernel64/Source/PIT.h	23;"	d
PIT_CONTROL_MODE2	02.Kernel64/Source/PIT.h	24;"	d
PIT_CONTROL_MODE2	save/02.Kernel64/Source/PIT.h	24;"	d
PIT_COUNTER0_ONCE	02.Kernel64/Source/PIT.h	30;"	d
PIT_COUNTER0_ONCE	save/02.Kernel64/Source/PIT.h	30;"	d
PIT_COUNTER0_PERIODIC	02.Kernel64/Source/PIT.h	31;"	d
PIT_COUNTER0_PERIODIC	save/02.Kernel64/Source/PIT.h	31;"	d
PIT_FREQUENCY	02.Kernel64/Source/PIT.h	7;"	d
PIT_FREQUENCY	save/02.Kernel64/Source/PIT.h	7;"	d
PIT_PORT_CONTROL	02.Kernel64/Source/PIT.h	12;"	d
PIT_PORT_CONTROL	save/02.Kernel64/Source/PIT.h	12;"	d
PIT_PORT_COUNTER0	02.Kernel64/Source/PIT.h	13;"	d
PIT_PORT_COUNTER0	save/02.Kernel64/Source/PIT.h	13;"	d
PIT_PORT_COUNTER1	02.Kernel64/Source/PIT.h	14;"	d
PIT_PORT_COUNTER1	save/02.Kernel64/Source/PIT.h	14;"	d
PIT_PORT_COUNTER2	02.Kernel64/Source/PIT.h	15;"	d
PIT_PORT_COUNTER2	save/02.Kernel64/Source/PIT.h	15;"	d
PML4ENTRY	01.Kernel32/Source/Page.h	/^} PML4ENTRY,PDPTENTRY,PDENTRY,PTENTRY;$/;"	t	typeref:struct:kPageTableEntryStruct
PRINTMESSAGE	00.BootLoader/BootLoader.asm	/^PRINTMESSAGE:$/;"	l
PRINTMESSAGE	00.BootLoader/BootLoader2.asm	/^PRINTMESSAGE:$/;"	l
PRINTMESSAGE	01.Kernel32/Source/EntryPoint.s	/^PRINTMESSAGE:$/;"	l
PROCESSORENTRY	02.Kernel64/Source/MPConfigurationTable.h	/^} PROCESSORENTRY;$/;"	t	typeref:struct:kProcessorEntryStruct
PROCESSORENTRY	save/02.Kernel64/Source/MPConfigurationTable.h	/^} PROCESSORENTRY;$/;"	t	typeref:struct:kProcessorEntryStruct
PROTECTEDMODE	01.Kernel32/Source/EntryPoint.s	/^PROTECTEDMODE:$/;"	l
PTENTRY	01.Kernel32/Source/Page.h	/^} PML4ENTRY,PDPTENTRY,PDENTRY,PTENTRY;$/;"	t	typeref:struct:kPageTableEntryStruct
QUEUE	02.Kernel64/Source/Queue.h	/^} QUEUE;$/;"	t	typeref:struct:kQueueManagerStruct
QUEUE	save/02.Kernel64/Source/Queue.h	/^} QUEUE;$/;"	t	typeref:struct:kQueueManagerStruct
QWORD	01.Kernel32/Source/Types.h	7;"	d
QWORD	02.Kernel64/Source/Types.h	7;"	d
QWORD	save/02.Kernel64/Source/Types.h	7;"	d
RDDMANAGER	02.Kernel64/Source/RAMDisk.h	/^} RDDMANAGER;$/;"	t	typeref:struct:kRDDManagerStruct
RDDMANAGER	save/02.Kernel64/Source/RAMDisk.h	/^} RDDMANAGER;$/;"	t	typeref:struct:kRDDManagerStruct
RDD_TOTALSECTORCOUNT	02.Kernel64/Source/RAMDisk.h	11;"	d
RDD_TOTALSECTORCOUNT	save/02.Kernel64/Source/RAMDisk.h	11;"	d
READDATA	00.BootLoader/BootLoader.asm	/^READDATA:							; 디스크를 읽는 코드의 시작$/;"	l
READDATA	00.BootLoader/BootLoader2.asm	/^READDATA:							; 디스크를 읽는 코드의 시작$/;"	l
READDISK	00.BootLoader/BootLoader.asm	/^READDISK:							; 디스크를 리셋하는 코드의 시작$/;"	l
READDISK	00.BootLoader/BootLoader2.asm	/^READDISK:							; 디스크를 리셋하는 코드의 시작$/;"	l
READEND	00.BootLoader/BootLoader.asm	/^READEND:$/;"	l
READEND	00.BootLoader/BootLoader2.asm	/^READEND:$/;"	l
RTC_ADDRESS_DAYOFMONTH	02.Kernel64/Source/RTC.h	16;"	d
RTC_ADDRESS_DAYOFMONTH	save/02.Kernel64/Source/RTC.h	16;"	d
RTC_ADDRESS_DAYOFWEEK	02.Kernel64/Source/RTC.h	15;"	d
RTC_ADDRESS_DAYOFWEEK	save/02.Kernel64/Source/RTC.h	15;"	d
RTC_ADDRESS_HOUR	02.Kernel64/Source/RTC.h	14;"	d
RTC_ADDRESS_HOUR	save/02.Kernel64/Source/RTC.h	14;"	d
RTC_ADDRESS_MINUTE	02.Kernel64/Source/RTC.h	13;"	d
RTC_ADDRESS_MINUTE	save/02.Kernel64/Source/RTC.h	13;"	d
RTC_ADDRESS_MONTH	02.Kernel64/Source/RTC.h	17;"	d
RTC_ADDRESS_MONTH	save/02.Kernel64/Source/RTC.h	17;"	d
RTC_ADDRESS_SECOND	02.Kernel64/Source/RTC.h	12;"	d
RTC_ADDRESS_SECOND	save/02.Kernel64/Source/RTC.h	12;"	d
RTC_ADDRESS_YEAR	02.Kernel64/Source/RTC.h	18;"	d
RTC_ADDRESS_YEAR	save/02.Kernel64/Source/RTC.h	18;"	d
RTC_BCDTOBINARY	02.Kernel64/Source/RTC.h	21;"	d
RTC_BCDTOBINARY	save/02.Kernel64/Source/RTC.h	21;"	d
RTC_CMOSADDRESS	02.Kernel64/Source/RTC.h	8;"	d
RTC_CMOSADDRESS	save/02.Kernel64/Source/RTC.h	8;"	d
RTC_CMOSDATA	02.Kernel64/Source/RTC.h	9;"	d
RTC_CMOSDATA	save/02.Kernel64/Source/RTC.h	9;"	d
SCHEDULER	02.Kernel64/Source/Task.h	/^} SCHEDULER;$/;"	t	typeref:struct:kSchedulerStruct
SCHEDULER	save/02.Kernel64/Source/Task.h	/^} SCHEDULER;$/;"	t	typeref:struct:kSchedulerStruct
SECTION	00.BootLoader/BootLoader.asm	/^SECTION .text      					; text 섹션(세그먼트)을 정의$/;"	l
SECTION	00.BootLoader/BootLoader2.asm	/^SECTION .text      					; text 섹션(세그먼트)을 정의$/;"	l
SECTION	01.Kernel32/Source/EntryPoint.s	/^SECTION .text				; text 섹션(세그먼트)을 정의$/;"	l
SECTION	01.Kernel32/Source/ModeSwitch.asm	/^SECTION .text				; .text 섹션(세그먼트)을 정의$/;"	l
SECTION	01.Kernel32/VirtualOS.asm	/^SECTION .text       ; text 섹션(세그먼트)을 정의$/;"	l
SECTION	02.Kernel64/Source/AssemblyUtility.asm	/^SECTION .text					; text 섹션(세그먼트)을 정의$/;"	l
SECTION	02.Kernel64/Source/EntryPoint.s	/^SECTION .text					; .text 섹션(세그먼트)을 정의$/;"	l
SECTION	02.Kernel64/Source/ISR.asm	/^SECTION .text       ; text 섹션(세그먼트)을 정의$/;"	l
SECTION	save/02.Kernel64/Source/AssemblyUtility.asm	/^SECTION .text					; text 섹션(세그먼트)을 정의$/;"	l
SECTION	save/02.Kernel64/Source/EntryPoint.s	/^SECTION .text					; .text 섹션(세그먼트)을 정의$/;"	l
SECTION	save/02.Kernel64/Source/ISR.asm	/^SECTION .text       ; text 섹션(세그먼트)을 정의$/;"	l
SECTORCOUNT	01.Kernel32/VirtualOS.asm	/^SECTORCOUNT:        dw  0x0000      ; 현재 실행 중인 섹터 번호를 저장$/;"	d
SECTORNUMBER	00.BootLoader/BootLoader.asm	/^SECTORNUMBER:	db	0x02			; OS 이미지가 시작하는 섹터 번호를 저장하는 영역 (MBR는 부트로더)$/;"	d
SECTORNUMBER	00.BootLoader/BootLoader2.asm	/^SECTORNUMBER:	db	0x02			; OS 이미지가 시작하는 섹터 번호를 저장하는 영역 (MBR는 부트로더)$/;"	d
SEEK_CUR	02.Kernel64/Source/FileSystem.h	58;"	d
SEEK_CUR	save/02.Kernel64/Source/FileSystem.h	58;"	d
SEEK_END	02.Kernel64/Source/FileSystem.h	59;"	d
SEEK_END	save/02.Kernel64/Source/FileSystem.h	59;"	d
SEEK_SET	02.Kernel64/Source/FileSystem.h	57;"	d
SEEK_SET	save/02.Kernel64/Source/FileSystem.h	57;"	d
SERIALMANAGER	02.Kernel64/Source/SerialPort.h	/^} SERIALMANAGER;$/;"	t	typeref:struct:kSerialPortManager
SERIALMANAGER	save/02.Kernel64/Source/SerialPort.h	/^} SERIALMANAGER;$/;"	t	typeref:struct:kSerialPortManager
SERIAL_DIVISORLATCH_115200	02.Kernel64/Source/SerialPort.h	65;"	d
SERIAL_DIVISORLATCH_115200	save/02.Kernel64/Source/SerialPort.h	65;"	d
SERIAL_DIVISORLATCH_19200	02.Kernel64/Source/SerialPort.h	68;"	d
SERIAL_DIVISORLATCH_19200	save/02.Kernel64/Source/SerialPort.h	68;"	d
SERIAL_DIVISORLATCH_2400	02.Kernel64/Source/SerialPort.h	71;"	d
SERIAL_DIVISORLATCH_2400	save/02.Kernel64/Source/SerialPort.h	71;"	d
SERIAL_DIVISORLATCH_38400	02.Kernel64/Source/SerialPort.h	67;"	d
SERIAL_DIVISORLATCH_38400	save/02.Kernel64/Source/SerialPort.h	67;"	d
SERIAL_DIVISORLATCH_4800	02.Kernel64/Source/SerialPort.h	70;"	d
SERIAL_DIVISORLATCH_4800	save/02.Kernel64/Source/SerialPort.h	70;"	d
SERIAL_DIVISORLATCH_57600	02.Kernel64/Source/SerialPort.h	66;"	d
SERIAL_DIVISORLATCH_57600	save/02.Kernel64/Source/SerialPort.h	66;"	d
SERIAL_DIVISORLATCH_9600	02.Kernel64/Source/SerialPort.h	69;"	d
SERIAL_DIVISORLATCH_9600	save/02.Kernel64/Source/SerialPort.h	69;"	d
SERIAL_FIFOCONTROL_14BYTEFIFO	02.Kernel64/Source/SerialPort.h	42;"	d
SERIAL_FIFOCONTROL_14BYTEFIFO	save/02.Kernel64/Source/SerialPort.h	42;"	d
SERIAL_FIFOCONTROL_1BYTEFIFO	02.Kernel64/Source/SerialPort.h	39;"	d
SERIAL_FIFOCONTROL_1BYTEFIFO	save/02.Kernel64/Source/SerialPort.h	39;"	d
SERIAL_FIFOCONTROL_4BYTEFIFO	02.Kernel64/Source/SerialPort.h	40;"	d
SERIAL_FIFOCONTROL_4BYTEFIFO	save/02.Kernel64/Source/SerialPort.h	40;"	d
SERIAL_FIFOCONTROL_8BYTEFIFO	02.Kernel64/Source/SerialPort.h	41;"	d
SERIAL_FIFOCONTROL_8BYTEFIFO	save/02.Kernel64/Source/SerialPort.h	41;"	d
SERIAL_FIFOCONTROL_CLEARRECEIVEFIFO	02.Kernel64/Source/SerialPort.h	36;"	d
SERIAL_FIFOCONTROL_CLEARRECEIVEFIFO	save/02.Kernel64/Source/SerialPort.h	36;"	d
SERIAL_FIFOCONTROL_CLEARTRANSMITFIFO	02.Kernel64/Source/SerialPort.h	37;"	d
SERIAL_FIFOCONTROL_CLEARTRANSMITFIFO	save/02.Kernel64/Source/SerialPort.h	37;"	d
SERIAL_FIFOCONTROL_ENABLEDMA	02.Kernel64/Source/SerialPort.h	38;"	d
SERIAL_FIFOCONTROL_ENABLEDMA	save/02.Kernel64/Source/SerialPort.h	38;"	d
SERIAL_FIFOCONTROL_FIFOENABLE	02.Kernel64/Source/SerialPort.h	35;"	d
SERIAL_FIFOCONTROL_FIFOENABLE	save/02.Kernel64/Source/SerialPort.h	35;"	d
SERIAL_FIFOMAXSIZE	02.Kernel64/Source/SerialPort.h	74;"	d
SERIAL_FIFOMAXSIZE	04.Utility/01.SerialTransfer/NetworkTransfer.c	18;"	d	file:
SERIAL_FIFOMAXSIZE	save/02.Kernel64/Source/SerialPort.h	74;"	d
SERIAL_INTERRUPTENABLE_DELTASTATUS	02.Kernel64/Source/SerialPort.h	32;"	d
SERIAL_INTERRUPTENABLE_DELTASTATUS	save/02.Kernel64/Source/SerialPort.h	32;"	d
SERIAL_INTERRUPTENABLE_LINESTATUS	02.Kernel64/Source/SerialPort.h	31;"	d
SERIAL_INTERRUPTENABLE_LINESTATUS	save/02.Kernel64/Source/SerialPort.h	31;"	d
SERIAL_INTERRUPTENABLE_RECEIVEBUFFERFULL	02.Kernel64/Source/SerialPort.h	29;"	d
SERIAL_INTERRUPTENABLE_RECEIVEBUFFERFULL	save/02.Kernel64/Source/SerialPort.h	29;"	d
SERIAL_INTERRUPTENABLE_TRANSMITTERBUFFEREMPTY	02.Kernel64/Source/SerialPort.h	30;"	d
SERIAL_INTERRUPTENABLE_TRANSMITTERBUFFEREMPTY	save/02.Kernel64/Source/SerialPort.h	30;"	d
SERIAL_LINECONTROL_1BITSTOP	02.Kernel64/Source/SerialPort.h	46;"	d
SERIAL_LINECONTROL_1BITSTOP	save/02.Kernel64/Source/SerialPort.h	46;"	d
SERIAL_LINECONTROL_8BIT	02.Kernel64/Source/SerialPort.h	45;"	d
SERIAL_LINECONTROL_8BIT	save/02.Kernel64/Source/SerialPort.h	45;"	d
SERIAL_LINECONTROL_DLAB	02.Kernel64/Source/SerialPort.h	52;"	d
SERIAL_LINECONTROL_DLAB	save/02.Kernel64/Source/SerialPort.h	52;"	d
SERIAL_LINECONTROL_EVENPARITY	02.Kernel64/Source/SerialPort.h	49;"	d
SERIAL_LINECONTROL_EVENPARITY	save/02.Kernel64/Source/SerialPort.h	49;"	d
SERIAL_LINECONTROL_MARKPARITY	02.Kernel64/Source/SerialPort.h	50;"	d
SERIAL_LINECONTROL_MARKPARITY	save/02.Kernel64/Source/SerialPort.h	50;"	d
SERIAL_LINECONTROL_NOPARITY	02.Kernel64/Source/SerialPort.h	47;"	d
SERIAL_LINECONTROL_NOPARITY	save/02.Kernel64/Source/SerialPort.h	47;"	d
SERIAL_LINECONTROL_ODDPARITY	02.Kernel64/Source/SerialPort.h	48;"	d
SERIAL_LINECONTROL_ODDPARITY	save/02.Kernel64/Source/SerialPort.h	48;"	d
SERIAL_LINECONTROL_SPACEPARITY	02.Kernel64/Source/SerialPort.h	51;"	d
SERIAL_LINECONTROL_SPACEPARITY	save/02.Kernel64/Source/SerialPort.h	51;"	d
SERIAL_LINESTATUS_BREAKINDICATOR	02.Kernel64/Source/SerialPort.h	59;"	d
SERIAL_LINESTATUS_BREAKINDICATOR	save/02.Kernel64/Source/SerialPort.h	59;"	d
SERIAL_LINESTATUS_FRAMINGERROR	02.Kernel64/Source/SerialPort.h	58;"	d
SERIAL_LINESTATUS_FRAMINGERROR	save/02.Kernel64/Source/SerialPort.h	58;"	d
SERIAL_LINESTATUS_OVERRUNERROR	02.Kernel64/Source/SerialPort.h	56;"	d
SERIAL_LINESTATUS_OVERRUNERROR	save/02.Kernel64/Source/SerialPort.h	56;"	d
SERIAL_LINESTATUS_PARITYERROR	02.Kernel64/Source/SerialPort.h	57;"	d
SERIAL_LINESTATUS_PARITYERROR	save/02.Kernel64/Source/SerialPort.h	57;"	d
SERIAL_LINESTATUS_RECEIVEDCHARACTORERROR	02.Kernel64/Source/SerialPort.h	62;"	d
SERIAL_LINESTATUS_RECEIVEDCHARACTORERROR	save/02.Kernel64/Source/SerialPort.h	62;"	d
SERIAL_LINESTATUS_RECEIVEDDATAREADY	02.Kernel64/Source/SerialPort.h	55;"	d
SERIAL_LINESTATUS_RECEIVEDDATAREADY	save/02.Kernel64/Source/SerialPort.h	55;"	d
SERIAL_LINESTATUS_TRANSMITBUFFEREMPTY	02.Kernel64/Source/SerialPort.h	60;"	d
SERIAL_LINESTATUS_TRANSMITBUFFEREMPTY	save/02.Kernel64/Source/SerialPort.h	60;"	d
SERIAL_LINESTATUS_TRANSMITEMPTY	02.Kernel64/Source/SerialPort.h	61;"	d
SERIAL_LINESTATUS_TRANSMITEMPTY	save/02.Kernel64/Source/SerialPort.h	61;"	d
SERIAL_PORT_COM1	02.Kernel64/Source/SerialPort.h	10;"	d
SERIAL_PORT_COM1	save/02.Kernel64/Source/SerialPort.h	10;"	d
SERIAL_PORT_COM2	02.Kernel64/Source/SerialPort.h	11;"	d
SERIAL_PORT_COM2	save/02.Kernel64/Source/SerialPort.h	11;"	d
SERIAL_PORT_COM3	02.Kernel64/Source/SerialPort.h	12;"	d
SERIAL_PORT_COM3	save/02.Kernel64/Source/SerialPort.h	12;"	d
SERIAL_PORT_COM4	02.Kernel64/Source/SerialPort.h	13;"	d
SERIAL_PORT_COM4	save/02.Kernel64/Source/SerialPort.h	13;"	d
SERIAL_PORT_INDEX_DIVISORLATCHLSB	02.Kernel64/Source/SerialPort.h	19;"	d
SERIAL_PORT_INDEX_DIVISORLATCHLSB	save/02.Kernel64/Source/SerialPort.h	19;"	d
SERIAL_PORT_INDEX_DIVISORLATCHMSB	02.Kernel64/Source/SerialPort.h	20;"	d
SERIAL_PORT_INDEX_DIVISORLATCHMSB	save/02.Kernel64/Source/SerialPort.h	20;"	d
SERIAL_PORT_INDEX_FIFOCONTROL	02.Kernel64/Source/SerialPort.h	22;"	d
SERIAL_PORT_INDEX_FIFOCONTROL	save/02.Kernel64/Source/SerialPort.h	22;"	d
SERIAL_PORT_INDEX_INTERRUPTENABLE	02.Kernel64/Source/SerialPort.h	18;"	d
SERIAL_PORT_INDEX_INTERRUPTENABLE	save/02.Kernel64/Source/SerialPort.h	18;"	d
SERIAL_PORT_INDEX_INTERRUPTIDENTIFICATION	02.Kernel64/Source/SerialPort.h	21;"	d
SERIAL_PORT_INDEX_INTERRUPTIDENTIFICATION	save/02.Kernel64/Source/SerialPort.h	21;"	d
SERIAL_PORT_INDEX_LINECONTROL	02.Kernel64/Source/SerialPort.h	23;"	d
SERIAL_PORT_INDEX_LINECONTROL	save/02.Kernel64/Source/SerialPort.h	23;"	d
SERIAL_PORT_INDEX_LINESTATUS	02.Kernel64/Source/SerialPort.h	25;"	d
SERIAL_PORT_INDEX_LINESTATUS	save/02.Kernel64/Source/SerialPort.h	25;"	d
SERIAL_PORT_INDEX_MODEMCONTROL	02.Kernel64/Source/SerialPort.h	24;"	d
SERIAL_PORT_INDEX_MODEMCONTROL	save/02.Kernel64/Source/SerialPort.h	24;"	d
SERIAL_PORT_INDEX_MODEMSTATUS	02.Kernel64/Source/SerialPort.h	26;"	d
SERIAL_PORT_INDEX_MODEMSTATUS	save/02.Kernel64/Source/SerialPort.h	26;"	d
SERIAL_PORT_INDEX_RECEIVERBUFFER	02.Kernel64/Source/SerialPort.h	16;"	d
SERIAL_PORT_INDEX_RECEIVERBUFFER	save/02.Kernel64/Source/SerialPort.h	16;"	d
SERIAL_PORT_INDEX_TRANSMITBUFFER	02.Kernel64/Source/SerialPort.h	17;"	d
SERIAL_PORT_INDEX_TRANSMITBUFFER	save/02.Kernel64/Source/SerialPort.h	17;"	d
SETPRIORITY	02.Kernel64/Source/Task.h	73;"	d
SETPRIORITY	save/02.Kernel64/Source/Task.h	72;"	d
SHELLCOMMANDENTRY	02.Kernel64/Source/ConsoleShell.h	/^} SHELLCOMMANDENTRY;$/;"	t	typeref:struct:kShellCommandEntrystruct
SHELLCOMMANDENTRY	save/02.Kernel64/Source/ConsoleShell.h	/^} SHELLCOMMANDENTRY;$/;"	t	typeref:struct:kShellCommandEntrystruct
SOURCEDIRECTORY	01.Kernel32/makefile	/^SOURCEDIRECTORY = Source$/;"	m
SOURCEDIRECTORY	02.Kernel64/makefile	/^SOURCEDIRECTORY = Source$/;"	m
SOURCEDIRECTORY	save/02.Kernel64/makefile	/^SOURCEDIRECTORY = Source$/;"	m
SPINLOCK	02.Kernel64/Source/Synchronization.h	/^} SPINLOCK;$/;"	t	typeref:struct:kSpinLockStrcut
START	00.BootLoader/BootLoader.asm	/^START:$/;"	l
START	00.BootLoader/BootLoader2.asm	/^START:$/;"	l
START	01.Kernel32/Source/EntryPoint.s	/^START:$/;"	l
START	01.Kernel32/VirtualOS.asm	/^START:$/;"	l
START	02.Kernel64/Source/EntryPoint.s	/^START:$/;"	l
START	save/02.Kernel64/Source/EntryPoint.s	/^START:$/;"	l
SWITCHSUCCESSMESSAGE	01.Kernel32/Source/EntryPoint.s	/^SWITCHSUCCESSMESSAGE: db 'Switch To Protected Mode Success~!!', 0$/;"	d
TASK_CSOFFSET	02.Kernel64/Source/Task.h	34;"	d
TASK_CSOFFSET	save/02.Kernel64/Source/Task.h	33;"	d
TASK_DSOFFSET	02.Kernel64/Source/Task.h	17;"	d
TASK_DSOFFSET	save/02.Kernel64/Source/Task.h	16;"	d
TASK_ESOFFSET	02.Kernel64/Source/Task.h	16;"	d
TASK_ESOFFSET	save/02.Kernel64/Source/Task.h	15;"	d
TASK_FLAGS_ENDTASK	02.Kernel64/Source/Task.h	65;"	d
TASK_FLAGS_ENDTASK	save/02.Kernel64/Source/Task.h	64;"	d
TASK_FLAGS_HIGH	02.Kernel64/Source/Task.h	58;"	d
TASK_FLAGS_HIGH	save/02.Kernel64/Source/Task.h	57;"	d
TASK_FLAGS_HIGHEST	02.Kernel64/Source/Task.h	57;"	d
TASK_FLAGS_HIGHEST	save/02.Kernel64/Source/Task.h	56;"	d
TASK_FLAGS_IDLE	02.Kernel64/Source/Task.h	69;"	d
TASK_FLAGS_IDLE	save/02.Kernel64/Source/Task.h	68;"	d
TASK_FLAGS_LOW	02.Kernel64/Source/Task.h	60;"	d
TASK_FLAGS_LOW	save/02.Kernel64/Source/Task.h	59;"	d
TASK_FLAGS_LOWEST	02.Kernel64/Source/Task.h	61;"	d
TASK_FLAGS_LOWEST	save/02.Kernel64/Source/Task.h	60;"	d
TASK_FLAGS_MEDIUM	02.Kernel64/Source/Task.h	59;"	d
TASK_FLAGS_MEDIUM	save/02.Kernel64/Source/Task.h	58;"	d
TASK_FLAGS_PROCESS	02.Kernel64/Source/Task.h	67;"	d
TASK_FLAGS_PROCESS	save/02.Kernel64/Source/Task.h	66;"	d
TASK_FLAGS_SYSTEM	02.Kernel64/Source/Task.h	66;"	d
TASK_FLAGS_SYSTEM	save/02.Kernel64/Source/Task.h	65;"	d
TASK_FLAGS_THREAD	02.Kernel64/Source/Task.h	68;"	d
TASK_FLAGS_THREAD	save/02.Kernel64/Source/Task.h	67;"	d
TASK_FLAGS_WAIT	02.Kernel64/Source/Task.h	62;"	d
TASK_FLAGS_WAIT	save/02.Kernel64/Source/Task.h	61;"	d
TASK_FSOFFSET	02.Kernel64/Source/Task.h	15;"	d
TASK_FSOFFSET	save/02.Kernel64/Source/Task.h	14;"	d
TASK_GSOFFSET	02.Kernel64/Source/Task.h	14;"	d
TASK_GSOFFSET	save/02.Kernel64/Source/Task.h	13;"	d
TASK_INVALIDID	02.Kernel64/Source/Task.h	48;"	d
TASK_INVALIDID	save/02.Kernel64/Source/Task.h	47;"	d
TASK_LOADBALANCINGID	02.Kernel64/Source/Task.h	81;"	d
TASK_MAXCOUNT	02.Kernel64/Source/Task.h	41;"	d
TASK_MAXCOUNT	save/02.Kernel64/Source/Task.h	40;"	d
TASK_MAXREADYLISTCOUNT	02.Kernel64/Source/Task.h	54;"	d
TASK_MAXREADYLISTCOUNT	save/02.Kernel64/Source/Task.h	53;"	d
TASK_PROCESSORTIME	02.Kernel64/Source/Task.h	51;"	d
TASK_PROCESSORTIME	save/02.Kernel64/Source/Task.h	50;"	d
TASK_R10OFFSET	02.Kernel64/Source/Task.h	23;"	d
TASK_R10OFFSET	save/02.Kernel64/Source/Task.h	22;"	d
TASK_R11OFFSET	02.Kernel64/Source/Task.h	22;"	d
TASK_R11OFFSET	save/02.Kernel64/Source/Task.h	21;"	d
TASK_R12OFFSET	02.Kernel64/Source/Task.h	21;"	d
TASK_R12OFFSET	save/02.Kernel64/Source/Task.h	20;"	d
TASK_R13OFFSET	02.Kernel64/Source/Task.h	20;"	d
TASK_R13OFFSET	save/02.Kernel64/Source/Task.h	19;"	d
TASK_R14OFFSET	02.Kernel64/Source/Task.h	19;"	d
TASK_R14OFFSET	save/02.Kernel64/Source/Task.h	18;"	d
TASK_R15OFFSET	02.Kernel64/Source/Task.h	18;"	d
TASK_R15OFFSET	save/02.Kernel64/Source/Task.h	17;"	d
TASK_R8OFFSET	02.Kernel64/Source/Task.h	25;"	d
TASK_R8OFFSET	save/02.Kernel64/Source/Task.h	24;"	d
TASK_R9OFFSET	02.Kernel64/Source/Task.h	24;"	d
TASK_R9OFFSET	save/02.Kernel64/Source/Task.h	23;"	d
TASK_RAXOFFSET	02.Kernel64/Source/Task.h	31;"	d
TASK_RAXOFFSET	save/02.Kernel64/Source/Task.h	30;"	d
TASK_RBPOFFSET	02.Kernel64/Source/Task.h	32;"	d
TASK_RBPOFFSET	save/02.Kernel64/Source/Task.h	31;"	d
TASK_RBXOFFSET	02.Kernel64/Source/Task.h	30;"	d
TASK_RBXOFFSET	save/02.Kernel64/Source/Task.h	29;"	d
TASK_RCXOFFSET	02.Kernel64/Source/Task.h	29;"	d
TASK_RCXOFFSET	save/02.Kernel64/Source/Task.h	28;"	d
TASK_RDIOFFSET	02.Kernel64/Source/Task.h	27;"	d
TASK_RDIOFFSET	save/02.Kernel64/Source/Task.h	26;"	d
TASK_RDXOFFSET	02.Kernel64/Source/Task.h	28;"	d
TASK_RDXOFFSET	save/02.Kernel64/Source/Task.h	27;"	d
TASK_REGISTERCOUNT	02.Kernel64/Source/Task.h	10;"	d
TASK_REGISTERCOUNT	save/02.Kernel64/Source/Task.h	9;"	d
TASK_REGISTERSIZE	02.Kernel64/Source/Task.h	11;"	d
TASK_REGISTERSIZE	save/02.Kernel64/Source/Task.h	10;"	d
TASK_RFLAGSOFFSET	02.Kernel64/Source/Task.h	35;"	d
TASK_RFLAGSOFFSET	save/02.Kernel64/Source/Task.h	34;"	d
TASK_RIPOFFSET	02.Kernel64/Source/Task.h	33;"	d
TASK_RIPOFFSET	save/02.Kernel64/Source/Task.h	32;"	d
TASK_RSIOFFSET	02.Kernel64/Source/Task.h	26;"	d
TASK_RSIOFFSET	save/02.Kernel64/Source/Task.h	25;"	d
TASK_RSPOFFSET	02.Kernel64/Source/Task.h	36;"	d
TASK_RSPOFFSET	save/02.Kernel64/Source/Task.h	35;"	d
TASK_SSOFFSET	02.Kernel64/Source/Task.h	37;"	d
TASK_SSOFFSET	save/02.Kernel64/Source/Task.h	36;"	d
TASK_STACKPOOLADDRESS	02.Kernel64/Source/Task.h	44;"	d
TASK_STACKPOOLADDRESS	save/02.Kernel64/Source/Task.h	43;"	d
TASK_STACKSIZE	02.Kernel64/Source/Task.h	45;"	d
TASK_STACKSIZE	save/02.Kernel64/Source/Task.h	44;"	d
TASK_TCBPOOLADDRESS	02.Kernel64/Source/Task.h	40;"	d
TASK_TCBPOOLADDRESS	save/02.Kernel64/Source/Task.h	39;"	d
TCB	02.Kernel64/Source/Task.h	/^} TCB;$/;"	t	typeref:struct:kTaskControlBlockStruct
TCB	save/02.Kernel64/Source/Task.h	/^} TCB;$/;"	t	typeref:struct:kTaskControlBlockStruct
TCBPOOLMANAGER	02.Kernel64/Source/Task.h	/^} TCBPOOLMANAGER;$/;"	t	typeref:struct:kTCBPoolManagerStruct
TCBPOOLMANAGER	save/02.Kernel64/Source/Task.h	/^} TCBPOOLMANAGER;$/;"	t	typeref:struct:kTCBPoolManagerStruct
TOTALSECTORCOUNT	00.BootLoader/BootLoader.asm	/^TOTALSECTORCOUNT:	dw	0x02 		; 부트 로더를 제외한 MINT64 OS 이미지의 크기 $/;"	d
TOTALSECTORCOUNT	00.BootLoader/BootLoader2.asm	/^TOTALSECTORCOUNT:	dw	1024		; 부트 로더를 제외한 MINT64 OS 이미지의 크기 $/;"	d
TOTALSECTORCOUNT	01.Kernel32/VirtualOS.asm	/^TOTALSECTORCOUNT    equ 1024        ; 가상 os의 총 섹터 수$/;"	d
TRACKNUMBER	00.BootLoader/BootLoader.asm	/^TRACKNUMBER:	db	0x00			; OS 이미지가 시작하는 트랙 번호를 저장하는 영역 $/;"	d
TRACKNUMBER	00.BootLoader/BootLoader2.asm	/^TRACKNUMBER:	db	0x00			; OS 이미지가 시작하는 트랙 번호를 저장하는 영역 $/;"	d
TRUE	01.Kernel32/Source/Types.h	10;"	d
TRUE	02.Kernel64/Source/Types.h	10;"	d
TRUE	save/02.Kernel64/Source/Types.h	10;"	d
TSSSEGMENT	02.Kernel64/Source/Descriptor.h	/^} TSSSEGMENT;$/;"	t	typeref:struct:kTSSDataStruct
TSSSEGMENT	save/02.Kernel64/Source/Descriptor.h	/^} TSSSEGMENT;$/;"	t	typeref:struct:kTSSDataStruct
TSS_SEGMENTSIZE	02.Kernel64/Source/Descriptor.h	52;"	d
TSS_SEGMENTSIZE	save/02.Kernel64/Source/Descriptor.h	52;"	d
USTOCOUNT	02.Kernel64/Source/PIT.h	9;"	d
USTOCOUNT	save/02.Kernel64/Source/PIT.h	9;"	d
UpdateCombinationKeyStatusAndLED	02.Kernel64/Source/Keyboard.c	/^void UpdateCombinationKeyStatusAndLED(BYTE bScanCode)$/;"	f
UpdateCombinationKeyStatusAndLED	save/02.Kernel64/Source/Keyboard.c	/^void UpdateCombinationKeyStatusAndLED(BYTE bScanCode)$/;"	f
VGA_INDEX_LOWERCURSOR	02.Kernel64/Source/Console.h	47;"	d
VGA_INDEX_LOWERCURSOR	save/02.Kernel64/Source/Console.h	47;"	d
VGA_INDEX_UPPERCURSOR	02.Kernel64/Source/Console.h	46;"	d
VGA_INDEX_UPPERCURSOR	save/02.Kernel64/Source/Console.h	46;"	d
VGA_PORT_DATA	02.Kernel64/Source/Console.h	45;"	d
VGA_PORT_DATA	save/02.Kernel64/Source/Console.h	45;"	d
VGA_PORT_INDEX	02.Kernel64/Source/Console.h	44;"	d
VGA_PORT_INDEX	save/02.Kernel64/Source/Console.h	44;"	d
WORD	01.Kernel32/Source/Types.h	5;"	d
WORD	02.Kernel64/Source/Types.h	5;"	d
WORD	save/02.Kernel64/Source/Types.h	5;"	d
WriteKernelInformation	04.Utility/00.ImageMaker/ImageMaker.c	/^void WriteKernelInformation( int iTargetFd, int iTotalKernelSectorCount, int iKernelSectorCount )$/;"	f
__ASSEMBLYUTILITY_H__	02.Kernel64/Source/AssemblyUtility.h	2;"	d
__ASSEMBLYUTILITY_H__	save/02.Kernel64/Source/AssemblyUtility.h	2;"	d
__CACHEMANAGER_H__	02.Kernel64/Source/CacheManager.h	2;"	d
__CACHEMANAGER_H__	save/02.Kernel64/Source/CacheManager.h	2;"	d
__CONSOLESHELL_H__	02.Kernel64/Source/ConsoleShell.h	2;"	d
__CONSOLESHELL_H__	save/02.Kernel64/Source/ConsoleShell.h	2;"	d
__CONSOLE_H__	02.Kernel64/Source/Console.h	2;"	d
__CONSOLE_H__	save/02.Kernel64/Source/Console.h	2;"	d
__DESCRIPTOR_H__	02.Kernel64/Source/Descriptor.h	2;"	d
__DESCRIPTOR_H__	save/02.Kernel64/Source/Descriptor.h	2;"	d
__DYNAMICMEMORY_H__	02.Kernel64/Source/DynamicMemory.h	2;"	d
__DYNAMICMEMORY_H__	save/02.Kernel64/Source/DynamicMemory.h	2;"	d
__FILESYSTEM_H__	02.Kernel64/Source/FileSystem.h	2;"	d
__FILESYSTEM_H__	save/02.Kernel64/Source/FileSystem.h	2;"	d
__HARDDISK_H__	02.Kernel64/Source/HardDisk.h	2;"	d
__HARDDISK_H__	save/02.Kernel64/Source/HardDisk.h	2;"	d
__INTERRUPTHANDLER_H__	02.Kernel64/Source/InterruptHandler.h	2;"	d
__INTERRUPTHANDLER_H__	save/02.Kernel64/Source/InterruptHandler.h	2;"	d
__IOAPIC_H__	02.Kernel64/Source/IOAPIC.h	2;"	d
__ISR_H__	02.Kernel64/Source/ISR.h	2;"	d
__ISR_H__	save/02.Kernel64/Source/ISR.h	2;"	d
__KEYBOARD_H__	02.Kernel64/Source/Keyboard.h	2;"	d
__KEYBOARD_H__	save/02.Kernel64/Source/Keyboard.h	2;"	d
__LIST_H__	02.Kernel64/Source/List.h	2;"	d
__LIST_H__	save/02.Kernel64/Source/List.h	2;"	d
__LOCALAPIC_H__	02.Kernel64/Source/LocalAPIC.h	2;"	d
__LOCALAPIC_H__	save/02.Kernel64/Source/LocalAPIC.h	2;"	d
__MPCONFIGURATIONTABLE__	02.Kernel64/Source/MPConfigurationTable.h	2;"	d
__MPCONFIGURATIONTABLE__	save/02.Kernel64/Source/MPConfigurationTable.h	2;"	d
__MULTIPROCESSOR_H__	02.Kernel64/Source/MultiProcessor.h	2;"	d
__MULTIPROCESSOR_H__	save/02.Kernel64/Source/MultiProcessor.h	2;"	d
__PAGE_H__	01.Kernel32/Source/Page.h	2;"	d
__PIC_H__	02.Kernel64/Source/PIC.h	2;"	d
__PIC_H__	save/02.Kernel64/Source/PIC.h	2;"	d
__PIT_H__	02.Kernel64/Source/PIT.h	2;"	d
__PIT_H__	save/02.Kernel64/Source/PIT.h	2;"	d
__QUEUE_H__	02.Kernel64/Source/Queue.h	2;"	d
__QUEUE_H__	save/02.Kernel64/Source/Queue.h	2;"	d
__RAMDISK_H__	02.Kernel64/Source/RAMDisk.h	2;"	d
__RAMDISK_H__	save/02.Kernel64/Source/RAMDisk.h	2;"	d
__RTC_H__	02.Kernel64/Source/RTC.h	2;"	d
__RTC_H__	save/02.Kernel64/Source/RTC.h	2;"	d
__SERIALPORT_H__	02.Kernel64/Source/SerialPort.h	2;"	d
__SERIALPORT_H__	save/02.Kernel64/Source/SerialPort.h	2;"	d
__SYNCHRONIZATION_H__	02.Kernel64/Source/Synchronization.h	2;"	d
__SYNCHRONIZATION_H__	save/02.Kernel64/Source/Synchronization.h	2;"	d
__TASK_H__	02.Kernel64/Source/Task.h	2;"	d
__TASK_H__	save/02.Kernel64/Source/Task.h	2;"	d
__TYPES_H__	01.Kernel32/Source/Types.h	2;"	d
__TYPES_H__	02.Kernel64/Source/Types.h	2;"	d
__TYPES_H__	save/02.Kernel64/Source/Types.h	2;"	d
__UTILITY_H__	01.Kernel32/Source/ModeSwitch.h	2;"	d
__UTILITY_H__	02.Kernel64/Source/Utility.h	2;"	d
__UTILITY_H__	save/02.Kernel64/Source/Utility.h	2;"	d
a	testdata.c	/^int a;$/;"	v
b	testdata.c	/^int b =1;$/;"	v
bAPICID	02.Kernel64/Source/Synchronization.h	/^	volatile BYTE bAPICID;$/;"	m	struct:kSpinLockStrcut
bAPICID	02.Kernel64/Source/Task.h	/^	BYTE bAPICID;$/;"	m	struct:kTaskControlBlockStruct
bASCIICode	02.Kernel64/Source/Keyboard.h	/^	BYTE bASCIICode;$/;"	m	struct:kKeyDataStruct
bASCIICode	save/02.Kernel64/Source/Keyboard.h	/^	BYTE bASCIICode;$/;"	m	struct:kKeyDataStruct
bAffinity	02.Kernel64/Source/Task.h	/^	BYTE bAffinity;$/;"	m	struct:kTaskControlBlockStruct
bAttribute	01.Kernel32/Source/Types.h	/^	BYTE bAttribute;$/;"	m	struct:kCharactorStruct
bAttribute	02.Kernel64/Source/Types.h	/^	BYTE bAttribute;$/;"	m	struct:kCharactorStruct
bAttribute	save/02.Kernel64/Source/Types.h	/^	BYTE bAttribute;$/;"	m	struct:kCharactorStruct
bBootableFlag	02.Kernel64/Source/FileSystem.h	/^	BYTE bBootableFlag;$/;"	m	struct:kPartitionStruct
bBootableFlag	save/02.Kernel64/Source/FileSystem.h	/^	BYTE bBootableFlag;$/;"	m	struct:kPartitionStruct
bBusID	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bBusID;$/;"	m	struct:kBusEntryStruct
bBusID	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bBusID;$/;"	m	struct:kBusEntryStruct
bCPUFlags	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bCPUFlags;$/;"	m	struct:kProcessorEntryStruct
bCPUFlags	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bCPUFlags;$/;"	m	struct:kProcessorEntryStruct
bCacheEnable	02.Kernel64/Source/FileSystem.h	/^	BOOL bCacheEnable;$/;"	m	struct:kFileSystemManagerStruct
bCacheEnable	save/02.Kernel64/Source/FileSystem.h	/^	BOOL bCacheEnable;$/;"	m	struct:kFileSystemManagerStruct
bCanWrite	02.Kernel64/Source/HardDisk.h	/^	BOOL bCanWrite;$/;"	m	struct:kHDDManagerStruct
bCanWrite	save/02.Kernel64/Source/HardDisk.h	/^	BOOL bCanWrite;$/;"	m	struct:kHDDManagerStruct
bCapsLockOn	02.Kernel64/Source/Keyboard.h	/^    BOOL bCapsLockOn;$/;"	m	struct:kKeyboardManagerStruct
bCapsLockOn	save/02.Kernel64/Source/Keyboard.h	/^    BOOL bCapsLockOn;$/;"	m	struct:kKeyboardManagerStruct
bChanged	02.Kernel64/Source/CacheManager.h	/^	BOOL bChanged;$/;"	m	struct:kCacheBufferStruct
bChanged	save/02.Kernel64/Source/CacheManager.h	/^	BOOL bChanged;$/;"	m	struct:kCacheBufferStruct
bCharactor	01.Kernel32/Source/Types.h	/^	BYTE bCharactor;$/;"	m	struct:kCharactorStruct
bCharactor	02.Kernel64/Source/Types.h	/^	BYTE bCharactor;$/;"	m	struct:kCharactorStruct
bCharactor	save/02.Kernel64/Source/Types.h	/^	BYTE bCharactor;$/;"	m	struct:kCharactorStruct
bCheckSum	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bCheckSum;$/;"	m	struct:kMPConfigurationTableHeaderStruct
bCheckSum	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bCheckSum;$/;"	m	struct:kMPFloatingPointerStruct
bCheckSum	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bCheckSum;$/;"	m	struct:kMPConfigurationTableHeaderStruct
bCheckSum	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bCheckSum;$/;"	m	struct:kMPFloatingPointerStruct
bCombinedCode	02.Kernel64/Source/Keyboard.h	/^    BYTE bCombinedCode;$/;"	m	struct:kKeyMappingEntryStruct
bCombinedCode	save/02.Kernel64/Source/Keyboard.h	/^    BYTE bCombinedCode;$/;"	m	struct:kKeyMappingEntryStruct
bDestination	02.Kernel64/Source/IOAPIC.h	/^	BYTE bDestination;$/;"	m	struct:kIOREdirectionTableStrcut
bDestinationIOAPICID	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bDestinationIOAPICID;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bDestinationIOAPICID	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bDestinationIOAPICID;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bDestinationIOAPICINTIN	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bDestinationIOAPICINTIN;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bDestinationIOAPICINTIN	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bDestinationIOAPICINTIN;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bDestinationLocalAPICID	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bDestinationLocalAPICID;$/;"	m	struct:kLocalInterruptEntryStruct
bDestinationLocalAPICID	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bDestinationLocalAPICID;$/;"	m	struct:kLocalInterruptEntryStruct
bDestinationLocalAPICINTIN	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bDestinationLocalAPICINTIN;$/;"	m	struct:kLocalInterruptEntryStruct
bDestinationLocalAPICINTIN	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bDestinationLocalAPICINTIN;$/;"	m	struct:kLocalInterruptEntryStruct
bEntryType	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bEntryType;$/;"	m	struct:kBusEntryStruct
bEntryType	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bEntryType;$/;"	m	struct:kIOAPICEntryStruct
bEntryType	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bEntryType;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bEntryType	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bEntryType;$/;"	m	struct:kLocalInterruptEntryStruct
bEntryType	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bEntryType;$/;"	m	struct:kProcessorEntryStruct
bEntryType	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bEntryType;$/;"	m	struct:kBusEntryStruct
bEntryType	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bEntryType;$/;"	m	struct:kIOAPICEntryStruct
bEntryType	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bEntryType;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bEntryType	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bEntryType;$/;"	m	struct:kLocalInterruptEntryStruct
bEntryType	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bEntryType;$/;"	m	struct:kProcessorEntryStruct
bExtendedCodeIn	02.Kernel64/Source/Keyboard.h	/^    BOOL bExtendedCodeIn;$/;"	m	struct:kKeyboardManagerStruct
bExtendedCodeIn	save/02.Kernel64/Source/Keyboard.h	/^    BOOL bExtendedCodeIn;$/;"	m	struct:kKeyboardManagerStruct
bExtendedTableChecksum	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bExtendedTableChecksum;$/;"	m	struct:kMPConfigurationTableHeaderStruct
bExtendedTableChecksum	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bExtendedTableChecksum;$/;"	m	struct:kMPConfigurationTableHeaderStruct
bFPUUsed	02.Kernel64/Source/Task.h	/^	BOOL bFPUUsed;$/;"	m	struct:kTaskControlBlockStruct
bFPUUsed	save/02.Kernel64/Source/Task.h	/^	BOOL bFPUUsed;$/;"	m	struct:kTaskControlBlockStruct
bFlags	02.Kernel64/Source/Keyboard.h	/^	BYTE bFlags;$/;"	m	struct:kKeyDataStruct
bFlags	save/02.Kernel64/Source/Keyboard.h	/^	BYTE bFlags;$/;"	m	struct:kKeyDataStruct
bFlagsAndDeliveryMode	02.Kernel64/Source/IOAPIC.h	/^	BYTE bFlagsAndDeliveryMode;$/;"	m	struct:kIOREdirectionTableStrcut
bHDDDetected	02.Kernel64/Source/HardDisk.h	/^	BOOL bHDDDetected;$/;"	m	struct:kHDDManagerStruct
bHDDDetected	save/02.Kernel64/Source/HardDisk.h	/^	BOOL bHDDDetected;$/;"	m	struct:kHDDManagerStruct
bIOAPICFlags	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bIOAPICFlags;$/;"	m	struct:kIOAPICEntryStruct
bIOAPICFlags	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bIOAPICFlags;$/;"	m	struct:kIOAPICEntryStruct
bIOAPICID	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bIOAPICID;$/;"	m	struct:kIOAPICEntryStruct
bIOAPICID	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bIOAPICID;$/;"	m	struct:kIOAPICEntryStruct
bIOAPICVersion	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bIOAPICVersion;$/;"	m	struct:kIOAPICEntryStruct
bIOAPICVersion	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bIOAPICVersion;$/;"	m	struct:kIOAPICEntryStruct
bISABusID	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bISABusID;$/;"	m	struct:kMPConfigurationManagerStruct
bISABusID	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bISABusID;$/;"	m	struct:kMPConfigurationManagerStruct
bIST	02.Kernel64/Source/Descriptor.h	/^	BYTE bIST;$/;"	m	struct:kIDTEntryStruct
bIST	save/02.Kernel64/Source/Descriptor.h	/^	BYTE bIST;$/;"	m	struct:kIDTEntryStruct
bInterruptFlag	02.Kernel64/Source/Synchronization.h	/^	volatile BOOL bInterruptFlag;$/;"	m	struct:kSpinLockStrcut
bInterruptMask	02.Kernel64/Source/IOAPIC.h	/^	BYTE bInterruptMask;$/;"	m	struct:kIOREdirectionTableStrcut
bInterruptType	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bInterruptType;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bInterruptType	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bInterruptType;$/;"	m	struct:kLocalInterruptEntryStruct
bInterruptType	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bInterruptType;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bInterruptType	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bInterruptType;$/;"	m	struct:kLocalInterruptEntryStruct
bLastOpereationPut	02.Kernel64/Source/Queue.h	/^	BOOL bLastOpereationPut;$/;"	m	struct:kQueueManagerStruct
bLastOpereationPut	save/02.Kernel64/Source/Queue.h	/^	BOOL bLastOpereationPut;$/;"	m	struct:kQueueManagerStruct
bLength	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bLength;$/;"	m	struct:kMPFloatingPointerStruct
bLength	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bLength;$/;"	m	struct:kMPFloatingPointerStruct
bLocalAPICID	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bLocalAPICID;$/;"	m	struct:kProcessorEntryStruct
bLocalAPICID	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bLocalAPICID;$/;"	m	struct:kProcessorEntryStruct
bLocalAPICVersion	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bLocalAPICVersion;$/;"	m	struct:kProcessorEntryStruct
bLocalAPICVersion	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bLocalAPICVersion;$/;"	m	struct:kProcessorEntryStruct
bLockFlag	02.Kernel64/Source/Synchronization.h	/^	volatile BOOL bLockFlag;$/;"	m	struct:kMutextStruct
bLockFlag	02.Kernel64/Source/Synchronization.h	/^	volatile BOOL bLockFlag;$/;"	m	struct:kSpinLockStrcut
bLockFlag	save/02.Kernel64/Source/Synchronization.h	/^	volatile BOOL bLockFlag;$/;"	m	struct:kMutextStruct
bMiddleBaseAddress1	02.Kernel64/Source/Descriptor.h	/^	BYTE bMiddleBaseAddress1;$/;"	m	struct:kGDTEntry16struct
bMiddleBaseAddress1	save/02.Kernel64/Source/Descriptor.h	/^	BYTE bMiddleBaseAddress1;$/;"	m	struct:kGDTEntry16struct
bMiddleBaseAddress2	02.Kernel64/Source/Descriptor.h	/^	BYTE bMiddleBaseAddress2;$/;"	m	struct:kGDTEntry16struct
bMiddleBaseAddress2	save/02.Kernel64/Source/Descriptor.h	/^	BYTE bMiddleBaseAddress2;$/;"	m	struct:kGDTEntry16struct
bMounted	02.Kernel64/Source/FileSystem.h	/^	BOOL bMounted;$/;"	m	struct:kFileSystemManagerStruct
bMounted	save/02.Kernel64/Source/FileSystem.h	/^	BOOL bMounted;$/;"	m	struct:kFileSystemManagerStruct
bNormalCode	02.Kernel64/Source/Keyboard.h	/^	BYTE bNormalCode;$/;"	m	struct:kKeyMappingEntryStruct
bNormalCode	save/02.Kernel64/Source/Keyboard.h	/^	BYTE bNormalCode;$/;"	m	struct:kKeyMappingEntryStruct
bNumLockOn	02.Kernel64/Source/Keyboard.h	/^    BOOL bNumLockOn;$/;"	m	struct:kKeyboardManagerStruct
bNumLockOn	save/02.Kernel64/Source/Keyboard.h	/^    BOOL bNumLockOn;$/;"	m	struct:kKeyboardManagerStruct
bPartitionType	02.Kernel64/Source/FileSystem.h	/^	BYTE bPartitionType;$/;"	m	struct:kPartitionStruct
bPartitionType	save/02.Kernel64/Source/FileSystem.h	/^	BYTE bPartitionType;$/;"	m	struct:kPartitionStruct
bPrimaryInterruptOccur	02.Kernel64/Source/HardDisk.h	/^	volatile BOOL bPrimaryInterruptOccur;$/;"	m	struct:kHDDManagerStruct
bPrimaryInterruptOccur	save/02.Kernel64/Source/HardDisk.h	/^	volatile BOOL bPrimaryInterruptOccur;$/;"	m	struct:kHDDManagerStruct
bReserved	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bReserved;$/;"	m	struct:kMPConfigurationTableHeaderStruct
bReserved	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bReserved;$/;"	m	struct:kMPConfigurationTableHeaderStruct
bRevision	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bRevision;$/;"	m	struct:kMPConfigurationTableHeaderStruct
bRevision	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bRevision;$/;"	m	struct:kMPFloatingPointerStruct
bRevision	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bRevision;$/;"	m	struct:kMPConfigurationTableHeaderStruct
bRevision	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bRevision;$/;"	m	struct:kMPFloatingPointerStruct
bScanCode	02.Kernel64/Source/Keyboard.h	/^	BYTE bScanCode;$/;"	m	struct:kKeyDataStruct
bScanCode	save/02.Kernel64/Source/Keyboard.h	/^	BYTE bScanCode;$/;"	m	struct:kKeyDataStruct
bScrollLockOn	02.Kernel64/Source/Keyboard.h	/^    BOOL bScrollLockOn;$/;"	m	struct:kKeyboardManagerStruct
bScrollLockOn	save/02.Kernel64/Source/Keyboard.h	/^    BOOL bScrollLockOn;$/;"	m	struct:kKeyboardManagerStruct
bSecondaryInterruptOccur	02.Kernel64/Source/HardDisk.h	/^	volatile BOOL bSecondaryInterruptOccur;$/;"	m	struct:kHDDManagerStruct
bSecondaryInterruptOccur	save/02.Kernel64/Source/HardDisk.h	/^	volatile BOOL bSecondaryInterruptOccur;$/;"	m	struct:kHDDManagerStruct
bShiftDown	02.Kernel64/Source/Keyboard.h	/^	BOOL bShiftDown;$/;"	m	struct:kKeyboardManagerStruct
bShiftDown	save/02.Kernel64/Source/Keyboard.h	/^	BOOL bShiftDown;$/;"	m	struct:kKeyboardManagerStruct
bSourceBUSID	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bSourceBUSID;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bSourceBUSID	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bSourceBUSID;$/;"	m	struct:kLocalInterruptEntryStruct
bSourceBUSID	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bSourceBUSID;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bSourceBUSID	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bSourceBUSID;$/;"	m	struct:kLocalInterruptEntryStruct
bSourceBUSIRQ	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bSourceBUSIRQ;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bSourceBUSIRQ	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bSourceBUSIRQ;$/;"	m	struct:kLocalInterruptEntryStruct
bSourceBUSIRQ	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bSourceBUSIRQ;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
bSourceBUSIRQ	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE bSourceBUSIRQ;$/;"	m	struct:kLocalInterruptEntryStruct
bSymmetricIOMode	02.Kernel64/Source/InterruptHandler.h	/^	BOOL bSymmetricIOMode;$/;"	m	struct:kInterruptManagerStruct
bType	02.Kernel64/Source/FileSystem.h	/^	BYTE bType;$/;"	m	struct:kFileDirectoryHandleStruct
bType	save/02.Kernel64/Source/FileSystem.h	/^	BYTE bType;$/;"	m	struct:kFileDirectoryHandleStruct
bTypeAndFlags	02.Kernel64/Source/Descriptor.h	/^	BYTE bTypeAndFlags;$/;"	m	struct:kIDTEntryStruct
bTypeAndFlags	save/02.Kernel64/Source/Descriptor.h	/^	BYTE bTypeAndFlags;$/;"	m	struct:kIDTEntryStruct
bTypeAndLowerFlag	02.Kernel64/Source/Descriptor.h	/^	BYTE bTypeAndLowerFlag;$/;"	m	struct:kGDTEntry16struct
bTypeAndLowerFlag	02.Kernel64/Source/Descriptor.h	/^	BYTE bTypeAndLowerFlag;$/;"	m	struct:kGDTEntry8Struct
bTypeAndLowerFlag	save/02.Kernel64/Source/Descriptor.h	/^	BYTE bTypeAndLowerFlag;$/;"	m	struct:kGDTEntry16struct
bTypeAndLowerFlag	save/02.Kernel64/Source/Descriptor.h	/^	BYTE bTypeAndLowerFlag;$/;"	m	struct:kGDTEntry8Struct
bUpperBaseAddress1	02.Kernel64/Source/Descriptor.h	/^	BYTE bUpperBaseAddress1;$/;"	m	struct:kGDTEntry8Struct
bUpperBaseAddress1	save/02.Kernel64/Source/Descriptor.h	/^	BYTE bUpperBaseAddress1;$/;"	m	struct:kGDTEntry8Struct
bUpperBaseAddress2	02.Kernel64/Source/Descriptor.h	/^	BYTE bUpperBaseAddress2;$/;"	m	struct:kGDTEntry8Struct
bUpperBaseAddress2	save/02.Kernel64/Source/Descriptor.h	/^	BYTE bUpperBaseAddress2;$/;"	m	struct:kGDTEntry8Struct
bUpperLimitAndUpperFlag	02.Kernel64/Source/Descriptor.h	/^	BYTE bUpperLimitAndUpperFlag;$/;"	m	struct:kGDTEntry16struct
bUpperLimitAndUpperFlag	02.Kernel64/Source/Descriptor.h	/^	BYTE bUpperLimitAndUpperFlag;$/;"	m	struct:kGDTEntry8Struct
bUpperLimitAndUpperFlag	save/02.Kernel64/Source/Descriptor.h	/^	BYTE bUpperLimitAndUpperFlag;$/;"	m	struct:kGDTEntry16struct
bUpperLimitAndUpperFlag	save/02.Kernel64/Source/Descriptor.h	/^	BYTE bUpperLimitAndUpperFlag;$/;"	m	struct:kGDTEntry8Struct
bUseLoadBalancing	02.Kernel64/Source/InterruptHandler.h	/^	BOOL bUseLoadBalancing;$/;"	m	struct:kInterruptManagerStruct
bUseLoadBalancing	02.Kernel64/Source/Task.h	/^	BOOL bUseLoadBalancing;$/;"	m	struct:kSchedulerStruct
bUsePICMode	02.Kernel64/Source/MPConfigurationTable.h	/^	BOOL bUsePICMode;$/;"	m	struct:kMPConfigurationManagerStruct
bUsePICMode	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BOOL bUsePICMode;$/;"	m	struct:kMPConfigurationManagerStruct
bVector	02.Kernel64/Source/IOAPIC.h	/^	BYTE bVector;$/;"	m	struct:kIOREdirectionTableStrcut
bvPadding	02.Kernel64/Source/Synchronization.h	/^	BYTE bvPadding[1];$/;"	m	struct:kSpinLockStrcut
c	testdata.c	/^int c;$/;"	v
closedir	02.Kernel64/Source/FileSystem.h	54;"	d
closedir	save/02.Kernel64/Source/FileSystem.h	54;"	d
d	testdata.c	/^int d=0;$/;"	v
d_name	02.Kernel64/Source/FileSystem.h	64;"	d
d_name	save/02.Kernel64/Source/FileSystem.h	64;"	d
db	00.BootLoader/BootLoader.asm	/^db 0x55             				; 1바이트를 선언하고 값은 0x55$/;"	l
db	00.BootLoader/BootLoader.asm	/^db 0xAA             				; 1바이트를 선언하고 값은 0xAA$/;"	l
db	00.BootLoader/BootLoader2.asm	/^db 0x55             				; 1바이트를 선언하고 값은 0x55$/;"	l
db	00.BootLoader/BootLoader2.asm	/^db 0xAA             				; 1바이트를 선언하고 값은 0xAA$/;"	l
dirent	02.Kernel64/Source/FileSystem.h	63;"	d
dirent	save/02.Kernel64/Source/FileSystem.h	63;"	d
dw	01.Kernel32/Source/EntryPoint.s	/^dw 0x0000$/;"	l
dwAccessTime	02.Kernel64/Source/CacheManager.h	/^	DWORD dwAccessTime;$/;"	m	struct:kCacheBufferStruct
dwAccessTime	save/02.Kernel64/Source/CacheManager.h	/^	DWORD dwAccessTime;$/;"	m	struct:kCacheBufferStruct
dwAttributeAndLowerBaseAddress	01.Kernel32/Source/Page.h	/^	DWORD dwAttributeAndLowerBaseAddress;$/;"	m	struct:kPageTableEntryStruct
dwClusterLinkAreaSize	02.Kernel64/Source/FileSystem.h	/^	DWORD dwClusterLinkAreaSize;$/;"	m	struct:kFileSystemManagerStruct
dwClusterLinkAreaSize	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwClusterLinkAreaSize;$/;"	m	struct:kFileSystemManagerStruct
dwClusterLinkAreaStartAddress	02.Kernel64/Source/FileSystem.h	/^	DWORD dwClusterLinkAreaStartAddress;$/;"	m	struct:kFileSystemManagerStruct
dwClusterLinkAreaStartAddress	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwClusterLinkAreaStartAddress;$/;"	m	struct:kFileSystemManagerStruct
dwClusterLinkSectorCount	02.Kernel64/Source/FileSystem.h	/^	DWORD dwClusterLinkSectorCount;$/;"	m	struct:kMBRStruct
dwClusterLinkSectorCount	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwClusterLinkSectorCount;$/;"	m	struct:kMBRStruct
dwCurrentClusterIndex	02.Kernel64/Source/FileSystem.h	/^	DWORD dwCurrentClusterIndex;$/;"	m	struct:kFileHandleStruct
dwCurrentClusterIndex	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwCurrentClusterIndex;$/;"	m	struct:kFileHandleStruct
dwCurrentOffset	02.Kernel64/Source/FileSystem.h	/^	DWORD dwCurrentOffset;$/;"	m	struct:kFileHandleStruct
dwCurrentOffset	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwCurrentOffset;$/;"	m	struct:kFileHandleStruct
dwDataAreaStartAddress	02.Kernel64/Source/FileSystem.h	/^	DWORD dwDataAreaStartAddress;$/;"	m	struct:kFileSystemManagerStruct
dwDataAreaStartAddress	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwDataAreaStartAddress;$/;"	m	struct:kFileSystemManagerStruct
dwFeatureFlags	02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD dwFeatureFlags;$/;"	m	struct:kProcessorEntryStruct
dwFeatureFlags	save/02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD dwFeatureFlags;$/;"	m	struct:kProcessorEntryStruct
dwFileSize	02.Kernel64/Source/FileSystem.h	/^	DWORD dwFileSize;$/;"	m	struct:kDirectoryEntryStruct
dwFileSize	02.Kernel64/Source/FileSystem.h	/^	DWORD dwFileSize;$/;"	m	struct:kFileHandleStruct
dwFileSize	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwFileSize;$/;"	m	struct:kDirectoryEntryStruct
dwFileSize	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwFileSize;$/;"	m	struct:kFileHandleStruct
dwLastAllocatedclusterLinkSectorOffset	02.Kernel64/Source/FileSystem.h	/^	DWORD dwLastAllocatedclusterLinkSectorOffset;$/;"	m	struct:kFileSystemManagerStruct
dwLastAllocatedclusterLinkSectorOffset	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwLastAllocatedclusterLinkSectorOffset;$/;"	m	struct:kFileSystemManagerStruct
dwLockCount	02.Kernel64/Source/Synchronization.h	/^	volatile DWORD dwLockCount;$/;"	m	struct:kMutextStruct
dwLockCount	02.Kernel64/Source/Synchronization.h	/^	volatile DWORD dwLockCount;$/;"	m	struct:kSpinLockStrcut
dwLockCount	save/02.Kernel64/Source/Synchronization.h	/^	volatile DWORD dwLockCount;$/;"	m	struct:kMutextStruct
dwMPConfigurationTableAddress	02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD dwMPConfigurationTableAddress;$/;"	m	struct:kMPFloatingPointerStruct
dwMPConfigurationTableAddress	save/02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD dwMPConfigurationTableAddress;$/;"	m	struct:kMPFloatingPointerStruct
dwMemoryMapAddress	02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD dwMemoryMapAddress;$/;"	m	struct:kIOAPICEntryStruct
dwMemoryMapAddress	save/02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD dwMemoryMapAddress;$/;"	m	struct:kIOAPICEntryStruct
dwMemoryMapIOAddressOfLocalAPIC	02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD dwMemoryMapIOAddressOfLocalAPIC;$/;"	m	struct:kMPConfigurationTableHeaderStruct
dwMemoryMapIOAddressOfLocalAPIC	save/02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD dwMemoryMapIOAddressOfLocalAPIC;$/;"	m	struct:kMPConfigurationTableHeaderStruct
dwOEMTablePointerAddress	02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD dwOEMTablePointerAddress;$/;"	m	struct:kMPConfigurationTableHeaderStruct
dwOEMTablePointerAddress	save/02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD dwOEMTablePointerAddress;$/;"	m	struct:kMPConfigurationTableHeaderStruct
dwPading	02.Kernel64/Source/Descriptor.h	/^	DWORD dwPading;$/;"	m	struct:kGDTRStruct
dwPading	save/02.Kernel64/Source/Descriptor.h	/^	DWORD dwPading;$/;"	m	struct:kGDTRStruct
dwPreviousClusterIndex	02.Kernel64/Source/FileSystem.h	/^	DWORD dwPreviousClusterIndex;$/;"	m	struct:kFileHandleStruct
dwPreviousClusterIndex	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwPreviousClusterIndex;$/;"	m	struct:kFileHandleStruct
dwReserved	02.Kernel64/Source/Descriptor.h	/^	DWORD dwReserved;$/;"	m	struct:kGDTEntry16struct
dwReserved	02.Kernel64/Source/Descriptor.h	/^	DWORD dwReserved;$/;"	m	struct:kIDTEntryStruct
dwReserved	save/02.Kernel64/Source/Descriptor.h	/^	DWORD dwReserved;$/;"	m	struct:kGDTEntry16struct
dwReserved	save/02.Kernel64/Source/Descriptor.h	/^	DWORD dwReserved;$/;"	m	struct:kIDTEntryStruct
dwReserved1	02.Kernel64/Source/Descriptor.h	/^	DWORD dwReserved1;$/;"	m	struct:kTSSDataStruct
dwReserved1	save/02.Kernel64/Source/Descriptor.h	/^	DWORD dwReserved1;$/;"	m	struct:kTSSDataStruct
dwReservedSectorCount	02.Kernel64/Source/FileSystem.h	/^	DWORD dwReservedSectorCount;$/;"	m	struct:kFileSystemManagerStruct
dwReservedSectorCount	02.Kernel64/Source/FileSystem.h	/^	DWORD dwReservedSectorCount;$/;"	m	struct:kMBRStruct
dwReservedSectorCount	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwReservedSectorCount;$/;"	m	struct:kFileSystemManagerStruct
dwReservedSectorCount	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwReservedSectorCount;$/;"	m	struct:kMBRStruct
dwSignature	02.Kernel64/Source/FileSystem.h	/^	DWORD dwSignature;$/;"	m	struct:kMBRStruct
dwSignature	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwSignature;$/;"	m	struct:kMBRStruct
dwSizeInSector	02.Kernel64/Source/FileSystem.h	/^	DWORD dwSizeInSector;$/;"	m	struct:kPartitionStruct
dwSizeInSector	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwSizeInSector;$/;"	m	struct:kPartitionStruct
dwStartClusterIndex	02.Kernel64/Source/FileSystem.h	/^	DWORD dwStartClusterIndex;$/;"	m	struct:kDirectoryEntryStruct
dwStartClusterIndex	02.Kernel64/Source/FileSystem.h	/^	DWORD dwStartClusterIndex;$/;"	m	struct:kFileHandleStruct
dwStartClusterIndex	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwStartClusterIndex;$/;"	m	struct:kDirectoryEntryStruct
dwStartClusterIndex	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwStartClusterIndex;$/;"	m	struct:kFileHandleStruct
dwStartingLBAAddress	02.Kernel64/Source/FileSystem.h	/^	DWORD dwStartingLBAAddress;$/;"	m	struct:kPartitionStruct
dwStartingLBAAddress	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwStartingLBAAddress;$/;"	m	struct:kPartitionStruct
dwTag	02.Kernel64/Source/CacheManager.h	/^	DWORD dwTag;$/;"	m	struct:kCacheBufferStruct
dwTag	save/02.Kernel64/Source/CacheManager.h	/^	DWORD dwTag;$/;"	m	struct:kCacheBufferStruct
dwTotalClusterCount	02.Kernel64/Source/FileSystem.h	/^	DWORD dwTotalClusterCount;$/;"	m	struct:kFileSystemManagerStruct
dwTotalClusterCount	02.Kernel64/Source/FileSystem.h	/^	DWORD dwTotalClusterCount;$/;"	m	struct:kMBRStruct
dwTotalClusterCount	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwTotalClusterCount;$/;"	m	struct:kFileSystemManagerStruct
dwTotalClusterCount	save/02.Kernel64/Source/FileSystem.h	/^	DWORD dwTotalClusterCount;$/;"	m	struct:kMBRStruct
dwTotalSectorCount	02.Kernel64/Source/RAMDisk.h	/^	DWORD dwTotalSectorCount;$/;"	m	struct:kRDDManagerStruct
dwTotalSectorCount	save/02.Kernel64/Source/RAMDisk.h	/^	DWORD dwTotalSectorCount;$/;"	m	struct:kRDDManagerStruct
dwTotalSectors	02.Kernel64/Source/HardDisk.h	/^	DWORD dwTotalSectors;$/;"	m	struct:kHDDInformationStruct
dwTotalSectors	save/02.Kernel64/Source/HardDisk.h	/^	DWORD dwTotalSectors;$/;"	m	struct:kHDDInformationStruct
dwUpperBaseAddress	02.Kernel64/Source/Descriptor.h	/^	DWORD dwUpperBaseAddress;$/;"	m	struct:kGDTEntry16struct
dwUpperBaseAddress	02.Kernel64/Source/Descriptor.h	/^	DWORD dwUpperBaseAddress;$/;"	m	struct:kIDTEntryStruct
dwUpperBaseAddress	save/02.Kernel64/Source/Descriptor.h	/^	DWORD dwUpperBaseAddress;$/;"	m	struct:kGDTEntry16struct
dwUpperBaseAddress	save/02.Kernel64/Source/Descriptor.h	/^	DWORD dwUpperBaseAddress;$/;"	m	struct:kIDTEntryStruct
dwUpperBaseAddressAndEXB	01.Kernel32/Source/Page.h	/^	DWORD dwUpperBaseAddressAndEXB;$/;"	m	struct:kPageTableEntryStruct
extern	02.Kernel64/Source/EntryPoint.s	/^extern g_qwAPICIDAddress, g_iWakeUpApplicationProcessorCount$/;"	l
extern	02.Kernel64/Source/EntryPoint.s	/^extern main		$/;"	l
extern	02.Kernel64/Source/ISR.asm	/^extern kCommonExceptionHandler, kCommonInterruptHandler, kKeyboardHandler$/;"	l
extern	02.Kernel64/Source/ISR.asm	/^extern kTimerHandler, kDeviceNotAvailableHandler, kHDDHandler$/;"	l
extern	save/02.Kernel64/Source/EntryPoint.s	/^extern g_qwAPICIDAddress, g_iWakeUpApplicationProcessorCount$/;"	l
extern	save/02.Kernel64/Source/EntryPoint.s	/^extern main		$/;"	l
extern	save/02.Kernel64/Source/ISR.asm	/^extern kCommonExceptionHandler, kCommonInterruptHandler, kKeyboardHandler$/;"	l
extern	save/02.Kernel64/Source/ISR.asm	/^extern kTimerHandler, kDeviceNotAvailableHandler, kHDDHandler$/;"	l
fReadHDDInformation	02.Kernel64/Source/FileSystem.h	/^typedef BOOL (*fReadHDDInformation) (BOOL bPrimary,BOOL bMaster,HDDINFORMATION* pstHDDInformation);$/;"	t
fReadHDDInformation	save/02.Kernel64/Source/FileSystem.h	/^typedef BOOL (*fReadHDDInformation) (BOOL bPrimary,BOOL bMaster,HDDINFORMATION* pstHDDInformation);$/;"	t
fReadHDDSector	02.Kernel64/Source/FileSystem.h	/^typedef int (*fReadHDDSector) (BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer);$/;"	t
fReadHDDSector	save/02.Kernel64/Source/FileSystem.h	/^typedef int (*fReadHDDSector) (BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer);$/;"	t
fWriteHDDSector	02.Kernel64/Source/FileSystem.h	/^typedef int (*fWriteHDDSector) (BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer);$/;"	t
fWriteHDDSector	save/02.Kernel64/Source/FileSystem.h	/^typedef int (*fWriteHDDSector) (BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer);$/;"	t
fclose	02.Kernel64/Source/FileSystem.h	49;"	d
fclose	save/02.Kernel64/Source/FileSystem.h	49;"	d
fopen	02.Kernel64/Source/FileSystem.h	45;"	d
fopen	save/02.Kernel64/Source/FileSystem.h	45;"	d
fread	02.Kernel64/Source/FileSystem.h	46;"	d
fread	save/02.Kernel64/Source/FileSystem.h	46;"	d
fseek	02.Kernel64/Source/FileSystem.h	48;"	d
fseek	save/02.Kernel64/Source/FileSystem.h	48;"	d
fwrite	02.Kernel64/Source/FileSystem.h	47;"	d
fwrite	save/02.Kernel64/Source/FileSystem.h	47;"	d
g_iWakeUpApplicationProcessorCount	02.Kernel64/Source/MultiProcessor.c	/^volatile int g_iWakeUpApplicationProcessorCount = 0;$/;"	v
g_iWakeUpApplicationProcessorCount	save/02.Kernel64/Source/MultiProcessor.c	/^volatile int g_iWakeUpApplicationProcessorCount = 0;$/;"	v
g_qwAPICIDAddress	02.Kernel64/Source/MultiProcessor.c	/^volatile QWORD g_qwAPICIDAddress = 0;$/;"	v
g_qwAPICIDAddress	save/02.Kernel64/Source/MultiProcessor.c	/^volatile QWORD g_qwAPICIDAddress = 0;$/;"	v
g_qwTickCount	02.Kernel64/Source/Utility.c	/^volatile QWORD g_qwTickCount=0;$/;"	v
g_qwTickCount	save/02.Kernel64/Source/Utility.c	/^volatile QWORD g_qwTickCount=0;$/;"	v
global	01.Kernel32/Source/EntryPoint.s	/^global START$/;"	l
global	01.Kernel32/Source/ModeSwitch.asm	/^global	kReadCPUID, kSwitchAndExecute64bitKernel$/;"	l
global	02.Kernel64/Source/AssemblyUtility.asm	/^global kEnableGlobalLocalAPIC$/;"	l
global	02.Kernel64/Source/AssemblyUtility.asm	/^global kEnableInterrupt, kDisableInterrupt, kReadRFLAGS$/;"	l
global	02.Kernel64/Source/AssemblyUtility.asm	/^global kInPortByte, kOutPortByte,kInPortWord,kOutPortWord$/;"	l
global	02.Kernel64/Source/AssemblyUtility.asm	/^global kInitializeFPU, kSaveFPUContext, kLoadFPUContext, kSetTS, kClearTS$/;"	l
global	02.Kernel64/Source/AssemblyUtility.asm	/^global kLoadGDTR,kLoadTR,kLoadIDTR$/;"	l
global	02.Kernel64/Source/AssemblyUtility.asm	/^global kReadTSC$/;"	l
global	02.Kernel64/Source/AssemblyUtility.asm	/^global kSwitchContext, kHlt, kTestAndSet, kPause$/;"	l
global	02.Kernel64/Source/ISR.asm	/^global kISRBoundRangeExceeded, kISRInvalidOpcode, kISRDeviceNotAvailable, kISRDoubleFault,$/;"	l
global	02.Kernel64/Source/ISR.asm	/^global kISRCoprocessorSegmentOverrun, kISRInvalidTSS, kISRSegmentNotPresent$/;"	l
global	02.Kernel64/Source/ISR.asm	/^global kISRDivideError, kISRDebug, kISRNMI, kISRBreakPoint, kISROverflow$/;"	l
global	02.Kernel64/Source/ISR.asm	/^global kISRFPUError, kISRAlignmentCheck, kISRMachineCheck, kISRSIMDError, kISRETCException$/;"	l
global	02.Kernel64/Source/ISR.asm	/^global kISRFloppy, kISRParallel1, kISRRTC, kISRReserved, kISRNotUsed1, kISRNotUsed2$/;"	l
global	02.Kernel64/Source/ISR.asm	/^global kISRMouse, kISRCoprocessor, kISRHDD1, kISRHDD2, kISRETCInterrupt$/;"	l
global	02.Kernel64/Source/ISR.asm	/^global kISRStackSegmentFault, kISRGeneralProtection, kISRPageFault, kISR15$/;"	l
global	02.Kernel64/Source/ISR.asm	/^global kISRTimer, kISRKeyboard, kISRSlavePIC, kISRSerial2, kISRSerial1, kISRParallel2$/;"	l
global	save/02.Kernel64/Source/AssemblyUtility.asm	/^global kEnableGlobalLocalAPIC$/;"	l
global	save/02.Kernel64/Source/AssemblyUtility.asm	/^global kEnableInterrupt, kDisableInterrupt, kReadRFLAGS$/;"	l
global	save/02.Kernel64/Source/AssemblyUtility.asm	/^global kInPortByte, kOutPortByte,kInPortWord,kOutPortWord$/;"	l
global	save/02.Kernel64/Source/AssemblyUtility.asm	/^global kInitializeFPU, kSaveFPUContext, kLoadFPUContext, kSetTS, kClearTS$/;"	l
global	save/02.Kernel64/Source/AssemblyUtility.asm	/^global kLoadGDTR,kLoadTR,kLoadIDTR$/;"	l
global	save/02.Kernel64/Source/AssemblyUtility.asm	/^global kReadTSC$/;"	l
global	save/02.Kernel64/Source/AssemblyUtility.asm	/^global kSwitchContext, kHlt, kTestAndSet$/;"	l
global	save/02.Kernel64/Source/ISR.asm	/^global kISRBoundRangeExceeded, kISRInvalidOpcode, kISRDeviceNotAvailable, kISRDoubleFault,$/;"	l
global	save/02.Kernel64/Source/ISR.asm	/^global kISRCoprocessorSegmentOverrun, kISRInvalidTSS, kISRSegmentNotPresent$/;"	l
global	save/02.Kernel64/Source/ISR.asm	/^global kISRDivideError, kISRDebug, kISRNMI, kISRBreakPoint, kISROverflow$/;"	l
global	save/02.Kernel64/Source/ISR.asm	/^global kISRFPUError, kISRAlignmentCheck, kISRMachineCheck, kISRSIMDError, kISRETCException$/;"	l
global	save/02.Kernel64/Source/ISR.asm	/^global kISRFloppy, kISRParallel1, kISRRTC, kISRReserved, kISRNotUsed1, kISRNotUsed2$/;"	l
global	save/02.Kernel64/Source/ISR.asm	/^global kISRMouse, kISRCoprocessor, kISRHDD1, kISRHDD2, kISRETCInterrupt$/;"	l
global	save/02.Kernel64/Source/ISR.asm	/^global kISRStackSegmentFault, kISRGeneralProtection, kISRPageFault, kISR15$/;"	l
global	save/02.Kernel64/Source/ISR.asm	/^global kISRTimer, kISRKeyboard, kISRSlavePIC, kISRSerial2, kISRSerial1, kISRParallel2$/;"	l
gs_pfReadHDDInformation	02.Kernel64/Source/FileSystem.c	/^fReadHDDInformation gs_pfReadHDDInformation = NULL;$/;"	v
gs_pfReadHDDInformation	save/02.Kernel64/Source/FileSystem.c	/^fReadHDDInformation gs_pfReadHDDInformation = NULL;$/;"	v
gs_pfReadHDDSector	02.Kernel64/Source/FileSystem.c	/^fReadHDDSector gs_pfReadHDDSector =NULL;$/;"	v
gs_pfReadHDDSector	save/02.Kernel64/Source/FileSystem.c	/^fReadHDDSector gs_pfReadHDDSector =NULL;$/;"	v
gs_pfWriteHDDSector	02.Kernel64/Source/FileSystem.c	/^fWriteHDDSector gs_pfWriteHDDSector =NULL;$/;"	v
gs_pfWriteHDDSector	save/02.Kernel64/Source/FileSystem.c	/^fWriteHDDSector gs_pfWriteHDDSector =NULL;$/;"	v
gs_qwAdder	02.Kernel64/Source/ConsoleShell.c	/^static volatile QWORD gs_qwAdder;$/;"	v	file:
gs_qwAdder	save/02.Kernel64/Source/ConsoleShell.c	/^static volatile QWORD gs_qwAdder;$/;"	v	file:
gs_qwRandomValue	02.Kernel64/Source/ConsoleShell.c	/^static volatile QWORD gs_qwRandomValue = 0;$/;"	v	file:
gs_qwRandomValue	save/02.Kernel64/Source/ConsoleShell.c	/^static volatile QWORD gs_qwRandomValue = 0;$/;"	v	file:
gs_qwTotalRAMMBSize	02.Kernel64/Source/Utility.c	/^static gs_qwTotalRAMMBSize=0;$/;"	v	file:
gs_qwTotalRAMMBSize	save/02.Kernel64/Source/Utility.c	/^static gs_qwTotalRAMMBSize=0;$/;"	v	file:
gs_stCacheManager	02.Kernel64/Source/CacheManager.c	/^static CACHEMANAGER gs_stCacheManager;$/;"	v	file:
gs_stCacheManager	save/02.Kernel64/Source/CacheManager.c	/^static CACHEMANAGER gs_stCacheManager;$/;"	v	file:
gs_stConsoleManager	02.Kernel64/Source/Console.c	/^CONSOLEMANAGER gs_stConsoleManager = {0,};$/;"	v
gs_stConsoleManager	save/02.Kernel64/Source/Console.c	/^CONSOLEMANAGER gs_stConsoleManager = {0,};$/;"	v
gs_stDynamicMemory	02.Kernel64/Source/DynamicMemory.c	/^static DYNAMICMEMORY gs_stDynamicMemory;$/;"	v	file:
gs_stDynamicMemory	save/02.Kernel64/Source/DynamicMemory.c	/^static DYNAMICMEMORY gs_stDynamicMemory;$/;"	v	file:
gs_stFileSystemManager	02.Kernel64/Source/FileSystem.c	/^static FILESYSTEMMANAGER gs_stFileSystemManager;$/;"	v	file:
gs_stFileSystemManager	save/02.Kernel64/Source/FileSystem.c	/^static FILESYSTEMMANAGER gs_stFileSystemManager;$/;"	v	file:
gs_stHDDManager	02.Kernel64/Source/HardDisk.c	/^static HDDMANAGER gs_stHDDManager;$/;"	v	file:
gs_stHDDManager	save/02.Kernel64/Source/HardDisk.c	/^static HDDMANAGER gs_stHDDManager;$/;"	v	file:
gs_stIOAPICManager	02.Kernel64/Source/IOAPIC.c	/^static IOAPICMANAGER gs_stIOAPICManager;$/;"	v	file:
gs_stInterruptManager	02.Kernel64/Source/InterruptHandler.c	/^static INTERRUPTMANAGER gs_stInterruptManager;$/;"	v	file:
gs_stKeyQueue	02.Kernel64/Source/Keyboard.c	/^static QUEUE gs_stKeyQueue;$/;"	v	file:
gs_stKeyQueue	save/02.Kernel64/Source/Keyboard.c	/^static QUEUE gs_stKeyQueue;$/;"	v	file:
gs_stKeyboardManager	02.Kernel64/Source/Keyboard.c	/^static KEYBOARDMANAGER gs_stKeyboardManager={0,};$/;"	v	file:
gs_stKeyboardManager	save/02.Kernel64/Source/Keyboard.c	/^static KEYBOARDMANAGER gs_stKeyboardManager={0,};$/;"	v	file:
gs_stMPConfigurationManager	02.Kernel64/Source/MPConfigurationTable.c	/^static MPCONFIGURATIONMANAGER gs_stMPConfigurationManager;$/;"	v	file:
gs_stMPConfigurationManager	save/02.Kernel64/Source/MPConfigurationTable.c	/^static MPCONFIGURATIONMANAGER gs_stMPConfigurationManager = {0,};$/;"	v	file:
gs_stMutex	02.Kernel64/Source/ConsoleShell.c	/^static MUTEX gs_stMutex;$/;"	v	file:
gs_stMutex	save/02.Kernel64/Source/ConsoleShell.c	/^static MUTEX gs_stMutex;$/;"	v	file:
gs_stRDDManager	02.Kernel64/Source/RAMDisk.c	/^static RDDMANAGER gs_stRDDManager;$/;"	v	file:
gs_stRDDManager	save/02.Kernel64/Source/RAMDisk.c	/^static RDDMANAGER gs_stRDDManager;$/;"	v	file:
gs_stScheduler	save/02.Kernel64/Source/Task.c	/^static SCHEDULER gs_stScheduler;$/;"	v	file:
gs_stSerialManager	02.Kernel64/Source/SerialPort.c	/^static SERIALMANAGER gs_stSerialManager;$/;"	v	file:
gs_stSerialManager	save/02.Kernel64/Source/SerialPort.c	/^static SERIALMANAGER gs_stSerialManager;$/;"	v	file:
gs_stTCBPoolManager	02.Kernel64/Source/Task.c	/^static TCBPOOLMANAGER gs_stTCBPoolManager;$/;"	v	file:
gs_stTCBPoolManager	save/02.Kernel64/Source/Task.c	/^static TCBPOOLMANAGER gs_stTCBPoolManager;$/;"	v	file:
gs_vbTempBuffer	02.Kernel64/Source/FileSystem.c	/^static BYTE gs_vbTempBuffer[FILESYSTEM_SECTORPERCLUSTER*512];$/;"	v	file:
gs_vbTempBuffer	save/02.Kernel64/Source/FileSystem.c	/^static BYTE gs_vbTempBuffer[FILESYSTEM_SECTORPERCLUSTER*512];$/;"	v	file:
gs_vstCommandTable	02.Kernel64/Source/ConsoleShell.c	/^SHELLCOMMANDENTRY gs_vstCommandTable[] =$/;"	v
gs_vstCommandTable	save/02.Kernel64/Source/ConsoleShell.c	/^SHELLCOMMANDENTRY gs_vstCommandTable[] =$/;"	v
gs_vstKeyMappingTable	02.Kernel64/Source/Keyboard.c	/^static KEYMAPPINGENTRY gs_vstKeyMappingTable[KEY_MAPPINGTABLEMAXCOUNT]=$/;"	v	file:
gs_vstKeyMappingTable	save/02.Kernel64/Source/Keyboard.c	/^static KEYMAPPINGENTRY gs_vstKeyMappingTable[KEY_MAPPINGTABLEMAXCOUNT]=$/;"	v	file:
gs_vstKeyQueueBuffer	02.Kernel64/Source/Keyboard.c	/^static KEYDATA gs_vstKeyQueueBuffer[KEY_MAXQUEUECOUNT];$/;"	v	file:
gs_vstKeyQueueBuffer	save/02.Kernel64/Source/Keyboard.c	/^static KEYDATA gs_vstKeyQueueBuffer[KEY_MAXQUEUECOUNT];$/;"	v	file:
gs_vstScheduler	02.Kernel64/Source/Task.c	/^static SCHEDULER gs_vstScheduler[MAXPROCESSORCOUNT];$/;"	v	file:
iAllocatedCount	02.Kernel64/Source/Task.h	/^	int iAllocatedCount;$/;"	m	struct:kTCBPoolManagerStruct
iAllocatedCount	save/02.Kernel64/Source/Task.h	/^	int iAllocatedCount;$/;"	m	struct:kTCBPoolManagerStruct
iBlockCountOfSmallestBlock	02.Kernel64/Source/DynamicMemory.h	/^	int iBlockCountOfSmallestBlock;$/;"	m	struct:kDynamicMemoryManagerStruct
iBlockCountOfSmallestBlock	save/02.Kernel64/Source/DynamicMemory.h	/^	int iBlockCountOfSmallestBlock;$/;"	m	struct:kDynamicMemoryManagerStruct
iCurrentOffset	02.Kernel64/Source/FileSystem.h	/^	int iCurrentOffset;$/;"	m	struct:kDirectoryHandleStruct
iCurrentOffset	save/02.Kernel64/Source/FileSystem.h	/^	int iCurrentOffset;$/;"	m	struct:kDirectoryHandleStruct
iCurrentPosition	02.Kernel64/Source/ConsoleShell.h	/^	int iCurrentPosition;$/;"	m	struct:kParameterListStruct
iCurrentPosition	save/02.Kernel64/Source/ConsoleShell.h	/^	int iCurrentPosition;$/;"	m	struct:kParameterListStruct
iCurrentPrintOffset	02.Kernel64/Source/Console.h	/^    int iCurrentPrintOffset;$/;"	m	struct:kConsoleManagerStruct
iCurrentPrintOffset	save/02.Kernel64/Source/Console.h	/^    int iCurrentPrintOffset;$/;"	m	struct:kConsoleManagerStruct
iDataSize	02.Kernel64/Source/Queue.h	/^	int iDataSize;$/;"	m	struct:kQueueManagerStruct
iDataSize	save/02.Kernel64/Source/Queue.h	/^	int iDataSize;$/;"	m	struct:kQueueManagerStruct
iDirectoryEntryOffset	02.Kernel64/Source/FileSystem.h	/^	int iDirectoryEntryOffset;$/;"	m	struct:kFileHandleStruct
iDirectoryEntryOffset	save/02.Kernel64/Source/FileSystem.h	/^	int iDirectoryEntryOffset;$/;"	m	struct:kFileHandleStruct
iGetindex	02.Kernel64/Source/Queue.h	/^	int iGetindex;$/;"	m	struct:kQueueManagerStruct
iGetindex	save/02.Kernel64/Source/Queue.h	/^	int iGetindex;$/;"	m	struct:kQueueManagerStruct
iItemCount	02.Kernel64/Source/List.h	/^	int iItemCount;$/;"	m	struct:kListManagerStruct
iItemCount	save/02.Kernel64/Source/List.h	/^	int iItemCount;$/;"	m	struct:kListManagerStruct
iLength	02.Kernel64/Source/ConsoleShell.h	/^	int iLength;$/;"	m	struct:kParameterListStruct
iLength	save/02.Kernel64/Source/ConsoleShell.h	/^	int iLength;$/;"	m	struct:kParameterListStruct
iMaxCount	02.Kernel64/Source/Task.h	/^	int iMaxCount;$/;"	m	struct:kTCBPoolManagerStruct
iMaxCount	save/02.Kernel64/Source/Task.h	/^	int iMaxCount;$/;"	m	struct:kTCBPoolManagerStruct
iMaxDataCount	02.Kernel64/Source/Queue.h	/^	int iMaxDataCount;$/;"	m	struct:kQueueManagerStruct
iMaxDataCount	save/02.Kernel64/Source/Queue.h	/^	int iMaxDataCount;$/;"	m	struct:kQueueManagerStruct
iMaxLevelCount	02.Kernel64/Source/DynamicMemory.h	/^	int iMaxLevelCount;$/;"	m	struct:kDynamicMemoryManagerStruct
iMaxLevelCount	save/02.Kernel64/Source/DynamicMemory.h	/^	int iMaxLevelCount;$/;"	m	struct:kDynamicMemoryManagerStruct
iProcessorCount	02.Kernel64/Source/MPConfigurationTable.h	/^	int iProcessorCount;$/;"	m	struct:kMPConfigurationManagerStruct
iProcessorCount	save/02.Kernel64/Source/MPConfigurationTable.h	/^	int iProcessorCount;$/;"	m	struct:kMPConfigurationManagerStruct
iProcessorTime	02.Kernel64/Source/Task.h	/^	int iProcessorTime;$/;"	m	struct:kSchedulerStruct
iProcessorTime	save/02.Kernel64/Source/Task.h	/^	int iProcessorTime;$/;"	m	struct:kSchedulerStruct
iPutIndex	02.Kernel64/Source/Queue.h	/^	int iPutIndex;$/;"	m	struct:kQueueManagerStruct
iPutIndex	save/02.Kernel64/Source/Queue.h	/^	int iPutIndex;$/;"	m	struct:kQueueManagerStruct
iSkipCountForPause	02.Kernel64/Source/Keyboard.h	/^    int iSkipCountForPause;$/;"	m	struct:kKeyboardManagerStruct
iSkipCountForPause	save/02.Kernel64/Source/Keyboard.h	/^    int iSkipCountForPause;$/;"	m	struct:kKeyboardManagerStruct
iUseCount	02.Kernel64/Source/Task.h	/^	int iUseCount;$/;"	m	struct:kTCBPoolManagerStruct
iUseCount	save/02.Kernel64/Source/Task.h	/^	int iUseCount;$/;"	m	struct:kTCBPoolManagerStruct
jmp	00.BootLoader/BootLoader.asm	/^jmp 0x07C0:START					; CS 세그먼트 레지스터에 0x07C0을 복사하면서 , START 레이블로 이동 (CS 세그먼트는 데이터 이동 명령으르 설정불가능하며 점프나 인터럽트 관련 명령으로 변경 가능$/;"	l
jmp	00.BootLoader/BootLoader2.asm	/^jmp 0x07C0:START					; CS 세그먼트 레지스터에 0x07C0을 복사하면서 , START 레이블로 이동 (CS 세그먼트는 데이터 이동 명령으르 설정불가능하며 점프나 인터럽트 관련 명령으로 변경 가능$/;"	l
jmp	01.Kernel32/VirtualOS.asm	/^jmp 0x1000:START   ; cs 세그먼트 레지스터에 0x1000을 복사하면서, START 레이블로 이동$/;"	l
kAToI	02.Kernel64/Source/Utility.c	/^long kAToI(const char* pcBuffer,int iRadix)$/;"	f
kAToI	save/02.Kernel64/Source/Utility.c	/^long kAToI(const char* pcBuffer,int iRadix)$/;"	f
kActivateKeyboard	02.Kernel64/Source/Keyboard.c	/^BOOL kActivateKeyboard(void)$/;"	f
kActivateKeyboard	save/02.Kernel64/Source/Keyboard.c	/^BOOL kActivateKeyboard(void)$/;"	f
kAddListToHeader	02.Kernel64/Source/List.c	/^void kAddListToHeader(LIST* pstList,void* pvItem)$/;"	f
kAddListToHeader	save/02.Kernel64/Source/List.c	/^void kAddListToHeader(LIST* pstList,void* pvItem)$/;"	f
kAddListToTail	02.Kernel64/Source/List.c	/^void kAddListToTail(LIST* pstList,void* pvItem)$/;"	f
kAddListToTail	save/02.Kernel64/Source/List.c	/^void kAddListToTail(LIST* pstList,void* pvItem)$/;"	f
kAddTaskToReadyList	02.Kernel64/Source/Task.c	/^static BOOL kAddTaskToReadyList(BYTE bAPICID,TCB* pstTask)$/;"	f	file:
kAddTaskToReadyList	save/02.Kernel64/Source/Task.c	/^static BOOL kAddTaskToReadyList(TCB* pstTask)$/;"	f	file:
kAddTaskToSchedulerWithLoadBalancing	02.Kernel64/Source/Task.c	/^void kAddTaskToSchedulerWithLoadBalancing(TCB* pstTask)$/;"	f
kAllocateCacheBuffer	02.Kernel64/Source/CacheManager.c	/^CACHEBUFFER* kAllocateCacheBuffer(int iCacheTableIndex)$/;"	f
kAllocateCacheBuffer	save/02.Kernel64/Source/CacheManager.c	/^CACHEBUFFER* kAllocateCacheBuffer(int iCacheTableIndex)$/;"	f
kAllocateCacheBufferWithFlush	02.Kernel64/Source/FileSystem.c	/^static CACHEBUFFER* kAllocateCacheBufferWithFlush(int iCacheTableIndex)$/;"	f	file:
kAllocateCacheBufferWithFlush	save/02.Kernel64/Source/FileSystem.c	/^static CACHEBUFFER* kAllocateCacheBufferWithFlush(int iCacheTableIndex)$/;"	f	file:
kAllocateFileDirectoryHandle	02.Kernel64/Source/FileSystem.c	/^static void* kAllocateFileDirectoryHandle(void)$/;"	f	file:
kAllocateFileDirectoryHandle	save/02.Kernel64/Source/FileSystem.c	/^static void* kAllocateFileDirectoryHandle(void)$/;"	f	file:
kAllocateMemory	02.Kernel64/Source/DynamicMemory.c	/^void* kAllocateMemory(QWORD qwSize)$/;"	f
kAllocateMemory	save/02.Kernel64/Source/DynamicMemory.c	/^void* kAllocateMemory(QWORD qwSize)$/;"	f
kAllocateTCB	02.Kernel64/Source/Task.c	/^static TCB* kAllocateTCB(void)$/;"	f	file:
kAllocateTCB	save/02.Kernel64/Source/Task.c	/^static TCB* kAllocateTCB(void)$/;"	f	file:
kAllocationBuddyBlock	02.Kernel64/Source/DynamicMemory.c	/^static int kAllocationBuddyBlock(QWORD qwAlignedSize)$/;"	f	file:
kAllocationBuddyBlock	save/02.Kernel64/Source/DynamicMemory.c	/^static int kAllocationBuddyBlock(QWORD qwAlignedSize)$/;"	f	file:
kAnalysisMPConfigurationTable	02.Kernel64/Source/MPConfigurationTable.c	/^BOOL kAnalysisMPConfigurationTable(void)$/;"	f
kAnalysisMPConfigurationTable	save/02.Kernel64/Source/MPConfigurationTable.c	/^BOOL kAnalysisMPConfigurationTable(void)$/;"	f
kBitmapStruct	02.Kernel64/Source/DynamicMemory.h	/^typedef struct kBitmapStruct$/;"	s
kBitmapStruct	save/02.Kernel64/Source/DynamicMemory.h	/^typedef struct kBitmapStruct$/;"	s
kBusEntryStruct	02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kBusEntryStruct$/;"	s
kBusEntryStruct	save/02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kBusEntryStruct$/;"	s
kCPULoad	02.Kernel64/Source/ConsoleShell.c	/^static void kCPULoad(const char* pcParameterBuffer)$/;"	f	file:
kCPULoad	save/02.Kernel64/Source/ConsoleShell.c	/^static void kCPULoad(const char* pcParameterBuffer)$/;"	f	file:
kCacheBufferStruct	02.Kernel64/Source/CacheManager.h	/^typedef struct kCacheBufferStruct$/;"	s
kCacheBufferStruct	save/02.Kernel64/Source/CacheManager.h	/^typedef struct kCacheBufferStruct$/;"	s
kCacheManagerStruct	02.Kernel64/Source/CacheManager.h	/^typedef struct kCacheManagerStruct $/;"	s
kCacheManagerStruct	save/02.Kernel64/Source/CacheManager.h	/^typedef struct kCacheManagerStruct $/;"	s
kCalculateDynamicMemorySize	02.Kernel64/Source/DynamicMemory.c	/^static QWORD kCalculateDynamicMemorySize(void)$/;"	f	file:
kCalculateDynamicMemorySize	save/02.Kernel64/Source/DynamicMemory.c	/^static QWORD kCalculateDynamicMemorySize(void)$/;"	f	file:
kCalculateMetaBlockCount	02.Kernel64/Source/DynamicMemory.c	/^static int kCalculateMetaBlockCount(QWORD qwDynamicRAMSize)$/;"	f	file:
kCalculateMetaBlockCount	save/02.Kernel64/Source/DynamicMemory.c	/^static int kCalculateMetaBlockCount(QWORD qwDynamicRAMSize)$/;"	f	file:
kChangeKeyboardLED	02.Kernel64/Source/Keyboard.c	/^BOOL kChangeKeyboardLED(BOOL bCapsLockOn,BOOL bNumLockOn,BOOL bScrollLockOn)$/;"	f
kChangeKeyboardLED	save/02.Kernel64/Source/Keyboard.c	/^BOOL kChangeKeyboardLED(BOOL bCapsLockOn,BOOL bNumLockOn,BOOL bScrollLockOn)$/;"	f
kChangePriority	02.Kernel64/Source/Task.c	/^BOOL kChangePriority(QWORD qwTaskID,BYTE bPriority)$/;"	f
kChangePriority	save/02.Kernel64/Source/Task.c	/^BOOL kChangePriority(QWORD qwTaskID,BYTE bPriority)$/;"	f
kChangeProcessorAffinity	02.Kernel64/Source/Task.c	/^BOOL kChangeProcessorAffinity(QWORD qwTaskID,BYTE bAffinity)$/;"	f
kChangeTaskAffinity	02.Kernel64/Source/ConsoleShell.c	/^static void kChangeTaskAffinity(const char* pcParameterBuffer)$/;"	f	file:
kChangeTaskPriority	02.Kernel64/Source/ConsoleShell.c	/^static void kChangeTaskPriority(const char* pcParameterBuffer)$/;"	f	file:
kChangeTaskPriority	save/02.Kernel64/Source/ConsoleShell.c	/^static void kChangeTaskPriority(const char* pcParameterBuffer)$/;"	f	file:
kCharactorStruct	01.Kernel32/Source/Types.h	/^typedef struct kCharactorStruct$/;"	s
kCharactorStruct	02.Kernel64/Source/Types.h	/^typedef struct kCharactorStruct$/;"	s
kCharactorStruct	save/02.Kernel64/Source/Types.h	/^typedef struct kCharactorStruct$/;"	s
kCheckTotalRAMSize	02.Kernel64/Source/Utility.c	/^void kCheckTotalRAMSize(void)$/;"	f
kCheckTotalRAMSize	save/02.Kernel64/Source/Utility.c	/^void kCheckTotalRAMSize(void)$/;"	f
kClearScreen	02.Kernel64/Source/Console.c	/^void kClearScreen(void)$/;"	f
kClearScreen	save/02.Kernel64/Source/Console.c	/^void kClearScreen(void)$/;"	f
kClearSerialFIFO	02.Kernel64/Source/SerialPort.c	/^void kClearSerialFIFO(void)$/;"	f
kClearSerialFIFO	save/02.Kernel64/Source/SerialPort.c	/^void kClearSerialFIFO(void)$/;"	f
kClearTS	02.Kernel64/Source/AssemblyUtility.asm	/^kClearTS:$/;"	l
kClearTS	save/02.Kernel64/Source/AssemblyUtility.asm	/^kClearTS:$/;"	l
kCloseDirectory	02.Kernel64/Source/FileSystem.c	/^int kCloseDirectory(DIR* pstDirectory)$/;"	f
kCloseDirectory	save/02.Kernel64/Source/FileSystem.c	/^int kCloseDirectory(DIR* pstDirectory)$/;"	f
kCloseFile	02.Kernel64/Source/FileSystem.c	/^int kCloseFile(FILE* pstFile)$/;"	f
kCloseFile	save/02.Kernel64/Source/FileSystem.c	/^int kCloseFile(FILE* pstFile)$/;"	f
kCls	02.Kernel64/Source/ConsoleShell.c	/^static void kCls(const char* pcParameterBuffer)$/;"	f	file:
kCls	save/02.Kernel64/Source/ConsoleShell.c	/^static void kCls(const char* pcParameterBuffer)$/;"	f	file:
kCommonExceptionHandler	02.Kernel64/Source/InterruptHandler.c	/^void kCommonExceptionHandler(int iVectorNumber,QWORD qwErrorCode)$/;"	f
kCommonExceptionHandler	save/02.Kernel64/Source/InterruptHandler.c	/^void kCommonExceptionHandler(int iVectorNumber,QWORD qwErrorCode)$/;"	f
kCommonInterruptHandler	02.Kernel64/Source/InterruptHandler.c	/^void kCommonInterruptHandler(int iVectorNumber)$/;"	f
kCommonInterruptHandler	save/02.Kernel64/Source/InterruptHandler.c	/^void kCommonInterruptHandler(int iVectorNumber)$/;"	f
kConsoleManagerStruct	02.Kernel64/Source/Console.h	/^typedef struct kConsoleManagerStruct$/;"	s
kConsoleManagerStruct	save/02.Kernel64/Source/Console.h	/^typedef struct kConsoleManagerStruct$/;"	s
kConsolePrintString	02.Kernel64/Source/Console.c	/^int kConsolePrintString(const char* pcBuffer)$/;"	f
kConsolePrintString	save/02.Kernel64/Source/Console.c	/^int kConsolePrintString(const char* pcBuffer)$/;"	f
kContextStruct	02.Kernel64/Source/Task.h	/^typedef struct kContextStruct$/;"	s
kContextStruct	save/02.Kernel64/Source/Task.h	/^typedef struct kContextStruct$/;"	s
kConvertDayOfWeekToString	02.Kernel64/Source/RTC.c	/^char* kConvertDayOfWeekToString(BYTE bDayOfWeek)$/;"	f
kConvertDayOfWeekToString	save/02.Kernel64/Source/RTC.c	/^char* kConvertDayOfWeekToString(BYTE bDayOfWeek)$/;"	f
kConvertScanCodeAndPutQueue	02.Kernel64/Source/Keyboard.c	/^BOOL kConvertScanCodeAndPutQueue(BYTE bScanCode)$/;"	f
kConvertScanCodeAndPutQueue	save/02.Kernel64/Source/Keyboard.c	/^BOOL kConvertScanCodeAndPutQueue(BYTE bScanCode)$/;"	f
kConvertScanCodeToASCIICode	02.Kernel64/Source/Keyboard.c	/^BOOL kConvertScanCodeToASCIICode(BYTE bScanCode,BYTE* pbASCIICODE,BOOL* pbFlags)$/;"	f
kConvertScanCodeToASCIICode	save/02.Kernel64/Source/Keyboard.c	/^BOOL kConvertScanCodeToASCIICode(BYTE bScanCode,BYTE* pbASCIICODE,BOOL* pbFlags)$/;"	f
kCopyKernel64ImageTo2Mbyte	01.Kernel32/Source/main.c	/^void kCopyKernel64ImageTo2Mbyte(void)$/;"	f
kCreateFile	02.Kernel64/Source/FileSystem.c	/^static BOOL kCreateFile(const char* pcFileName,DIRECTORYENTRY* pstEntry,int* piDirectoryEntryIndex)$/;"	f	file:
kCreateFile	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kCreateFile(const char* pcFileName,DIRECTORYENTRY* pstEntry,int* piDirectoryEntryIndex)$/;"	f	file:
kCreateFileInRootDirectory	02.Kernel64/Source/ConsoleShell.c	/^static void kCreateFileInRootDirectory(const char* pcParameterBuffer)$/;"	f	file:
kCreateFileInRootDirectory	save/02.Kernel64/Source/ConsoleShell.c	/^static void kCreateFileInRootDirectory(const char* pcParameterBuffer)$/;"	f	file:
kCreateTask	02.Kernel64/Source/Task.c	/^TCB* kCreateTask(QWORD qwFlags,void* pvMemoryAddress,QWORD qwMemorySize,QWORD qwEntryPointAddress,BYTE bAffinity)$/;"	f
kCreateTask	save/02.Kernel64/Source/Task.c	/^TCB* kCreateTask(QWORD qwFlags,void* pvMemoryAddress,QWORD qwMemorySize,QWORD qwEntryPointAddress)$/;"	f
kCreateTestTask	02.Kernel64/Source/ConsoleShell.c	/^static void kCreateTestTask(const char* pcParameterBuffer)$/;"	f	file:
kCreateTestTask	save/02.Kernel64/Source/ConsoleShell.c	/^static void kCreateTestTask(const char* pcParameterBuffer)$/;"	f	file:
kCreateThreadTask	02.Kernel64/Source/ConsoleShell.c	/^static void kCreateThreadTask(void)$/;"	f	file:
kCreateThreadTask	save/02.Kernel64/Source/ConsoleShell.c	/^static void kCreateThreadTask(void)$/;"	f	file:
kCutDownAccessTime	02.Kernel64/Source/CacheManager.c	/^static void kCutDownAccessTime(int iCacheTableIndex)$/;"	f	file:
kCutDownAccessTime	save/02.Kernel64/Source/CacheManager.c	/^static void kCutDownAccessTime(int iCacheTableIndex)$/;"	f	file:
kDecimalStringToLong	02.Kernel64/Source/Utility.c	/^long kDecimalStringToLong(const char* pcBuffer)$/;"	f
kDecimalStringToLong	save/02.Kernel64/Source/Utility.c	/^long kDecimalStringToLong(const char* pcBuffer)$/;"	f
kDecimalTostring	02.Kernel64/Source/Utility.c	/^int kDecimalTostring(long lValue,char* pcBuffer)$/;"	f
kDecimalTostring	save/02.Kernel64/Source/Utility.c	/^int kDecimalTostring(long lValue,char* pcBuffer)$/;"	f
kDecreaseProcessorTime	02.Kernel64/Source/Task.c	/^void kDecreaseProcessorTime(BYTE bAPICID)$/;"	f
kDecreaseProcessorTime	save/02.Kernel64/Source/Task.c	/^void kDecreaseProcessorTime(void)$/;"	f
kDeleteFileInRootDirectory	02.Kernel64/Source/ConsoleShell.c	/^static void kDeleteFileInRootDirectory(const char* pcParameterBuffer)$/;"	f	file:
kDeleteFileInRootDirectory	save/02.Kernel64/Source/ConsoleShell.c	/^static void kDeleteFileInRootDirectory(const char* pcParameterBuffer)$/;"	f	file:
kDeviceNotAvailableHandler	02.Kernel64/Source/InterruptHandler.c	/^void kDeviceNotAvailableHandler(int iVectorNumber)$/;"	f
kDeviceNotAvailableHandler	save/02.Kernel64/Source/InterruptHandler.c	/^void kDeviceNotAvailableHandler(int iVectorNumber)$/;"	f
kDirectoryEntryStruct	02.Kernel64/Source/FileSystem.h	/^typedef struct kDirectoryEntryStruct$/;"	s
kDirectoryEntryStruct	save/02.Kernel64/Source/FileSystem.h	/^typedef struct kDirectoryEntryStruct$/;"	s
kDirectoryHandleStruct	02.Kernel64/Source/FileSystem.h	/^typedef struct kDirectoryHandleStruct$/;"	s
kDirectoryHandleStruct	save/02.Kernel64/Source/FileSystem.h	/^typedef struct kDirectoryHandleStruct$/;"	s
kDisableInterrupt	02.Kernel64/Source/AssemblyUtility.asm	/^kDisableInterrupt:$/;"	l
kDisableInterrupt	save/02.Kernel64/Source/AssemblyUtility.asm	/^kDisableInterrupt:$/;"	l
kDiscardAllCacheBuffer	02.Kernel64/Source/CacheManager.c	/^void kDiscardAllCacheBuffer(int iCacheTableIndex)$/;"	f
kDiscardAllCacheBuffer	save/02.Kernel64/Source/CacheManager.c	/^void kDiscardAllCacheBuffer(int iCacheTableIndex)$/;"	f
kDownloadFile	02.Kernel64/Source/ConsoleShell.c	/^static void kDownloadFile(const char* pcParameterBuffer)$/;"	f	file:
kDownloadFile	save/02.Kernel64/Source/ConsoleShell.c	/^static void kDownloadFile(const char* pcParameterBuffer)$/;"	f	file:
kDropCharactorThread	02.Kernel64/Source/ConsoleShell.c	/^static void kDropCharactorThread(void)$/;"	f	file:
kDropCharactorThread	save/02.Kernel64/Source/ConsoleShell.c	/^static void kDropCharactorThread(void)$/;"	f	file:
kDynamicMemoryManagerStruct	02.Kernel64/Source/DynamicMemory.h	/^typedef struct kDynamicMemoryManagerStruct$/;"	s
kDynamicMemoryManagerStruct	save/02.Kernel64/Source/DynamicMemory.h	/^typedef struct kDynamicMemoryManagerStruct$/;"	s
kEnableA20Gate	02.Kernel64/Source/Keyboard.c	/^void kEnableA20Gate(void)$/;"	f
kEnableA20Gate	save/02.Kernel64/Source/Keyboard.c	/^void kEnableA20Gate(void)$/;"	f
kEnableGlobalLocalAPIC	02.Kernel64/Source/AssemblyUtility.asm	/^kEnableGlobalLocalAPIC:$/;"	l
kEnableGlobalLocalAPIC	save/02.Kernel64/Source/AssemblyUtility.asm	/^kEnableGlobalLocalAPIC:$/;"	l
kEnableInterrupt	02.Kernel64/Source/AssemblyUtility.asm	/^kEnableInterrupt:$/;"	l
kEnableInterrupt	save/02.Kernel64/Source/AssemblyUtility.asm	/^kEnableInterrupt:$/;"	l
kEnableSoftwareLocalAPIC	02.Kernel64/Source/LocalAPIC.c	/^void kEnableSoftwareLocalAPIC(void)$/;"	f
kEnableSoftwareLocalAPIC	save/02.Kernel64/Source/LocalAPIC.c	/^void kEnableSoftwareLocalAPIC(void)$/;"	f
kEndTask	02.Kernel64/Source/Task.c	/^BOOL kEndTask(QWORD qwTaskID)$/;"	f
kEndTask	save/02.Kernel64/Source/Task.c	/^BOOL kEndTask(QWORD qwTaskID)$/;"	f
kExecuteCommand	02.Kernel64/Source/ConsoleShell.c	/^void kExecuteCommand(const char* pcCommandBuffer)$/;"	f
kExecuteCommand	save/02.Kernel64/Source/ConsoleShell.c	/^void kExecuteCommand(const char* pcCommandBuffer)$/;"	f
kExitTask	02.Kernel64/Source/Task.c	/^void kExitTask(void)$/;"	f
kExitTask	save/02.Kernel64/Source/Task.c	/^void kExitTask(void)$/;"	f
kFPUTestTask	02.Kernel64/Source/ConsoleShell.c	/^static void kFPUTestTask(void)$/;"	f	file:
kFPUTestTask	save/02.Kernel64/Source/ConsoleShell.c	/^static void kFPUTestTask(void)$/;"	f	file:
kFileDirectoryHandleStruct	02.Kernel64/Source/FileSystem.h	/^typedef struct kFileDirectoryHandleStruct$/;"	s
kFileDirectoryHandleStruct	save/02.Kernel64/Source/FileSystem.h	/^typedef struct kFileDirectoryHandleStruct$/;"	s
kFileHandleStruct	02.Kernel64/Source/FileSystem.h	/^typedef struct kFileHandleStruct$/;"	s
kFileHandleStruct	save/02.Kernel64/Source/FileSystem.h	/^typedef struct kFileHandleStruct$/;"	s
kFileSystemManagerStruct	02.Kernel64/Source/FileSystem.h	/^typedef struct kFileSystemManagerStruct$/;"	s
kFileSystemManagerStruct	save/02.Kernel64/Source/FileSystem.h	/^typedef struct kFileSystemManagerStruct$/;"	s
kFindCacheBuffer	02.Kernel64/Source/CacheManager.c	/^CACHEBUFFER* kFindCacheBuffer(int iCacheTableIndex,DWORD dwTag)$/;"	f
kFindCacheBuffer	save/02.Kernel64/Source/CacheManager.c	/^CACHEBUFFER* kFindCacheBuffer(int iCacheTableIndex,DWORD dwTag)$/;"	f
kFindDirectoryEntry	02.Kernel64/Source/FileSystem.c	/^static int kFindDirectoryEntry(const char* pcFileName,DIRECTORYENTRY* pstEntry)$/;"	f	file:
kFindDirectoryEntry	save/02.Kernel64/Source/FileSystem.c	/^static int kFindDirectoryEntry(const char* pcFileName,DIRECTORYENTRY* pstEntry)$/;"	f	file:
kFindFreeBlockInBitmap	02.Kernel64/Source/DynamicMemory.c	/^static int kFindFreeBlockInBitmap(int iBlockListIndex)$/;"	f	file:
kFindFreeBlockInBitmap	save/02.Kernel64/Source/DynamicMemory.c	/^static int kFindFreeBlockInBitmap(int iBlockListIndex)$/;"	f	file:
kFindFreeCluster	02.Kernel64/Source/FileSystem.c	/^static DWORD kFindFreeCluster(void)$/;"	f	file:
kFindFreeCluster	save/02.Kernel64/Source/FileSystem.c	/^static DWORD kFindFreeCluster(void)$/;"	f	file:
kFindFreeDirectoryEntry	02.Kernel64/Source/FileSystem.c	/^static int kFindFreeDirectoryEntry(void)$/;"	f	file:
kFindFreeDirectoryEntry	save/02.Kernel64/Source/FileSystem.c	/^static int kFindFreeDirectoryEntry(void)$/;"	f	file:
kFindIOAPICEntryForISA	02.Kernel64/Source/MPConfigurationTable.c	/^IOAPICENTRY* kFindIOAPICEntryForISA( void )$/;"	f
kFindList	02.Kernel64/Source/List.c	/^void* kFindList(const LIST* pstList,QWORD qwID)$/;"	f
kFindList	save/02.Kernel64/Source/List.c	/^void* kFindList(const LIST* pstList,QWORD qwID)$/;"	f
kFindMPFloatingPointerAddress	02.Kernel64/Source/MPConfigurationTable.c	/^BOOL kFindMPFloatingPointerAddress(QWORD* pstAddress)$/;"	f
kFindMPFloatingPointerAddress	save/02.Kernel64/Source/MPConfigurationTable.c	/^BOOL kFindMPFloatingPointerAddress(QWORD* pstAddress)$/;"	f
kFindSchedulerOfMinimumTaskCount	02.Kernel64/Source/Task.c	/^static BYTE kFindSchedulerOfMinimumTaskCount(const TCB* pstTask)$/;"	f	file:
kFindSchedulerOfTaskAndLock	02.Kernel64/Source/Task.c	/^static BOOL kFindSchedulerOfTaskAndLock(QWORD qwTaskID,BYTE* pbAPICID)$/;"	f	file:
kFlushCache	02.Kernel64/Source/ConsoleShell.c	/^static void kFlushCache(const char* pcParameterBuffer)$/;"	f	file:
kFlushCache	save/02.Kernel64/Source/ConsoleShell.c	/^static void kFlushCache(const char* pcParameterBuffer)$/;"	f	file:
kFlushFileSystemCache	02.Kernel64/Source/FileSystem.c	/^BOOL kFlushFileSystemCache(void)$/;"	f
kFlushFileSystemCache	save/02.Kernel64/Source/FileSystem.c	/^BOOL kFlushFileSystemCache(void)$/;"	f
kFormat	02.Kernel64/Source/FileSystem.c	/^BOOL kFormat(void)$/;"	f
kFormat	save/02.Kernel64/Source/FileSystem.c	/^BOOL kFormat(void)$/;"	f
kFormatHDD	02.Kernel64/Source/ConsoleShell.c	/^static void kFormatHDD(const char* pcParameterBuffer)$/;"	f	file:
kFormatHDD	save/02.Kernel64/Source/ConsoleShell.c	/^static void kFormatHDD(const char* pcParameterBuffer)$/;"	f	file:
kFreeBuddyBlock	02.Kernel64/Source/DynamicMemory.c	/^static BOOL kFreeBuddyBlock(int iBlockListIndex,int iBlockOffset)$/;"	f	file:
kFreeBuddyBlock	save/02.Kernel64/Source/DynamicMemory.c	/^static BOOL kFreeBuddyBlock(int iBlockListIndex,int iBlockOffset)$/;"	f	file:
kFreeClusterUtilEnd	02.Kernel64/Source/FileSystem.c	/^static BOOL kFreeClusterUtilEnd(DWORD dwClusterIndex)$/;"	f	file:
kFreeClusterUtilEnd	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kFreeClusterUtilEnd(DWORD dwClusterIndex)$/;"	f	file:
kFreeFileDirectoryHandle	02.Kernel64/Source/FileSystem.c	/^static void kFreeFileDirectoryHandle(FILE* pstFile)$/;"	f	file:
kFreeFileDirectoryHandle	save/02.Kernel64/Source/FileSystem.c	/^static void kFreeFileDirectoryHandle(FILE* pstFile)$/;"	f	file:
kFreeMemory	02.Kernel64/Source/DynamicMemory.c	/^BOOL kFreeMemory(void* pvAddress)$/;"	f
kFreeMemory	save/02.Kernel64/Source/DynamicMemory.c	/^BOOL kFreeMemory(void* pvAddress)$/;"	f
kFreeTCB	02.Kernel64/Source/Task.c	/^static void kFreeTCB(QWORD qwID)$/;"	f	file:
kFreeTCB	save/02.Kernel64/Source/Task.c	/^static void kFreeTCB(QWORD qwID)$/;"	f	file:
kGDTEntry16struct	02.Kernel64/Source/Descriptor.h	/^typedef struct kGDTEntry16struct$/;"	s
kGDTEntry16struct	save/02.Kernel64/Source/Descriptor.h	/^typedef struct kGDTEntry16struct$/;"	s
kGDTEntry8Struct	02.Kernel64/Source/Descriptor.h	/^typedef struct kGDTEntry8Struct$/;"	s
kGDTEntry8Struct	save/02.Kernel64/Source/Descriptor.h	/^typedef struct kGDTEntry8Struct$/;"	s
kGDTRStruct	02.Kernel64/Source/Descriptor.h	/^typedef struct kGDTRStruct$/;"	s
kGDTRStruct	save/02.Kernel64/Source/Descriptor.h	/^typedef struct kGDTRStruct$/;"	s
kGetAPICID	02.Kernel64/Source/MultiProcessor.c	/^BYTE kGetAPICID(void)$/;"	f
kGetAPICID	save/02.Kernel64/Source/MultiProcessor.c	/^BYTE kGetAPICID(void)$/;"	f
kGetBlockListIndexOfMatchSize	02.Kernel64/Source/DynamicMemory.c	/^static int kGetBlockListIndexOfMatchSize(QWORD qwAlignedSize)$/;"	f	file:
kGetBlockListIndexOfMatchSize	save/02.Kernel64/Source/DynamicMemory.c	/^static int kGetBlockListIndexOfMatchSize(QWORD qwAlignedSize)$/;"	f	file:
kGetBuddyBlockSize	02.Kernel64/Source/DynamicMemory.c	/^static QWORD kGetBuddyBlockSize(QWORD qwSize)$/;"	f	file:
kGetBuddyBlockSize	save/02.Kernel64/Source/DynamicMemory.c	/^static QWORD kGetBuddyBlockSize(QWORD qwSize)$/;"	f	file:
kGetCacheBufferAndCount	02.Kernel64/Source/CacheManager.c	/^BOOL kGetCacheBufferAndCount(int iCacheTableIndex,CACHEBUFFER** ppstCacheBuffer,int* piMaxCount)$/;"	f
kGetCacheBufferAndCount	save/02.Kernel64/Source/CacheManager.c	/^BOOL kGetCacheBufferAndCount(int iCacheTableIndex,CACHEBUFFER** ppstCacheBuffer,int* piMaxCount)$/;"	f
kGetCh	02.Kernel64/Source/Console.c	/^BYTE kGetCh(void)$/;"	f
kGetCh	save/02.Kernel64/Source/Console.c	/^BYTE kGetCh(void)$/;"	f
kGetClusterLinkData	02.Kernel64/Source/FileSystem.c	/^static BOOL kGetClusterLinkData(DWORD dwClusterIndex,DWORD* pdwData)$/;"	f	file:
kGetClusterLinkData	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kGetClusterLinkData(DWORD dwClusterIndex,DWORD* pdwData)$/;"	f	file:
kGetCursor	02.Kernel64/Source/Console.c	/^void kGetCursor(int* piX,int* piY)$/;"	f
kGetCursor	save/02.Kernel64/Source/Console.c	/^void kGetCursor(int* piX,int* piY)$/;"	f
kGetDirectoryEntryData	02.Kernel64/Source/FileSystem.c	/^static BOOL kGetDirectoryEntryData(int iIndex,DIRECTORYENTRY* pstEntry)$/;"	f	file:
kGetDirectoryEntryData	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kGetDirectoryEntryData(int iIndex,DIRECTORYENTRY* pstEntry)$/;"	f	file:
kGetDynamicMemoryInformation	02.Kernel64/Source/DynamicMemory.c	/^void kGetDynamicMemoryInformation(QWORD* pqwDynamicMemoryStartAddress,QWORD* pqwDynamicMemoryTotalSize,QWORD* pqwMetaDataSize,QWORD* pqwUsedMemorySize)$/;"	f
kGetDynamicMemoryInformation	save/02.Kernel64/Source/DynamicMemory.c	/^void kGetDynamicMemoryInformation(QWORD* pqwDynamicMemoryStartAddress,QWORD* pqwDynamicMemoryTotalSize,QWORD* pqwMetaDataSize,QWORD* pqwUsedMemorySize)$/;"	f
kGetDynamicMemoryManager	02.Kernel64/Source/DynamicMemory.c	/^DYNAMICMEMORY* kGetDynamicMemoryManager(void)$/;"	f
kGetDynamicMemoryManager	save/02.Kernel64/Source/DynamicMemory.c	/^DYNAMICMEMORY* kGetDynamicMemoryManager(void)$/;"	f
kGetFileSystemInformation	02.Kernel64/Source/FileSystem.c	/^void kGetFileSystemInformation(FILESYSTEMMANAGER* pstManager)$/;"	f
kGetFileSystemInformation	save/02.Kernel64/Source/FileSystem.c	/^void kGetFileSystemInformation(FILESYSTEMMANAGER* pstManager)$/;"	f
kGetFlagInBitmap	02.Kernel64/Source/DynamicMemory.c	/^static BYTE kGetFlagInBitmap(int iBlockListIndex,int iOffset)$/;"	f	file:
kGetFlagInBitmap	save/02.Kernel64/Source/DynamicMemory.c	/^static BYTE kGetFlagInBitmap(int iBlockListIndex,int iOffset)$/;"	f	file:
kGetHDDInformation	02.Kernel64/Source/FileSystem.c	/^BOOL kGetHDDInformation(HDDINFORMATION* pstInformation)$/;"	f
kGetHDDInformation	save/02.Kernel64/Source/FileSystem.c	/^BOOL kGetHDDInformation(HDDINFORMATION* pstInformation)$/;"	f
kGetHeaderFromList	02.Kernel64/Source/List.c	/^void* kGetHeaderFromList(const LIST* pstList)$/;"	f
kGetHeaderFromList	save/02.Kernel64/Source/List.c	/^void* kGetHeaderFromList(const LIST* pstList)$/;"	f
kGetIOAPICBaseAddressOfISA	02.Kernel64/Source/IOAPIC.c	/^QWORD kGetIOAPICBaseAddressOfISA(void)$/;"	f
kGetInterruptManager	02.Kernel64/Source/InterruptHandler.c	/^INTERRUPTMANAGER* kGetInterruptManager(void)$/;"	f
kGetKeyFromKeyQueue	02.Kernel64/Source/Keyboard.c	/^BOOL kGetKeyFromKeyQueue(KEYDATA* pstData)$/;"	f
kGetKeyFromKeyQueue	save/02.Kernel64/Source/Keyboard.c	/^BOOL kGetKeyFromKeyQueue(KEYDATA* pstData)$/;"	f
kGetKeyboardScanCode	02.Kernel64/Source/Keyboard.c	/^BYTE kGetKeyboardScanCode(void)$/;"	f
kGetKeyboardScanCode	save/02.Kernel64/Source/Keyboard.c	/^BYTE kGetKeyboardScanCode(void)$/;"	f
kGetLastFPUUsedTaskID	save/02.Kernel64/Source/Task.c	/^QWORD kGetLastFPUUsedTaskID(void)$/;"	f
kGetListCount	02.Kernel64/Source/List.c	/^int kGetListCount(const LIST* pstList)$/;"	f
kGetListCount	save/02.Kernel64/Source/List.c	/^int kGetListCount(const LIST* pstList)$/;"	f
kGetLocalAPICBaseAddress	02.Kernel64/Source/LocalAPIC.c	/^QWORD kGetLocalAPICBaseAddress(void)$/;"	f
kGetLocalAPICBaseAddress	save/02.Kernel64/Source/LocalAPIC.c	/^QWORD kGetLocalAPICBaseAddress(void)$/;"	f
kGetMPConfigurationManager	02.Kernel64/Source/MPConfigurationTable.c	/^MPCONFIGURATIONMANAGER* kGetMPConfigurationManager(void)$/;"	f
kGetMPConfigurationManager	save/02.Kernel64/Source/MPConfigurationTable.c	/^MPCONFIGURATIONMANAGER* kGetMPConfigurationManager(void)$/;"	f
kGetNextFromList	02.Kernel64/Source/List.c	/^void* kGetNextFromList(const LIST* pstList,void* pstCurrent)$/;"	f
kGetNextFromList	save/02.Kernel64/Source/List.c	/^void* kGetNextFromList(const LIST* pstList,void* pstCurrent)$/;"	f
kGetNextParameter	02.Kernel64/Source/ConsoleShell.c	/^int kGetNextParameter(PARAMETERLIST* pstList,char* pcParameter)$/;"	f
kGetNextParameter	save/02.Kernel64/Source/ConsoleShell.c	/^int kGetNextParameter(PARAMETERLIST* pstList,char* pcParameter)$/;"	f
kGetNextTaskToRun	02.Kernel64/Source/Task.c	/^static TCB* kGetNextTaskToRun(BYTE bAPICID)	$/;"	f	file:
kGetNextTaskToRun	save/02.Kernel64/Source/Task.c	/^static TCB* kGetNextTaskToRun(void)	$/;"	f	file:
kGetPreviousFromList	02.Kernel64/Source/List.c	/^void* kGetPreviousFromList(const LIST* pstList,void* pstCurrent)$/;"	f
kGetPreviousFromList	save/02.Kernel64/Source/List.c	/^void* kGetPreviousFromList(const LIST* pstList,void* pstCurrent)$/;"	f
kGetProcessByThread	02.Kernel64/Source/Task.c	/^static TCB* kGetProcessByThread(TCB* pstThread)$/;"	f	file:
kGetProcessByThread	save/02.Kernel64/Source/Task.c	/^static TCB* kGetProcessByThread(TCB* pstThread)$/;"	f	file:
kGetProcessorCount	02.Kernel64/Source/MPConfigurationTable.c	/^int kGetProcessorCount( void )$/;"	f
kGetProcessorCount	save/02.Kernel64/Source/MPConfigurationTable.c	/^int kGetProcessorCount( void )$/;"	f
kGetProcessorLoad	02.Kernel64/Source/Task.c	/^QWORD kGetProcessorLoad(BYTE bAPICID)$/;"	f
kGetProcessorLoad	save/02.Kernel64/Source/Task.c	/^QWORD kGetProcessorLoad(void)$/;"	f
kGetQueue	02.Kernel64/Source/Queue.c	/^BOOL kGetQueue(QUEUE* pstQueue,void* pvData)$/;"	f
kGetQueue	save/02.Kernel64/Source/Queue.c	/^BOOL kGetQueue(QUEUE* pstQueue,void* pvData)$/;"	f
kGetReadyTaskCount	02.Kernel64/Source/Task.c	/^int kGetReadyTaskCount(BYTE bAPICID)$/;"	f
kGetReadyTaskCount	save/02.Kernel64/Source/Task.c	/^int kGetReadyTaskCount(void)$/;"	f
kGetRunningTask	02.Kernel64/Source/Task.c	/^TCB* kGetRunningTask(void)$/;"	f
kGetRunningTask	save/02.Kernel64/Source/Task.c	/^TCB* kGetRunningTask(void)$/;"	f
kGetTCBInTCBPool	02.Kernel64/Source/Task.c	/^TCB* kGetTCBInTCBPool(int iOffset)$/;"	f
kGetTCBInTCBPool	save/02.Kernel64/Source/Task.c	/^TCB* kGetTCBInTCBPool(int iOffset)$/;"	f
kGetTailFromList	02.Kernel64/Source/List.c	/^void* kGetTailFromList(const LIST* pstList)$/;"	f
kGetTailFromList	save/02.Kernel64/Source/List.c	/^void* kGetTailFromList(const LIST* pstList)$/;"	f
kGetTaskCount	02.Kernel64/Source/Task.c	/^int kGetTaskCount(BYTE bAPICID)$/;"	f
kGetTaskCount	save/02.Kernel64/Source/Task.c	/^int kGetTaskCount(void)$/;"	f
kGetTickCount	02.Kernel64/Source/Utility.c	/^QWORD kGetTickCount(void)$/;"	f
kGetTickCount	save/02.Kernel64/Source/Utility.c	/^QWORD kGetTickCount(void)$/;"	f
kGetTotalRAMSize	02.Kernel64/Source/Utility.c	/^QWORD kGetTotalRAMSize(void)$/;"	f
kGetTotalRAMSize	save/02.Kernel64/Source/Utility.c	/^QWORD kGetTotalRAMSize(void)$/;"	f
kGetVictimInCacheBuffer	02.Kernel64/Source/CacheManager.c	/^CACHEBUFFER* kGetVictimInCacheBuffer(int iCacheTableIndex)$/;"	f
kGetVictimInCacheBuffer	save/02.Kernel64/Source/CacheManager.c	/^CACHEBUFFER* kGetVictimInCacheBuffer(int iCacheTableIndex)$/;"	f
kHDDHandler	02.Kernel64/Source/InterruptHandler.c	/^void kHDDHandler(int iVectorNumber)$/;"	f
kHDDHandler	save/02.Kernel64/Source/InterruptHandler.c	/^void kHDDHandler(int iVectorNumber)$/;"	f
kHDDInformationStruct	02.Kernel64/Source/HardDisk.h	/^typedef struct kHDDInformationStruct$/;"	s
kHDDInformationStruct	save/02.Kernel64/Source/HardDisk.h	/^typedef struct kHDDInformationStruct$/;"	s
kHDDManagerStruct	02.Kernel64/Source/HardDisk.h	/^typedef struct kHDDManagerStruct$/;"	s
kHDDManagerStruct	save/02.Kernel64/Source/HardDisk.h	/^typedef struct kHDDManagerStruct$/;"	s
kHaltProcessorByLoad	save/02.Kernel64/Source/Task.c	/^void kHaltProcessorByLoad(void)$/;"	f
kHelp	02.Kernel64/Source/ConsoleShell.c	/^static void kHelp(const char* pcParameterBuffer)$/;"	f	file:
kHelp	save/02.Kernel64/Source/ConsoleShell.c	/^static void kHelp(const char* pcParameterBuffer)$/;"	f	file:
kHexStringToQword	02.Kernel64/Source/Utility.c	/^QWORD kHexStringToQword(const char* pcBuffer)$/;"	f
kHexStringToQword	save/02.Kernel64/Source/Utility.c	/^QWORD kHexStringToQword(const char* pcBuffer)$/;"	f
kHexToString	02.Kernel64/Source/Utility.c	/^int kHexToString(QWORD qwValue,char* pcBuffer)$/;"	f
kHexToString	save/02.Kernel64/Source/Utility.c	/^int kHexToString(QWORD qwValue,char* pcBuffer)$/;"	f
kHlt	02.Kernel64/Source/AssemblyUtility.asm	/^kHlt:$/;"	l
kHlt	save/02.Kernel64/Source/AssemblyUtility.asm	/^kHlt:$/;"	l
kIDTEntryStruct	02.Kernel64/Source/Descriptor.h	/^typedef struct kIDTEntryStruct$/;"	s
kIDTEntryStruct	save/02.Kernel64/Source/Descriptor.h	/^typedef struct kIDTEntryStruct$/;"	s
kIOAPICEntryStruct	02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kIOAPICEntryStruct$/;"	s
kIOAPICEntryStruct	save/02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kIOAPICEntryStruct$/;"	s
kIOAPICManagerStruct	02.Kernel64/Source/IOAPIC.h	/^typedef struct kIOAPICManagerStruct $/;"	s
kIOInterruptAssignmentEntryStruct	02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kIOInterruptAssignmentEntryStruct$/;"	s
kIOInterruptAssignmentEntryStruct	save/02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kIOInterruptAssignmentEntryStruct$/;"	s
kIOREdirectionTableStrcut	02.Kernel64/Source/IOAPIC.h	/^typedef struct kIOREdirectionTableStrcut $/;"	s
kISR15	02.Kernel64/Source/ISR.asm	/^kISR15:$/;"	l
kISR15	save/02.Kernel64/Source/ISR.asm	/^kISR15:$/;"	l
kISRAlignmentCheck	02.Kernel64/Source/ISR.asm	/^kISRAlignmentCheck:$/;"	l
kISRAlignmentCheck	save/02.Kernel64/Source/ISR.asm	/^kISRAlignmentCheck:$/;"	l
kISRBoundRangeExceeded	02.Kernel64/Source/ISR.asm	/^kISRBoundRangeExceeded:$/;"	l
kISRBoundRangeExceeded	save/02.Kernel64/Source/ISR.asm	/^kISRBoundRangeExceeded:$/;"	l
kISRBreakPoint	02.Kernel64/Source/ISR.asm	/^kISRBreakPoint:$/;"	l
kISRBreakPoint	save/02.Kernel64/Source/ISR.asm	/^kISRBreakPoint:$/;"	l
kISRCoprocessor	02.Kernel64/Source/ISR.asm	/^kISRCoprocessor:$/;"	l
kISRCoprocessor	save/02.Kernel64/Source/ISR.asm	/^kISRCoprocessor:$/;"	l
kISRCoprocessorSegmentOverrun	02.Kernel64/Source/ISR.asm	/^kISRCoprocessorSegmentOverrun:$/;"	l
kISRCoprocessorSegmentOverrun	save/02.Kernel64/Source/ISR.asm	/^kISRCoprocessorSegmentOverrun:$/;"	l
kISRDebug	02.Kernel64/Source/ISR.asm	/^kISRDebug:$/;"	l
kISRDebug	save/02.Kernel64/Source/ISR.asm	/^kISRDebug:$/;"	l
kISRDeviceNotAvailable	02.Kernel64/Source/ISR.asm	/^kISRDeviceNotAvailable:$/;"	l
kISRDeviceNotAvailable	save/02.Kernel64/Source/ISR.asm	/^kISRDeviceNotAvailable:$/;"	l
kISRDivideError	02.Kernel64/Source/ISR.asm	/^kISRDivideError:$/;"	l
kISRDivideError	save/02.Kernel64/Source/ISR.asm	/^kISRDivideError:$/;"	l
kISRDoubleFault	02.Kernel64/Source/ISR.asm	/^kISRDoubleFault:$/;"	l
kISRDoubleFault	save/02.Kernel64/Source/ISR.asm	/^kISRDoubleFault:$/;"	l
kISRETCException	02.Kernel64/Source/ISR.asm	/^kISRETCException:$/;"	l
kISRETCException	save/02.Kernel64/Source/ISR.asm	/^kISRETCException:$/;"	l
kISRETCInterrupt	02.Kernel64/Source/ISR.asm	/^kISRETCInterrupt:$/;"	l
kISRETCInterrupt	save/02.Kernel64/Source/ISR.asm	/^kISRETCInterrupt:$/;"	l
kISRFPUError	02.Kernel64/Source/ISR.asm	/^kISRFPUError:$/;"	l
kISRFPUError	save/02.Kernel64/Source/ISR.asm	/^kISRFPUError:$/;"	l
kISRFloppy	02.Kernel64/Source/ISR.asm	/^kISRFloppy:$/;"	l
kISRFloppy	save/02.Kernel64/Source/ISR.asm	/^kISRFloppy:$/;"	l
kISRGeneralProtection	02.Kernel64/Source/ISR.asm	/^kISRGeneralProtection:$/;"	l
kISRGeneralProtection	save/02.Kernel64/Source/ISR.asm	/^kISRGeneralProtection:$/;"	l
kISRHDD1	02.Kernel64/Source/ISR.asm	/^kISRHDD1:$/;"	l
kISRHDD1	save/02.Kernel64/Source/ISR.asm	/^kISRHDD1:$/;"	l
kISRHDD2	02.Kernel64/Source/ISR.asm	/^kISRHDD2:$/;"	l
kISRHDD2	save/02.Kernel64/Source/ISR.asm	/^kISRHDD2:$/;"	l
kISRInvalidOpcode	02.Kernel64/Source/ISR.asm	/^kISRInvalidOpcode:$/;"	l
kISRInvalidOpcode	save/02.Kernel64/Source/ISR.asm	/^kISRInvalidOpcode:$/;"	l
kISRInvalidTSS	02.Kernel64/Source/ISR.asm	/^kISRInvalidTSS:$/;"	l
kISRInvalidTSS	save/02.Kernel64/Source/ISR.asm	/^kISRInvalidTSS:$/;"	l
kISRKeyboard	02.Kernel64/Source/ISR.asm	/^kISRKeyboard:$/;"	l
kISRKeyboard	save/02.Kernel64/Source/ISR.asm	/^kISRKeyboard:$/;"	l
kISRMachineCheck	02.Kernel64/Source/ISR.asm	/^kISRMachineCheck:$/;"	l
kISRMachineCheck	save/02.Kernel64/Source/ISR.asm	/^kISRMachineCheck:$/;"	l
kISRMouse	02.Kernel64/Source/ISR.asm	/^kISRMouse:$/;"	l
kISRMouse	save/02.Kernel64/Source/ISR.asm	/^kISRMouse:$/;"	l
kISRNMI	02.Kernel64/Source/ISR.asm	/^kISRNMI:$/;"	l
kISRNMI	save/02.Kernel64/Source/ISR.asm	/^kISRNMI:$/;"	l
kISRNotUsed1	02.Kernel64/Source/ISR.asm	/^kISRNotUsed1:$/;"	l
kISRNotUsed1	save/02.Kernel64/Source/ISR.asm	/^kISRNotUsed1:$/;"	l
kISRNotUsed2	02.Kernel64/Source/ISR.asm	/^kISRNotUsed2:$/;"	l
kISRNotUsed2	save/02.Kernel64/Source/ISR.asm	/^kISRNotUsed2:$/;"	l
kISROverflow	02.Kernel64/Source/ISR.asm	/^kISROverflow:$/;"	l
kISROverflow	save/02.Kernel64/Source/ISR.asm	/^kISROverflow:$/;"	l
kISRPageFault	02.Kernel64/Source/ISR.asm	/^kISRPageFault:$/;"	l
kISRPageFault	save/02.Kernel64/Source/ISR.asm	/^kISRPageFault:$/;"	l
kISRParallel1	02.Kernel64/Source/ISR.asm	/^kISRParallel1:$/;"	l
kISRParallel1	save/02.Kernel64/Source/ISR.asm	/^kISRParallel1:$/;"	l
kISRParallel2	02.Kernel64/Source/ISR.asm	/^kISRParallel2:$/;"	l
kISRParallel2	save/02.Kernel64/Source/ISR.asm	/^kISRParallel2:$/;"	l
kISRRTC	02.Kernel64/Source/ISR.asm	/^kISRRTC:$/;"	l
kISRRTC	save/02.Kernel64/Source/ISR.asm	/^kISRRTC:$/;"	l
kISRReserved	02.Kernel64/Source/ISR.asm	/^kISRReserved:$/;"	l
kISRReserved	save/02.Kernel64/Source/ISR.asm	/^kISRReserved:$/;"	l
kISRSIMDError	02.Kernel64/Source/ISR.asm	/^kISRSIMDError:$/;"	l
kISRSIMDError	save/02.Kernel64/Source/ISR.asm	/^kISRSIMDError:$/;"	l
kISRSegmentNotPresent	02.Kernel64/Source/ISR.asm	/^kISRSegmentNotPresent:$/;"	l
kISRSegmentNotPresent	save/02.Kernel64/Source/ISR.asm	/^kISRSegmentNotPresent:$/;"	l
kISRSerial1	02.Kernel64/Source/ISR.asm	/^kISRSerial1:$/;"	l
kISRSerial1	save/02.Kernel64/Source/ISR.asm	/^kISRSerial1:$/;"	l
kISRSerial2	02.Kernel64/Source/ISR.asm	/^kISRSerial2:$/;"	l
kISRSerial2	save/02.Kernel64/Source/ISR.asm	/^kISRSerial2:$/;"	l
kISRSlavePIC	02.Kernel64/Source/ISR.asm	/^kISRSlavePIC:$/;"	l
kISRSlavePIC	save/02.Kernel64/Source/ISR.asm	/^kISRSlavePIC:$/;"	l
kISRStackSegmentFault	02.Kernel64/Source/ISR.asm	/^kISRStackSegmentFault:$/;"	l
kISRStackSegmentFault	save/02.Kernel64/Source/ISR.asm	/^kISRStackSegmentFault:$/;"	l
kISRTimer	02.Kernel64/Source/ISR.asm	/^kISRTimer:$/;"	l
kISRTimer	save/02.Kernel64/Source/ISR.asm	/^kISRTimer:$/;"	l
kIToA	02.Kernel64/Source/Utility.c	/^int kIToA(long lValue,char* pcBuffer,int iRadix)$/;"	f
kIToA	save/02.Kernel64/Source/Utility.c	/^int kIToA(long lValue,char* pcBuffer,int iRadix)$/;"	f
kIdleTask	02.Kernel64/Source/Task.c	/^void kIdleTask(void)$/;"	f
kIdleTask	save/02.Kernel64/Source/Task.c	/^void kIdleTask(void)$/;"	f
kInPortByte	02.Kernel64/Source/AssemblyUtility.asm	/^kInPortByte:$/;"	l
kInPortByte	save/02.Kernel64/Source/AssemblyUtility.asm	/^kInPortByte:$/;"	l
kInPortWord	02.Kernel64/Source/AssemblyUtility.asm	/^kInPortWord:$/;"	l
kInPortWord	save/02.Kernel64/Source/AssemblyUtility.asm	/^kInPortWord:$/;"	l
kIncreaseInterruptCount	02.Kernel64/Source/InterruptHandler.c	/^void kIncreaseInterruptCount(int iIRQ)$/;"	f
kInitializeCacheManager	02.Kernel64/Source/CacheManager.c	/^BOOL kInitializeCacheManager(void)$/;"	f
kInitializeCacheManager	save/02.Kernel64/Source/CacheManager.c	/^BOOL kInitializeCacheManager(void)$/;"	f
kInitializeConsole	02.Kernel64/Source/Console.c	/^void kInitializeConsole(int iX,int iY)$/;"	f
kInitializeConsole	save/02.Kernel64/Source/Console.c	/^void kInitializeConsole(int iX,int iY)$/;"	f
kInitializeDynamicMemory	02.Kernel64/Source/DynamicMemory.c	/^void kInitializeDynamicMemory(void)$/;"	f
kInitializeDynamicMemory	save/02.Kernel64/Source/DynamicMemory.c	/^void kInitializeDynamicMemory(void)$/;"	f
kInitializeFPU	02.Kernel64/Source/AssemblyUtility.asm	/^kInitializeFPU:$/;"	l
kInitializeFPU	save/02.Kernel64/Source/AssemblyUtility.asm	/^kInitializeFPU:$/;"	l
kInitializeFileSystem	02.Kernel64/Source/FileSystem.c	/^BOOL kInitializeFileSystem(void)$/;"	f
kInitializeFileSystem	save/02.Kernel64/Source/FileSystem.c	/^BOOL kInitializeFileSystem(void)$/;"	f
kInitializeGDTTableAndTSS	02.Kernel64/Source/Descriptor.c	/^void kInitializeGDTTableAndTSS (void)$/;"	f
kInitializeGDTTableAndTSS	save/02.Kernel64/Source/Descriptor.c	/^void kInitializeGDTTableAndTSS (void)$/;"	f
kInitializeHDD	02.Kernel64/Source/HardDisk.c	/^BOOL kInitializeHDD(void)$/;"	f
kInitializeHDD	save/02.Kernel64/Source/HardDisk.c	/^BOOL kInitializeHDD(void)$/;"	f
kInitializeHandler	02.Kernel64/Source/InterruptHandler.c	/^void kInitializeHandler(void)$/;"	f
kInitializeIDTTables	02.Kernel64/Source/Descriptor.c	/^void kInitializeIDTTables(void)$/;"	f
kInitializeIDTTables	save/02.Kernel64/Source/Descriptor.c	/^void kInitializeIDTTables(void)$/;"	f
kInitializeIORedirectionTable	02.Kernel64/Source/IOAPIC.c	/^void kInitializeIORedirectionTable( void )$/;"	f
kInitializeKernel64Area	01.Kernel32/Source/main.c	/^BOOL kInitializeKernel64Area(void)$/;"	f
kInitializeKeyboard	02.Kernel64/Source/Keyboard.c	/^BOOL kInitializeKeyboard(void)$/;"	f
kInitializeKeyboard	save/02.Kernel64/Source/Keyboard.c	/^BOOL kInitializeKeyboard(void)$/;"	f
kInitializeList	02.Kernel64/Source/List.c	/^void kInitializeList(LIST* pstList)$/;"	f
kInitializeList	save/02.Kernel64/Source/List.c	/^void kInitializeList(LIST* pstList)$/;"	f
kInitializeLocalVectorTable	02.Kernel64/Source/LocalAPIC.c	/^void kInitializeLocalVectorTable( void )$/;"	f
kInitializeMutex	02.Kernel64/Source/Synchronization.c	/^void kInitializeMutex(MUTEX* pstMutex)$/;"	f
kInitializeMutex	save/02.Kernel64/Source/Synchronization.c	/^void kInitializeMutex(MUTEX* pstMutex)$/;"	f
kInitializePIC	02.Kernel64/Source/PIC.c	/^void kInitializePIC(void)$/;"	f
kInitializePIC	save/02.Kernel64/Source/PIC.c	/^void kInitializePIC(void)$/;"	f
kInitializePIT	02.Kernel64/Source/PIT.c	/^void kInitializePIT(WORD wCount,BOOL bPeriodic)$/;"	f
kInitializePIT	save/02.Kernel64/Source/PIT.c	/^void kInitializePIT(WORD wCount,BOOL bPeriodic)$/;"	f
kInitializePageTables	01.Kernel32/Source/Page.c	/^void kInitializePageTables(void)$/;"	f
kInitializeParameter	02.Kernel64/Source/ConsoleShell.c	/^void kInitializeParameter(PARAMETERLIST* pstList,const char* pcParameter)$/;"	f
kInitializeParameter	save/02.Kernel64/Source/ConsoleShell.c	/^void kInitializeParameter(PARAMETERLIST* pstList,const char* pcParameter)$/;"	f
kInitializeQueue	02.Kernel64/Source/Queue.c	/^void kInitializeQueue(QUEUE* pstQueue,void* pvQueueBuffer,int iMaxDataCount,int iDataSize)$/;"	f
kInitializeQueue	save/02.Kernel64/Source/Queue.c	/^void kInitializeQueue(QUEUE* pstQueue,void* pvQueueBuffer,int iMaxDataCount,int iDataSize)$/;"	f
kInitializeRDD	02.Kernel64/Source/RAMDisk.c	/^BOOL kInitializeRDD(DWORD dwTotalSectorCount)$/;"	f
kInitializeRDD	save/02.Kernel64/Source/RAMDisk.c	/^BOOL kInitializeRDD(DWORD dwTotalSectorCount)$/;"	f
kInitializeScheduler	02.Kernel64/Source/Task.c	/^void kInitializeScheduler(void)$/;"	f
kInitializeScheduler	save/02.Kernel64/Source/Task.c	/^void kInitializeScheduler(void)$/;"	f
kInitializeSerialPort	02.Kernel64/Source/SerialPort.c	/^void kInitializeSerialPort(void)$/;"	f
kInitializeSerialPort	save/02.Kernel64/Source/SerialPort.c	/^void kInitializeSerialPort(void)$/;"	f
kInitializeSpinLock	02.Kernel64/Source/Synchronization.c	/^void kInitializeSpinLock(SPINLOCK* pstSpinLock)$/;"	f
kInitializeTCBPool	02.Kernel64/Source/Task.c	/^static void kInitializeTCBPool(void)$/;"	f	file:
kInitializeTCBPool	save/02.Kernel64/Source/Task.c	/^static void kInitializeTCBPool(void)$/;"	f	file:
kInitializeTSSSegment	02.Kernel64/Source/Descriptor.c	/^void kInitializeTSSSegment(TSSSEGMENT* pstTSS)$/;"	f
kInitializeTSSSegment	save/02.Kernel64/Source/Descriptor.c	/^void kInitializeTSSSegment(TSSSEGMENT* pstTSS)$/;"	f
kInternalReadClusterLinkTableWithCache	02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalReadClusterLinkTableWithCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalReadClusterLinkTableWithCache	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalReadClusterLinkTableWithCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalReadClusterLinkTableWithoutCache	02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalReadClusterLinkTableWithoutCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalReadClusterLinkTableWithoutCache	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalReadClusterLinkTableWithoutCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalReadClusterWithCache	02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalReadClusterWithCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalReadClusterWithCache	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalReadClusterWithCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalReadClusterWithoutCache	02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalReadClusterWithoutCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalReadClusterWithoutCache	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalReadClusterWithoutCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalWriteClusterLinkTableWithCache	02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalWriteClusterLinkTableWithCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalWriteClusterLinkTableWithCache	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalWriteClusterLinkTableWithCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalWriteClusterLinkTableWithoutCache	02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalWriteClusterLinkTableWithoutCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalWriteClusterLinkTableWithoutCache	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalWriteClusterLinkTableWithoutCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalWriteClusterWithCache	02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalWriteClusterWithCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalWriteClusterWithCache	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalWriteClusterWithCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalWriteClusterWithoutCache	02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalWriteClusterWithoutCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInternalWriteClusterWithoutCache	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kInternalWriteClusterWithoutCache(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kInterruptManagerStruct	02.Kernel64/Source/InterruptHandler.h	/^typedef struct kInterruptManagerStruct $/;"	s
kIsAlphabetScanCode	02.Kernel64/Source/Keyboard.c	/^BOOL kIsAlphabetScanCode(BYTE bScanCode)$/;"	f
kIsAlphabetScanCode	save/02.Kernel64/Source/Keyboard.c	/^BOOL kIsAlphabetScanCode(BYTE bScanCode)$/;"	f
kIsFileOpened	02.Kernel64/Source/FileSystem.c	/^BOOL kIsFileOpened(const DIRECTORYENTRY* pstEntry)$/;"	f
kIsFileOpened	save/02.Kernel64/Source/FileSystem.c	/^BOOL kIsFileOpened(const DIRECTORYENTRY* pstEntry)$/;"	f
kIsInputBufferFull	02.Kernel64/Source/Keyboard.c	/^BOOL kIsInputBufferFull(void)$/;"	f
kIsInputBufferFull	save/02.Kernel64/Source/Keyboard.c	/^BOOL kIsInputBufferFull(void)$/;"	f
kIsMemoryEnough	01.Kernel32/Source/main.c	/^BOOL kIsMemoryEnough(void)$/;"	f
kIsNumberOrSymbolScanCode	02.Kernel64/Source/Keyboard.c	/^BOOL kIsNumberOrSymbolScanCode(BYTE bScanCode)$/;"	f
kIsNumberOrSymbolScanCode	save/02.Kernel64/Source/Keyboard.c	/^BOOL kIsNumberOrSymbolScanCode(BYTE bScanCode)$/;"	f
kIsNumberPadScanCode	02.Kernel64/Source/Keyboard.c	/^BOOL kIsNumberPadScanCode(BYTE bScanCode)$/;"	f
kIsNumberPadScanCode	save/02.Kernel64/Source/Keyboard.c	/^BOOL kIsNumberPadScanCode(BYTE bScanCode)$/;"	f
kIsOutputBufferFull	02.Kernel64/Source/Keyboard.c	/^BOOL kIsOutputBufferFull(void)$/;"	f
kIsOutputBufferFull	save/02.Kernel64/Source/Keyboard.c	/^BOOL kIsOutputBufferFull(void)$/;"	f
kIsProcessorTimeExpired	02.Kernel64/Source/Task.c	/^BOOL kIsProcessorTimeExpired(BYTE bAPICID)$/;"	f
kIsProcessorTimeExpired	save/02.Kernel64/Source/Task.c	/^BOOL kIsProcessorTimeExpired(void)$/;"	f
kIsQueueEmpty	02.Kernel64/Source/Queue.c	/^BOOL kIsQueueEmpty(const QUEUE* pstQueue)$/;"	f
kIsQueueEmpty	save/02.Kernel64/Source/Queue.c	/^BOOL kIsQueueEmpty(const QUEUE* pstQueue)$/;"	f
kIsQueueFull	02.Kernel64/Source/Queue.c	/^BOOL kIsQueueFull(const QUEUE* pstQueue)$/;"	f
kIsQueueFull	save/02.Kernel64/Source/Queue.c	/^BOOL kIsQueueFull(const QUEUE* pstQueue)$/;"	f
kIsSerialReceiveBufferFull	02.Kernel64/Source/SerialPort.c	/^static BOOL kIsSerialReceiveBufferFull(void)$/;"	f	file:
kIsSerialReceiveBufferFull	save/02.Kernel64/Source/SerialPort.c	/^static BOOL kIsSerialReceiveBufferFull(void)$/;"	f	file:
kIsSerialTransmitterBufferEmpty	02.Kernel64/Source/SerialPort.c	/^static BOOL kIsSerialTransmitterBufferEmpty(void)$/;"	f	file:
kIsSerialTransmitterBufferEmpty	save/02.Kernel64/Source/SerialPort.c	/^static BOOL kIsSerialTransmitterBufferEmpty(void)$/;"	f	file:
kIsTaskExist	02.Kernel64/Source/Task.c	/^BOOL kIsTaskExist(QWORD qwID)$/;"	f
kIsTaskExist	save/02.Kernel64/Source/Task.c	/^BOOL kIsTaskExist(QWORD qwID)$/;"	f
kIsUseCombinedCode	02.Kernel64/Source/Keyboard.c	/^BOOL kIsUseCombinedCode(BYTE bScanCode)$/;"	f
kIsUseCombinedCode	save/02.Kernel64/Source/Keyboard.c	/^BOOL kIsUseCombinedCode(BYTE bScanCode)$/;"	f
kKeyDataStruct	02.Kernel64/Source/Keyboard.h	/^typedef struct kKeyDataStruct$/;"	s
kKeyDataStruct	save/02.Kernel64/Source/Keyboard.h	/^typedef struct kKeyDataStruct$/;"	s
kKeyMappingEntryStruct	02.Kernel64/Source/Keyboard.h	/^typedef struct kKeyMappingEntryStruct$/;"	s
kKeyMappingEntryStruct	save/02.Kernel64/Source/Keyboard.h	/^typedef struct kKeyMappingEntryStruct$/;"	s
kKeyboardHandler	02.Kernel64/Source/InterruptHandler.c	/^void kKeyboardHandler(int iVectorNumber)$/;"	f
kKeyboardHandler	save/02.Kernel64/Source/InterruptHandler.c	/^void kKeyboardHandler(int iVectorNumber)$/;"	f
kKeyboardManagerStruct	02.Kernel64/Source/Keyboard.h	/^typedef struct kKeyboardManagerStruct$/;"	s
kKeyboardManagerStruct	save/02.Kernel64/Source/Keyboard.h	/^typedef struct kKeyboardManagerStruct$/;"	s
kKillTask	02.Kernel64/Source/ConsoleShell.c	/^static void kKillTask(const char* pcParameterBuffer)$/;"	f	file:
kKillTask	save/02.Kernel64/Source/ConsoleShell.c	/^static void kKillTask(const char* pcParameterBuffer)$/;"	f	file:
kListLinkStruct	02.Kernel64/Source/List.h	/^typedef struct kListLinkStruct$/;"	s
kListLinkStruct	save/02.Kernel64/Source/List.h	/^typedef struct kListLinkStruct$/;"	s
kListManagerStruct	02.Kernel64/Source/List.h	/^typedef struct kListManagerStruct$/;"	s
kListManagerStruct	save/02.Kernel64/Source/List.h	/^typedef struct kListManagerStruct$/;"	s
kLoadFPUContext	02.Kernel64/Source/AssemblyUtility.asm	/^kLoadFPUContext:$/;"	l
kLoadFPUContext	save/02.Kernel64/Source/AssemblyUtility.asm	/^kLoadFPUContext:$/;"	l
kLoadGDTR	02.Kernel64/Source/AssemblyUtility.asm	/^kLoadGDTR:$/;"	l
kLoadGDTR	save/02.Kernel64/Source/AssemblyUtility.asm	/^kLoadGDTR:$/;"	l
kLoadIDTR	02.Kernel64/Source/AssemblyUtility.asm	/^kLoadIDTR:$/;"	l
kLoadIDTR	save/02.Kernel64/Source/AssemblyUtility.asm	/^kLoadIDTR:$/;"	l
kLoadTR	02.Kernel64/Source/AssemblyUtility.asm	/^kLoadTR:$/;"	l
kLoadTR	save/02.Kernel64/Source/AssemblyUtility.asm	/^kLoadTR:$/;"	l
kLocalInterruptEntryStruct	02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kLocalInterruptEntryStruct$/;"	s
kLocalInterruptEntryStruct	save/02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kLocalInterruptEntryStruct$/;"	s
kLock	02.Kernel64/Source/Synchronization.c	/^void kLock(MUTEX* pstMutex)$/;"	f
kLock	save/02.Kernel64/Source/Synchronization.c	/^void kLock(MUTEX* pstMutex)$/;"	f
kLockForSpinLock	02.Kernel64/Source/Synchronization.c	/^void kLockForSpinLock(SPINLOCK* pstSpinLock)$/;"	f
kLockForSystemData	save/02.Kernel64/Source/Synchronization.c	/^BOOL kLockForSystemData(void)$/;"	f
kMBRStruct	02.Kernel64/Source/FileSystem.h	/^typedef struct kMBRStruct$/;"	s
kMBRStruct	save/02.Kernel64/Source/FileSystem.h	/^typedef struct kMBRStruct$/;"	s
kMPConfigurationManagerStruct	02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kMPConfigurationManagerStruct $/;"	s
kMPConfigurationManagerStruct	save/02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kMPConfigurationManagerStruct $/;"	s
kMPConfigurationTableHeaderStruct	02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kMPConfigurationTableHeaderStruct$/;"	s
kMPConfigurationTableHeaderStruct	save/02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kMPConfigurationTableHeaderStruct$/;"	s
kMPFloatingPointerStruct	02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kMPFloatingPointerStruct$/;"	s
kMPFloatingPointerStruct	save/02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kMPFloatingPointerStruct$/;"	s
kMaskAllInterruptInIOAPIC	02.Kernel64/Source/IOAPIC.c	/^void kMaskAllInterruptInIOAPIC(void)$/;"	f
kMaskPICInterrupt	02.Kernel64/Source/PIC.c	/^void kMaskPICInterrupt(WORD wIRQBitmask)$/;"	f
kMaskPICInterrupt	save/02.Kernel64/Source/PIC.c	/^void kMaskPICInterrupt(WORD wIRQBitmask)$/;"	f
kMatrixProcess	02.Kernel64/Source/ConsoleShell.c	/^static void kMatrixProcess(void)$/;"	f	file:
kMatrixProcess	save/02.Kernel64/Source/ConsoleShell.c	/^static void kMatrixProcess(void)$/;"	f	file:
kMeasurPrecessorSpeed	02.Kernel64/Source/ConsoleShell.c	/^static void kMeasurPrecessorSpeed(const char* pcParameterBuffer)$/;"	f	file:
kMeasurPrecessorSpeed	save/02.Kernel64/Source/ConsoleShell.c	/^static void kMeasurPrecessorSpeed(const char* pcParameterBuffer)$/;"	f	file:
kMemCmp	02.Kernel64/Source/Utility.c	/^int kMemCmp(const void* pvDestination,const void* pvSource,int iSize)$/;"	f
kMemCmp	save/02.Kernel64/Source/Utility.c	/^int kMemCmp(const void* pvDestination,const void* pvSource,int iSize)$/;"	f
kMemCpy	02.Kernel64/Source/Utility.c	/^int kMemCpy(void* pvDestination,const void* pvSource,int iSize)$/;"	f
kMemCpy	save/02.Kernel64/Source/Utility.c	/^int kMemCpy(void* pvDestination,const void* pvSource,int iSize)$/;"	f
kMemSet	02.Kernel64/Source/Utility.c	/^void kMemSet(void* pvDestination,BYTE bData,int iSize)$/;"	f
kMemSet	save/02.Kernel64/Source/Utility.c	/^void kMemSet(void* pvDestination,BYTE bData,int iSize)$/;"	f
kMount	02.Kernel64/Source/FileSystem.c	/^BOOL kMount(void)$/;"	f
kMount	save/02.Kernel64/Source/FileSystem.c	/^BOOL kMount(void)$/;"	f
kMountHDD	02.Kernel64/Source/ConsoleShell.c	/^static void kMountHDD(const char* pcParameterBuffer)$/;"	f	file:
kMountHDD	save/02.Kernel64/Source/ConsoleShell.c	/^static void kMountHDD(const char* pcParameterBuffer)$/;"	f	file:
kMutextStruct	02.Kernel64/Source/Synchronization.h	/^typedef struct kMutextStruct$/;"	s
kMutextStruct	save/02.Kernel64/Source/Synchronization.h	/^typedef struct kMutextStruct$/;"	s
kOpenDirectory	02.Kernel64/Source/FileSystem.c	/^DIR* kOpenDirectory(const char* pcDirectoryName)$/;"	f
kOpenDirectory	save/02.Kernel64/Source/FileSystem.c	/^DIR* kOpenDirectory(const char* pcDirectoryName)$/;"	f
kOpenFile	02.Kernel64/Source/FileSystem.c	/^FILE* kOpenFile(const char* pcFileName,const char* pcMode)$/;"	f
kOpenFile	save/02.Kernel64/Source/FileSystem.c	/^FILE* kOpenFile(const char* pcFileName,const char* pcMode)$/;"	f
kOutPortByte	02.Kernel64/Source/AssemblyUtility.asm	/^kOutPortByte:$/;"	l
kOutPortByte	save/02.Kernel64/Source/AssemblyUtility.asm	/^kOutPortByte:$/;"	l
kOutPortWord	02.Kernel64/Source/AssemblyUtility.asm	/^kOutPortWord:$/;"	l
kOutPortWord	save/02.Kernel64/Source/AssemblyUtility.asm	/^kOutPortWord:$/;"	l
kPageTableEntryStruct	01.Kernel32/Source/Page.h	/^typedef struct kPageTableEntryStruct$/;"	s
kParameterListStruct	02.Kernel64/Source/ConsoleShell.h	/^typedef struct kParameterListStruct$/;"	s
kParameterListStruct	save/02.Kernel64/Source/ConsoleShell.h	/^typedef struct kParameterListStruct$/;"	s
kPartitionStruct	02.Kernel64/Source/FileSystem.h	/^typedef struct kPartitionStruct$/;"	s
kPartitionStruct	save/02.Kernel64/Source/FileSystem.h	/^typedef struct kPartitionStruct$/;"	s
kPause	02.Kernel64/Source/AssemblyUtility.asm	/^kPause:$/;"	l
kPrintIRQToINTINMap	02.Kernel64/Source/IOAPIC.c	/^void kPrintIRQToINTINMap( void )$/;"	f
kPrintMPConfigurationTable	02.Kernel64/Source/MPConfigurationTable.c	/^void kPrintMPConfigurationTable(void)$/;"	f
kPrintMPConfigurationTable	save/02.Kernel64/Source/MPConfigurationTable.c	/^void kPrintMPConfigurationTable(void)$/;"	f
kPrintNumberTask	02.Kernel64/Source/ConsoleShell.c	/^static void kPrintNumberTask(void)$/;"	f	file:
kPrintNumberTask	save/02.Kernel64/Source/ConsoleShell.c	/^static void kPrintNumberTask(void)$/;"	f	file:
kPrintString	01.Kernel32/Source/main.c	/^void kPrintString(int iX,int iY,const char* pcString)$/;"	f
kPrintStringXY	02.Kernel64/Source/Console.c	/^void kPrintStringXY(int iX,int iY,const char* pcString)$/;"	f
kPrintStringXY	save/02.Kernel64/Source/Console.c	/^void kPrintStringXY(int iX,int iY,const char* pcString)$/;"	f
kPrintf	02.Kernel64/Source/Console.c	/^void kPrintf(const char* pcFormatString,...)$/;"	f
kPrintf	save/02.Kernel64/Source/Console.c	/^void kPrintf(const char* pcFormatString,...)$/;"	f
kProcessorEntryStruct	02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kProcessorEntryStruct$/;"	s
kProcessorEntryStruct	save/02.Kernel64/Source/MPConfigurationTable.h	/^typedef struct kProcessorEntryStruct$/;"	s
kProcessorLoadBalancing	02.Kernel64/Source/InterruptHandler.c	/^void kProcessorLoadBalancing(int iIRQ)$/;"	f
kPutQueue	02.Kernel64/Source/Queue.c	/^BOOL kPutQueue(QUEUE* pstQueue,const void* pvData)$/;"	f
kPutQueue	save/02.Kernel64/Source/Queue.c	/^BOOL kPutQueue(QUEUE* pstQueue,const void* pvData)$/;"	f
kQueueManagerStruct	02.Kernel64/Source/Queue.h	/^typedef struct kQueueManagerStruct$/;"	s
kQueueManagerStruct	save/02.Kernel64/Source/Queue.h	/^typedef struct kQueueManagerStruct$/;"	s
kRDDManagerStruct	02.Kernel64/Source/RAMDisk.h	/^typedef struct kRDDManagerStruct $/;"	s
kRDDManagerStruct	save/02.Kernel64/Source/RAMDisk.h	/^typedef struct kRDDManagerStruct $/;"	s
kRandom	02.Kernel64/Source/ConsoleShell.c	/^QWORD kRandom(void)$/;"	f
kRandom	save/02.Kernel64/Source/ConsoleShell.c	/^QWORD kRandom(void)$/;"	f
kRandomAllocationTask	02.Kernel64/Source/ConsoleShell.c	/^static void kRandomAllocationTask(void)$/;"	f	file:
kRandomAllocationTask	save/02.Kernel64/Source/ConsoleShell.c	/^static void kRandomAllocationTask(void)$/;"	f	file:
kReadCPUID	01.Kernel32/Source/ModeSwitch.asm	/^kReadCPUID:$/;"	l
kReadCluster	02.Kernel64/Source/FileSystem.c	/^static BOOL kReadCluster(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kReadCluster	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kReadCluster(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kReadClusterLinkTable	02.Kernel64/Source/FileSystem.c	/^static BOOL kReadClusterLinkTable(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kReadClusterLinkTable	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kReadClusterLinkTable(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kReadCounter0	02.Kernel64/Source/PIT.c	/^WORD kReadCounter0(void)$/;"	f
kReadCounter0	save/02.Kernel64/Source/PIT.c	/^WORD kReadCounter0(void)$/;"	f
kReadDataFromFile	02.Kernel64/Source/ConsoleShell.c	/^static void kReadDataFromFile(const char* pcParameterBuffer)$/;"	f	file:
kReadDataFromFile	save/02.Kernel64/Source/ConsoleShell.c	/^static void kReadDataFromFile(const char* pcParameterBuffer)$/;"	f	file:
kReadDirectory	02.Kernel64/Source/FileSystem.c	/^struct kDirectoryEntryStruct* kReadDirectory(DIR* pstDirectory)$/;"	f
kReadDirectory	save/02.Kernel64/Source/FileSystem.c	/^struct kDirectoryEntryStruct* kReadDirectory(DIR* pstDirectory)$/;"	f
kReadFile	02.Kernel64/Source/FileSystem.c	/^DWORD kReadFile(void* pvBuffer,DWORD dwSize,DWORD dwCount,FILE* pstFile)$/;"	f
kReadFile	save/02.Kernel64/Source/FileSystem.c	/^DWORD kReadFile(void* pvBuffer,DWORD dwSize,DWORD dwCount,FILE* pstFile)$/;"	f
kReadHDDInformation	02.Kernel64/Source/HardDisk.c	/^BOOL kReadHDDInformation(BOOL bPrimary,BOOL bMaster,HDDINFORMATION* pstHDDInformation)$/;"	f
kReadHDDInformation	save/02.Kernel64/Source/HardDisk.c	/^BOOL kReadHDDInformation(BOOL bPrimary,BOOL bMaster,HDDINFORMATION* pstHDDInformation)$/;"	f
kReadHDDSector	02.Kernel64/Source/HardDisk.c	/^int kReadHDDSector(BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer)$/;"	f
kReadHDDSector	save/02.Kernel64/Source/HardDisk.c	/^int kReadHDDSector(BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer)$/;"	f
kReadHDDStatus	02.Kernel64/Source/HardDisk.c	/^static BYTE kReadHDDStatus(BOOL bPrimary)$/;"	f	file:
kReadHDDStatus	save/02.Kernel64/Source/HardDisk.c	/^static BYTE kReadHDDStatus(BOOL bPrimary)$/;"	f	file:
kReadIOAPICRedirectionTable	02.Kernel64/Source/IOAPIC.c	/^void kReadIOAPICRedirectionTable(int iINTIN,IOREDIRECTIONTABLE* pstEntry)$/;"	f
kReadRDDInformation	02.Kernel64/Source/RAMDisk.c	/^BOOL kReadRDDInformation(BOOL bPrimary,BOOL bMaster,HDDINFORMATION* pstHDDInformation)$/;"	f
kReadRDDInformation	save/02.Kernel64/Source/RAMDisk.c	/^BOOL kReadRDDInformation(BOOL bPrimary,BOOL bMaster,HDDINFORMATION* pstHDDInformation)$/;"	f
kReadRDDSector	02.Kernel64/Source/RAMDisk.c	/^int kReadRDDSector(BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer)$/;"	f
kReadRDDSector	save/02.Kernel64/Source/RAMDisk.c	/^int kReadRDDSector(BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer)$/;"	f
kReadRFLAGS	02.Kernel64/Source/AssemblyUtility.asm	/^kReadRFLAGS:$/;"	l
kReadRFLAGS	save/02.Kernel64/Source/AssemblyUtility.asm	/^kReadRFLAGS:$/;"	l
kReadRTCData	02.Kernel64/Source/RTC.c	/^void kReadRTCData(WORD* pwYear,BYTE* pbMonth,BYTE* pbDayOfMonth,BYTE* pbDayOfWeek)$/;"	f
kReadRTCData	save/02.Kernel64/Source/RTC.c	/^void kReadRTCData(WORD* pwYear,BYTE* pbMonth,BYTE* pbDayOfMonth,BYTE* pbDayOfWeek)$/;"	f
kReadRTCTime	02.Kernel64/Source/RTC.c	/^void kReadRTCTime(BYTE* pbHour,BYTE* pbMinute,BYTE* pbSecond)$/;"	f
kReadRTCTime	save/02.Kernel64/Source/RTC.c	/^void kReadRTCTime(BYTE* pbHour,BYTE* pbMinute,BYTE* pbSecond)$/;"	f
kReadSector	02.Kernel64/Source/ConsoleShell.c	/^static void kReadSector(const char* pcParameterBuffer)$/;"	f	file:
kReadSector	save/02.Kernel64/Source/ConsoleShell.c	/^static void kReadSector(const char* pcParameterBuffer)$/;"	f	file:
kReadTSC	02.Kernel64/Source/AssemblyUtility.asm	/^kReadTSC:$/;"	l
kReadTSC	save/02.Kernel64/Source/AssemblyUtility.asm	/^kReadTSC:$/;"	l
kReadTimeStampCounter	02.Kernel64/Source/ConsoleShell.c	/^static void kReadTimeStampCounter(const char* pcParameterBuffer)$/;"	f	file:
kReadTimeStampCounter	save/02.Kernel64/Source/ConsoleShell.c	/^static void kReadTimeStampCounter(const char* pcParameterBuffer)$/;"	f	file:
kReboot	02.Kernel64/Source/Keyboard.c	/^void kReboot(void)$/;"	f
kReboot	save/02.Kernel64/Source/Keyboard.c	/^void kReboot(void)$/;"	f
kReceiveSerialData	02.Kernel64/Source/SerialPort.c	/^int kReceiveSerialData(BYTE* pbBuffer,int iSize)$/;"	f
kReceiveSerialData	save/02.Kernel64/Source/SerialPort.c	/^int kReceiveSerialData(BYTE* pbBuffer,int iSize)$/;"	f
kRemoveFile	02.Kernel64/Source/FileSystem.c	/^int kRemoveFile(const char* pcFileName)$/;"	f
kRemoveFile	save/02.Kernel64/Source/FileSystem.c	/^int kRemoveFile(const char* pcFileName)$/;"	f
kRemoveList	02.Kernel64/Source/List.c	/^void* kRemoveList(LIST* pstList,QWORD qwID)$/;"	f
kRemoveList	save/02.Kernel64/Source/List.c	/^void* kRemoveList(LIST* pstList,QWORD qwID)$/;"	f
kRemoveListFromHeader	02.Kernel64/Source/List.c	/^void* kRemoveListFromHeader(LIST* pstList)$/;"	f
kRemoveListFromHeader	save/02.Kernel64/Source/List.c	/^void* kRemoveListFromHeader(LIST* pstList)$/;"	f
kRemoveListFromTail	02.Kernel64/Source/List.c	/^void* kRemoveListFromTail(LIST* pstList)$/;"	f
kRemoveListFromTail	save/02.Kernel64/Source/List.c	/^void* kRemoveListFromTail(LIST* pstList)$/;"	f
kRemoveTaskFromReadyList	02.Kernel64/Source/Task.c	/^static TCB* kRemoveTaskFromReadyList(BYTE bAPICID,QWORD qwTaskID)$/;"	f	file:
kRemoveTaskFromReadyList	save/02.Kernel64/Source/Task.c	/^static TCB* kRemoveTaskFromReadyList(QWORD qwTaskID)$/;"	f	file:
kReverseString	02.Kernel64/Source/Utility.c	/^void kReverseString(char* pcBuffer)$/;"	f
kReverseString	save/02.Kernel64/Source/Utility.c	/^void kReverseString(char* pcBuffer)$/;"	f
kRewindDirectory	02.Kernel64/Source/FileSystem.c	/^void kRewindDirectory(DIR* pstDirectory)$/;"	f
kRewindDirectory	save/02.Kernel64/Source/FileSystem.c	/^void kRewindDirectory(DIR* pstDirectory)$/;"	f
kRoutingIRQToAPICID	02.Kernel64/Source/IOAPIC.c	/^void kRoutingIRQToAPICID(int iIRQ,BYTE bAPICID)$/;"	f
kSPrintf	02.Kernel64/Source/Utility.c	/^int kSPrintf(char* pcBuffer,const char* pcFormatString,...)$/;"	f
kSPrintf	save/02.Kernel64/Source/Utility.c	/^int kSPrintf(char* pcBuffer,const char* pcFormatString,...)$/;"	f
kSaveFPUContext	02.Kernel64/Source/AssemblyUtility.asm	/^kSaveFPUContext:$/;"	l
kSaveFPUContext	save/02.Kernel64/Source/AssemblyUtility.asm	/^kSaveFPUContext:$/;"	l
kSchedule	02.Kernel64/Source/Task.c	/^void kSchedule(void)$/;"	f
kSchedule	save/02.Kernel64/Source/Task.c	/^void kSchedule(void)$/;"	f
kScheduleInInterrupt	02.Kernel64/Source/Task.c	/^BOOL kScheduleInInterrupt(void)$/;"	f
kScheduleInInterrupt	save/02.Kernel64/Source/Task.c	/^BOOL kScheduleInInterrupt(void)$/;"	f
kSchedulerStruct	02.Kernel64/Source/Task.h	/^typedef struct kSchedulerStruct$/;"	s
kSchedulerStruct	save/02.Kernel64/Source/Task.h	/^typedef struct kSchedulerStruct$/;"	s
kSeekFile	02.Kernel64/Source/FileSystem.c	/^int kSeekFile(FILE* pstFile,int iOffset,int iOrigin)$/;"	f
kSeekFile	save/02.Kernel64/Source/FileSystem.c	/^int kSeekFile(FILE* pstFile,int iOffset,int iOrigin)$/;"	f
kSendEOI	02.Kernel64/Source/InterruptHandler.c	/^void kSendEOI(int iIRQ)$/;"	f
kSendEOIToLocalAPIC	02.Kernel64/Source/LocalAPIC.c	/^void kSendEOIToLocalAPIC( void )$/;"	f
kSendEOIToPIC	02.Kernel64/Source/PIC.c	/^void kSendEOIToPIC(int iIRQNumber)$/;"	f
kSendEOIToPIC	save/02.Kernel64/Source/PIC.c	/^void kSendEOIToPIC(int iIRQNumber)$/;"	f
kSendSerialData	02.Kernel64/Source/SerialPort.c	/^void kSendSerialData(BYTE* pbBuffer,int iSize)$/;"	f
kSendSerialData	save/02.Kernel64/Source/SerialPort.c	/^void kSendSerialData(BYTE* pbBuffer,int iSize)$/;"	f
kSerialPortManager	02.Kernel64/Source/SerialPort.h	/^typedef struct kSerialPortManager$/;"	s
kSerialPortManager	save/02.Kernel64/Source/SerialPort.h	/^typedef struct kSerialPortManager$/;"	s
kSetClusterLinkData	02.Kernel64/Source/FileSystem.c	/^static BOOL kSetClusterLinkData(DWORD dwClusterIndex,DWORD dwData)$/;"	f	file:
kSetClusterLinkData	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kSetClusterLinkData(DWORD dwClusterIndex,DWORD dwData)$/;"	f	file:
kSetCursor	02.Kernel64/Source/Console.c	/^void kSetCursor(int iX,int iY)$/;"	f
kSetCursor	save/02.Kernel64/Source/Console.c	/^void kSetCursor(int iX,int iY)$/;"	f
kSetDirectoryEntryData	02.Kernel64/Source/FileSystem.c	/^static BOOL kSetDirectoryEntryData(int iIndex,DIRECTORYENTRY* pstEntry)$/;"	f	file:
kSetDirectoryEntryData	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kSetDirectoryEntryData(int iIndex,DIRECTORYENTRY* pstEntry)$/;"	f	file:
kSetFlagInBitmap	02.Kernel64/Source/DynamicMemory.c	/^static void kSetFlagInBitmap(int iBlockListIndex,int iOffset,BYTE bFlag)$/;"	f	file:
kSetFlagInBitmap	save/02.Kernel64/Source/DynamicMemory.c	/^static void kSetFlagInBitmap(int iBlockListIndex,int iOffset,BYTE bFlag)$/;"	f	file:
kSetGDTEntry16	02.Kernel64/Source/Descriptor.c	/^void kSetGDTEntry16(GDTENTRY16* pstEntry,QWORD qwBaseAddress,DWORD dwLimit,BYTE bUpperFlags,BYTE bLowerFlags,BYTE bType)$/;"	f
kSetGDTEntry16	save/02.Kernel64/Source/Descriptor.c	/^void kSetGDTEntry16(GDTENTRY16* pstEntry,QWORD qwBaseAddress,DWORD dwLimit,BYTE bUpperFlags,BYTE bLowerFlags,BYTE bType)$/;"	f
kSetGDTEntry8	02.Kernel64/Source/Descriptor.c	/^void kSetGDTEntry8(GDTENTRY8* pstEntry,DWORD dwBaseAddress,DWORD dwLimit,BYTE bUpperFlags,BYTE bLowerFlags,BYTE bType)$/;"	f
kSetGDTEntry8	save/02.Kernel64/Source/Descriptor.c	/^void kSetGDTEntry8(GDTENTRY8* pstEntry,DWORD dwBaseAddress,DWORD dwLimit,BYTE bUpperFlags,BYTE bLowerFlags,BYTE bType)$/;"	f
kSetHDDInterruptFlag	02.Kernel64/Source/HardDisk.c	/^void kSetHDDInterruptFlag(BOOL bPrimary,BOOL bFlag)$/;"	f
kSetHDDInterruptFlag	save/02.Kernel64/Source/HardDisk.c	/^void kSetHDDInterruptFlag(BOOL bPrimary,BOOL bFlag)$/;"	f
kSetIDTEntry	02.Kernel64/Source/Descriptor.c	/^void kSetIDTEntry(IDTENTRY* pstEntry,void* pvHandler,WORD wSelector,BYTE bIST,BYTE bFlags,BYTE bType)$/;"	f
kSetIDTEntry	save/02.Kernel64/Source/Descriptor.c	/^void kSetIDTEntry(IDTENTRY* pstEntry,void* pvHandler,WORD wSelector,BYTE bIST,BYTE bFlags,BYTE bType)$/;"	f
kSetIOAPICRedirectionEntry	02.Kernel64/Source/IOAPIC.c	/^void kSetIOAPICRedirectionEntry(IOREDIRECTIONTABLE* pstEntry,BYTE bAPICID, BYTE bInterruptMask, BYTE bFlagsAndDeliveryMode,BYTE bVector)$/;"	f
kSetInterruptFlag	02.Kernel64/Source/Utility.c	/^BOOL kSetInterruptFlag(BOOL bEnableInterrupt)$/;"	f
kSetInterruptFlag	save/02.Kernel64/Source/Utility.c	/^BOOL kSetInterruptFlag(BOOL bEnableInterrupt)$/;"	f
kSetInterruptLoadBalancing	02.Kernel64/Source/InterruptHandler.c	/^void kSetInterruptLoadBalancing(BOOL bUseLoadBalancing)$/;"	f
kSetLastFPUUsedTaskID	save/02.Kernel64/Source/Task.c	/^void kSetLastFPUUsedTaskID(QWORD qwTaskID)$/;"	f
kSetPageEntryData	01.Kernel32/Source/Page.c	/^void kSetPageEntryData(PTENTRY* pstEntry,DWORD dwUpperBaseAddress,DWORD dwLowerBaseAddress,DWORD dwLowerFlags,DWORD dwUpperFLAGS)$/;"	f
kSetRunningTask	02.Kernel64/Source/Task.c	/^void kSetRunningTask(BYTE bAPICID,TCB* pstTask)$/;"	f
kSetRunningTask	save/02.Kernel64/Source/Task.c	/^void kSetRunningTask(TCB* pstTask)$/;"	f
kSetSymmetricIOMode	02.Kernel64/Source/InterruptHandler.c	/^void kSetSymmetricIOMode(BOOL bSymmetricIOMode)$/;"	f
kSetTS	02.Kernel64/Source/AssemblyUtility.asm	/^kSetTS:$/;"	l
kSetTS	save/02.Kernel64/Source/AssemblyUtility.asm	/^kSetTS:$/;"	l
kSetTaskLoadBalancing	02.Kernel64/Source/Task.c	/^BYTE kSetTaskLoadBalancing(BYTE bAPICID,BOOL bUseLoadBalancing)$/;"	f
kSetTaskPriority	02.Kernel64/Source/LocalAPIC.c	/^void kSetTaskPriority( BYTE bPriority )$/;"	f
kSetTimer	02.Kernel64/Source/ConsoleShell.c	/^static void kSetTimer(const char* pcParameterBuffer)$/;"	f	file:
kSetTimer	save/02.Kernel64/Source/ConsoleShell.c	/^static void kSetTimer(const char* pcParameterBuffer)$/;"	f	file:
kSetUpTask	02.Kernel64/Source/Task.c	/^static void kSetUpTask(TCB* pstTCB,QWORD qwFlags,QWORD qwEntryPointAddress,void* pvStackAddress,QWORD qwStackSize)$/;"	f	file:
kSetUpTask	save/02.Kernel64/Source/Task.c	/^static void kSetUpTask(TCB* pstTCB,QWORD qwFlags,QWORD qwEntryPointAddress,void* pvStackAddress,QWORD qwStackSize)$/;"	f	file:
kShellCommandEntrystruct	02.Kernel64/Source/ConsoleShell.h	/^typedef struct kShellCommandEntrystruct$/;"	s
kShellCommandEntrystruct	save/02.Kernel64/Source/ConsoleShell.h	/^typedef struct kShellCommandEntrystruct$/;"	s
kShowDateAndTime	02.Kernel64/Source/ConsoleShell.c	/^static void kShowDateAndTime(const char* pcParameterBuffer)$/;"	f	file:
kShowDateAndTime	save/02.Kernel64/Source/ConsoleShell.c	/^static void kShowDateAndTime(const char* pcParameterBuffer)$/;"	f	file:
kShowDynamicMemoryInformation	02.Kernel64/Source/ConsoleShell.c	/^static void kShowDynamicMemoryInformation(const char* pcParameterBuffer)$/;"	f	file:
kShowDynamicMemoryInformation	save/02.Kernel64/Source/ConsoleShell.c	/^static void kShowDynamicMemoryInformation(const char* pcParameterBuffer)$/;"	f	file:
kShowFileSystemInformation	02.Kernel64/Source/ConsoleShell.c	/^static void kShowFileSystemInformation(const char* pcParameterBuffer)$/;"	f	file:
kShowFileSystemInformation	save/02.Kernel64/Source/ConsoleShell.c	/^static void kShowFileSystemInformation(const char* pcParameterBuffer)$/;"	f	file:
kShowHDDInformation	02.Kernel64/Source/ConsoleShell.c	/^static void kShowHDDInformation(const char* pcParameterBuffer)$/;"	f	file:
kShowHDDInformation	save/02.Kernel64/Source/ConsoleShell.c	/^static void kShowHDDInformation(const char* pcParameterBuffer)$/;"	f	file:
kShowIRQINTINMappingTable	02.Kernel64/Source/ConsoleShell.c	/^static void kShowIRQINTINMappingTable( const char* pcParameterBuffer )$/;"	f	file:
kShowInterruptProcessingCount	02.Kernel64/Source/ConsoleShell.c	/^static void kShowInterruptProcessingCount( const char* pcParameterBuffer )$/;"	f	file:
kShowMPConfigurationTable	02.Kernel64/Source/ConsoleShell.c	/^static void kShowMPConfigurationTable(const char* pcParameterBuffer)$/;"	f	file:
kShowMPConfigurationTable	save/02.Kernel64/Source/ConsoleShell.c	/^static void kShowMPConfigurationTable(const char* pcParameterBuffer)$/;"	f	file:
kShowMatrix	02.Kernel64/Source/ConsoleShell.c	/^static void kShowMatrix(const char* pcParameterBuffer)$/;"	f	file:
kShowMatrix	save/02.Kernel64/Source/ConsoleShell.c	/^static void kShowMatrix(const char* pcParameterBuffer)$/;"	f	file:
kShowRootDirectory	02.Kernel64/Source/ConsoleShell.c	/^static void kShowRootDirectory(const char* pcParameterBuffer)$/;"	f	file:
kShowRootDirectory	save/02.Kernel64/Source/ConsoleShell.c	/^static void kShowRootDirectory(const char* pcParameterBuffer)$/;"	f	file:
kShowTaskList	02.Kernel64/Source/ConsoleShell.c	/^static void kShowTaskList(const char* pcParameterBuffer)$/;"	f	file:
kShowTaskList	save/02.Kernel64/Source/ConsoleShell.c	/^static void kShowTaskList(const char* pcParameterBuffer)$/;"	f	file:
kShowTotalRAMSize	02.Kernel64/Source/ConsoleShell.c	/^static void kShowTotalRAMSize(const char* pcParameterBuffer)$/;"	f	file:
kShowTotalRAMSize	save/02.Kernel64/Source/ConsoleShell.c	/^static void kShowTotalRAMSize(const char* pcParameterBuffer)$/;"	f	file:
kShutdown	02.Kernel64/Source/ConsoleShell.c	/^static void kShutdown(const char* pcParameterBuffer)$/;"	f	file:
kShutdown	save/02.Kernel64/Source/ConsoleShell.c	/^static void kShutdown(const char* pcParameterBuffer)$/;"	f	file:
kSleep	02.Kernel64/Source/Utility.c	/^void kSleep(QWORD qwMillisecond)$/;"	f
kSleep	save/02.Kernel64/Source/Utility.c	/^void kSleep(QWORD qwMillisecond)$/;"	f
kSpinLockStrcut	02.Kernel64/Source/Synchronization.h	/^typedef struct kSpinLockStrcut$/;"	s
kStartApplicationProcessor	02.Kernel64/Source/ConsoleShell.c	/^static void kStartApplicationProcessor(const char* pcParameterBuffer)$/;"	f	file:
kStartApplicationProcessor	save/02.Kernel64/Source/ConsoleShell.c	/^static void kStartApplicationProcessor(const char* pcParameterBuffer)$/;"	f	file:
kStartConsoleShell	02.Kernel64/Source/ConsoleShell.c	/^void kStartConsoleShell(void)$/;"	f
kStartConsoleShell	save/02.Kernel64/Source/ConsoleShell.c	/^void kStartConsoleShell(void)$/;"	f
kStartInterruptLoadBalancing	02.Kernel64/Source/ConsoleShell.c	/^static void kStartInterruptLoadBalancing( const char* pcParameterBuffer )$/;"	f	file:
kStartSymmetricIOMode	02.Kernel64/Source/ConsoleShell.c	/^static void kStartSymmetricIOMode( const char* pcParameterBuffer )$/;"	f	file:
kStartTaskLoadBalancing	02.Kernel64/Source/ConsoleShell.c	/^static void kStartTaskLoadBalancing(const char* pcParameterBuffer)$/;"	f	file:
kStartUpApplicationProcessor	02.Kernel64/Source/MultiProcessor.c	/^BOOL kStartUpApplicationProcessor(void)$/;"	f
kStartUpApplicationProcessor	save/02.Kernel64/Source/MultiProcessor.c	/^BOOL kStartUpApplicationProcessor(void)$/;"	f
kStrLen	02.Kernel64/Source/Utility.c	/^int kStrLen(const char* pcBuffer)$/;"	f
kStrLen	save/02.Kernel64/Source/Utility.c	/^int kStrLen(const char* pcBuffer)$/;"	f
kStringToDecimalHexText	02.Kernel64/Source/ConsoleShell.c	/^static void kStringToDecimalHexText(const char* pcParameterBuffer)$/;"	f	file:
kStringToDecimalHexText	save/02.Kernel64/Source/ConsoleShell.c	/^static void kStringToDecimalHexText(const char* pcParameterBuffer)$/;"	f	file:
kSwapByteInWord	02.Kernel64/Source/HardDisk.c	/^static void kSwapByteInWord(WORD* pwData,int iWordCount)$/;"	f	file:
kSwapByteInWord	save/02.Kernel64/Source/HardDisk.c	/^static void kSwapByteInWord(WORD* pwData,int iWordCount)$/;"	f	file:
kSwitchAndExecute64bitKernel	01.Kernel32/Source/ModeSwitch.asm	/^kSwitchAndExecute64bitKernel:$/;"	l
kSwitchContext	02.Kernel64/Source/AssemblyUtility.asm	/^kSwitchContext:$/;"	l
kSwitchContext	save/02.Kernel64/Source/AssemblyUtility.asm	/^kSwitchContext:$/;"	l
kTCBPoolManagerStruct	02.Kernel64/Source/Task.h	/^typedef struct kTCBPoolManagerStruct$/;"	s
kTCBPoolManagerStruct	save/02.Kernel64/Source/Task.h	/^typedef struct kTCBPoolManagerStruct$/;"	s
kTSSDataStruct	02.Kernel64/Source/Descriptor.h	/^typedef struct kTSSDataStruct$/;"	s
kTSSDataStruct	save/02.Kernel64/Source/Descriptor.h	/^typedef struct kTSSDataStruct$/;"	s
kTaskControlBlockStruct	02.Kernel64/Source/Task.h	/^typedef struct kTaskControlBlockStruct$/;"	s
kTaskControlBlockStruct	save/02.Kernel64/Source/Task.h	/^typedef struct kTaskControlBlockStruct$/;"	s
kTestAndSet	02.Kernel64/Source/AssemblyUtility.asm	/^kTestAndSet:$/;"	l
kTestAndSet	save/02.Kernel64/Source/AssemblyUtility.asm	/^kTestAndSet:$/;"	l
kTestFileIO	02.Kernel64/Source/ConsoleShell.c	/^static void kTestFileIO(const char* pcParameterBuffer)$/;"	f	file:
kTestFileIO	save/02.Kernel64/Source/ConsoleShell.c	/^static void kTestFileIO(const char* pcParameterBuffer)$/;"	f	file:
kTestMutex	02.Kernel64/Source/ConsoleShell.c	/^static void kTestMutex(const char* pcParameterBuffer)$/;"	f	file:
kTestMutex	save/02.Kernel64/Source/ConsoleShell.c	/^static void kTestMutex(const char* pcParameterBuffer)$/;"	f	file:
kTestPIE	02.Kernel64/Source/ConsoleShell.c	/^static void kTestPIE(const char* pcParameterBuffer)$/;"	f	file:
kTestPIE	save/02.Kernel64/Source/ConsoleShell.c	/^static void kTestPIE(const char* pcParameterBuffer)$/;"	f	file:
kTestRandomAllocation	02.Kernel64/Source/ConsoleShell.c	/^static void kTestRandomAllocation(const char* pcParameterBuffer)$/;"	f	file:
kTestRandomAllocation	save/02.Kernel64/Source/ConsoleShell.c	/^static void kTestRandomAllocation(const char* pcParameterBuffer)$/;"	f	file:
kTestSequentialAllocation	02.Kernel64/Source/ConsoleShell.c	/^static void kTestSequentialAllocation(const char* pcParameterBuffer)$/;"	f	file:
kTestSequentialAllocation	save/02.Kernel64/Source/ConsoleShell.c	/^static void kTestSequentialAllocation(const char* pcParameterBuffer)$/;"	f	file:
kTestTask1	02.Kernel64/Source/ConsoleShell.c	/^static void kTestTask1(void)$/;"	f	file:
kTestTask1	save/02.Kernel64/Source/ConsoleShell.c	/^static void kTestTask1(void)$/;"	f	file:
kTestTask2	02.Kernel64/Source/ConsoleShell.c	/^static void kTestTask2(void)$/;"	f	file:
kTestTask2	save/02.Kernel64/Source/ConsoleShell.c	/^static void kTestTask2(void)$/;"	f	file:
kTestTask3	02.Kernel64/Source/ConsoleShell.c	/^static void kTestTask3(void)$/;"	f	file:
kTestThread	02.Kernel64/Source/ConsoleShell.c	/^static void kTestThread(const char* pcParameterBuffer)$/;"	f	file:
kTestThread	save/02.Kernel64/Source/ConsoleShell.c	/^static void kTestThread(const char* pcParameterBuffer)$/;"	f	file:
kTimerHandler	02.Kernel64/Source/InterruptHandler.c	/^void kTimerHandler(int iVectorNumber)$/;"	f
kTimerHandler	save/02.Kernel64/Source/InterruptHandler.c	/^void kTimerHandler(int iVectorNumber)$/;"	f
kUnlock	02.Kernel64/Source/Synchronization.c	/^void kUnlock(MUTEX* pstMutex)$/;"	f
kUnlock	save/02.Kernel64/Source/Synchronization.c	/^void kUnlock(MUTEX* pstMutex)$/;"	f
kUnlockForSpinLock	02.Kernel64/Source/Synchronization.c	/^void kUnlockForSpinLock(SPINLOCK* pstSpinLock)$/;"	f
kUnlockForSystemData	save/02.Kernel64/Source/Synchronization.c	/^void kUnlockForSystemData(BOOL bInterruptFlag)$/;"	f
kUpdateDirectoryEntry	02.Kernel64/Source/FileSystem.c	/^static BOOL kUpdateDirectoryEntry(FILEHANDLE* pstFileHandle)$/;"	f	file:
kUpdateDirectoryEntry	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kUpdateDirectoryEntry(FILEHANDLE* pstFileHandle)$/;"	f	file:
kVSPrintf	02.Kernel64/Source/Utility.c	/^int kVSPrintf(char* pcBuffer,const char* pcFormatString,va_list ap)$/;"	f
kVSPrintf	save/02.Kernel64/Source/Utility.c	/^int kVSPrintf(char* pcBuffer,const char* pcFormatString,va_list ap)$/;"	f
kWaitForHDDInterrupt	02.Kernel64/Source/HardDisk.c	/^static BOOL kWaitForHDDInterrupt(BOOL bPrimary)$/;"	f	file:
kWaitForHDDInterrupt	save/02.Kernel64/Source/HardDisk.c	/^static BOOL kWaitForHDDInterrupt(BOOL bPrimary)$/;"	f	file:
kWaitForHDDNoBusy	02.Kernel64/Source/HardDisk.c	/^static BOOL kWaitForHDDNoBusy(BOOL bPrimary)$/;"	f	file:
kWaitForHDDNoBusy	save/02.Kernel64/Source/HardDisk.c	/^static BOOL kWaitForHDDNoBusy(BOOL bPrimary)$/;"	f	file:
kWaitForHDDReady	02.Kernel64/Source/HardDisk.c	/^static BOOL kWaitForHDDReady(BOOL bPrimary)$/;"	f	file:
kWaitForHDDReady	save/02.Kernel64/Source/HardDisk.c	/^static BOOL kWaitForHDDReady(BOOL bPrimary)$/;"	f	file:
kWaitUsingDirectPIT	02.Kernel64/Source/PIT.c	/^void kWaitUsingDirectPIT(WORD wCount)$/;"	f
kWaitUsingDirectPIT	save/02.Kernel64/Source/PIT.c	/^void kWaitUsingDirectPIT(WORD wCount)$/;"	f
kWaitUsingPIT	02.Kernel64/Source/ConsoleShell.c	/^static void kWaitUsingPIT(const char* pcParameterBuffer)$/;"	f	file:
kWaitUsingPIT	save/02.Kernel64/Source/ConsoleShell.c	/^static void kWaitUsingPIT(const char* pcParameterBuffer)$/;"	f	file:
kWakeUpApplicationProcessor	02.Kernel64/Source/MultiProcessor.c	/^static BOOL kWakeUpApplicationProcessor(void)$/;"	f	file:
kWakeUpApplicationProcessor	save/02.Kernel64/Source/MultiProcessor.c	/^static BOOL kWakeUpApplicationProcessor(void)$/;"	f	file:
kWriteCluster	02.Kernel64/Source/FileSystem.c	/^static BOOL kWriteCluster(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kWriteCluster	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kWriteCluster(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kWriteClusterLinkTable	02.Kernel64/Source/FileSystem.c	/^static BOOL kWriteClusterLinkTable(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kWriteClusterLinkTable	save/02.Kernel64/Source/FileSystem.c	/^static BOOL kWriteClusterLinkTable(DWORD dwOffset,BYTE* pbBuffer)$/;"	f	file:
kWriteDataToFile	02.Kernel64/Source/ConsoleShell.c	/^static void kWriteDataToFile(const char* pcParameterBuffer)$/;"	f	file:
kWriteDataToFile	save/02.Kernel64/Source/ConsoleShell.c	/^static void kWriteDataToFile(const char* pcParameterBuffer)$/;"	f	file:
kWriteFile	02.Kernel64/Source/FileSystem.c	/^DWORD kWriteFile(const void* pvBuffer,DWORD dwSize,DWORD dwCount,FILE* pstFile)$/;"	f
kWriteFile	save/02.Kernel64/Source/FileSystem.c	/^DWORD kWriteFile(const void* pvBuffer,DWORD dwSize,DWORD dwCount,FILE* pstFile)$/;"	f
kWriteHDDSector	02.Kernel64/Source/HardDisk.c	/^int kWriteHDDSector(BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer)$/;"	f
kWriteHDDSector	save/02.Kernel64/Source/HardDisk.c	/^int kWriteHDDSector(BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer)$/;"	f
kWriteIOAPICRedirectionTable	02.Kernel64/Source/IOAPIC.c	/^void kWriteIOAPICRedirectionTable(int iINTIN,IOREDIRECTIONTABLE* pstEntry)$/;"	f
kWriteRDDSector	02.Kernel64/Source/RAMDisk.c	/^int kWriteRDDSector(BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer)$/;"	f
kWriteRDDSector	save/02.Kernel64/Source/RAMDisk.c	/^int kWriteRDDSector(BOOL bPrimary,BOOL bMaster,DWORD dwLBA,int iSectorCount,char* pcBuffer)$/;"	f
kWriteSector	02.Kernel64/Source/ConsoleShell.c	/^static void kWriteSector(const char* pcParameterBuffer)$/;"	f	file:
kWriteSector	save/02.Kernel64/Source/ConsoleShell.c	/^static void kWriteSector(const char* pcParameterBuffer)$/;"	f	file:
kWriteZero	02.Kernel64/Source/FileSystem.c	/^BOOL kWriteZero(FILE* pstFile,DWORD dwCount)$/;"	f
kWriteZero	save/02.Kernel64/Source/FileSystem.c	/^BOOL kWriteZero(FILE* pstFile,DWORD dwCount)$/;"	f
ltr	02.Kernel64/Source/AssemblyUtility.asm	/^	ltr di						; 파라미터 1(TSS 세그먼트 디스크립터의 오프셋)을 프로세서에 설정하여 TSS 세그먼트를 로드 $/;"	d
ltr	save/02.Kernel64/Source/AssemblyUtility.asm	/^	ltr di						; 파라미터 1(TSS 세그먼트 디스크립터의 오프셋)을 프로세서에 설정하여 TSS 세그먼트를 로드 $/;"	d
main	01.Kernel32/Source/main.c	/^void main(void)$/;"	f
main	02.Kernel64/Source/main.c	/^void main( void )$/;"	f
main	04.Utility/00.ImageMaker/ImageMaker.c	/^int main(int argc, char* argv[])$/;"	f
main	04.Utility/01.SerialTransfer/NetworkTransfer.c	/^int main(int argc,char** argv)$/;"	f
main	save/02.Kernel64/Source/main.c	/^void main( void )$/;"	f
main	testdata.c	/^int main()$/;"	f
mainForApplicationProcessor	02.Kernel64/Source/main.c	/^void mainForApplicationProcessor(void)$/;"	f
mainForApplicationProcessor	save/02.Kernel64/Source/main.c	/^void mainForApplicationProcessor(void)$/;"	f
offsetof	02.Kernel64/Source/Types.h	15;"	d
offsetof	save/02.Kernel64/Source/Types.h	15;"	d
opendir	02.Kernel64/Source/FileSystem.h	51;"	d
opendir	save/02.Kernel64/Source/FileSystem.h	51;"	d
pbAllocatedBlockListIndex	02.Kernel64/Source/DynamicMemory.h	/^	BYTE* pbAllocatedBlockListIndex;$/;"	m	struct:kDynamicMemoryManagerStruct
pbAllocatedBlockListIndex	save/02.Kernel64/Source/DynamicMemory.h	/^	BYTE* pbAllocatedBlockListIndex;$/;"	m	struct:kDynamicMemoryManagerStruct
pbBitmap	02.Kernel64/Source/DynamicMemory.h	/^	BYTE* pbBitmap;$/;"	m	struct:kBitmapStruct
pbBitmap	save/02.Kernel64/Source/DynamicMemory.h	/^	BYTE* pbBitmap;$/;"	m	struct:kBitmapStruct
pbBuffer	02.Kernel64/Source/CacheManager.h	/^	BYTE *pbBuffer;$/;"	m	struct:kCacheBufferStruct
pbBuffer	02.Kernel64/Source/RAMDisk.h	/^	BYTE* pbBuffer;$/;"	m	struct:kRDDManagerStruct
pbBuffer	save/02.Kernel64/Source/CacheManager.h	/^	BYTE *pbBuffer;$/;"	m	struct:kCacheBufferStruct
pbBuffer	save/02.Kernel64/Source/RAMDisk.h	/^	BYTE* pbBuffer;$/;"	m	struct:kRDDManagerStruct
pcBuffer	02.Kernel64/Source/ConsoleShell.h	/^	const char* pcBuffer;$/;"	m	struct:kParameterListStruct
pcBuffer	save/02.Kernel64/Source/ConsoleShell.h	/^	const char* pcBuffer;$/;"	m	struct:kParameterListStruct
pcCommand	02.Kernel64/Source/ConsoleShell.h	/^	char* pcCommand;$/;"	m	struct:kShellCommandEntrystruct
pcCommand	save/02.Kernel64/Source/ConsoleShell.h	/^	char* pcCommand;$/;"	m	struct:kShellCommandEntrystruct
pcHelp	02.Kernel64/Source/ConsoleShell.h	/^	char* pcHelp;$/;"	m	struct:kShellCommandEntrystruct
pcHelp	save/02.Kernel64/Source/ConsoleShell.h	/^	char* pcHelp;$/;"	m	struct:kShellCommandEntrystruct
pfFunction	02.Kernel64/Source/ConsoleShell.h	/^	CommandFunction pfFunction;$/;"	m	struct:kShellCommandEntrystruct
pfFunction	save/02.Kernel64/Source/ConsoleShell.h	/^	CommandFunction pfFunction;$/;"	m	struct:kShellCommandEntrystruct
pop	00.BootLoader/BootLoader.asm	/^	pop di$/;"	d
pop	00.BootLoader/BootLoader.asm	/^	pop dx							; 함수에서 사용이 끝난 dx 레지스터부터 es 레지스터까지를 스택에 삽입된 값을 이용해서 복원$/;"	d
pop	00.BootLoader/BootLoader2.asm	/^	pop di$/;"	d
pop	00.BootLoader/BootLoader2.asm	/^	pop dx							; 함수에서 사용이 끝난 dx 레지스터부터 es 레지스터까지를 스택에 삽입된 값을 이용해서 복원$/;"	d
pstBitmapOfLevel	02.Kernel64/Source/DynamicMemory.h	/^	BITMAP* pstBitmapOfLevel;$/;"	m	struct:kDynamicMemoryManagerStruct
pstBitmapOfLevel	save/02.Kernel64/Source/DynamicMemory.h	/^	BITMAP* pstBitmapOfLevel;$/;"	m	struct:kDynamicMemoryManagerStruct
pstDirectoryBuffer	02.Kernel64/Source/FileSystem.h	/^	DIRECTORYENTRY* pstDirectoryBuffer;$/;"	m	struct:kDirectoryHandleStruct
pstDirectoryBuffer	save/02.Kernel64/Source/FileSystem.h	/^	DIRECTORYENTRY* pstDirectoryBuffer;$/;"	m	struct:kDirectoryHandleStruct
pstHandlePool	02.Kernel64/Source/FileSystem.h	/^	FILE* pstHandlePool;$/;"	m	struct:kFileSystemManagerStruct
pstHandlePool	save/02.Kernel64/Source/FileSystem.h	/^	FILE* pstHandlePool;$/;"	m	struct:kFileSystemManagerStruct
pstMPConfigurationTableHeader	02.Kernel64/Source/MPConfigurationTable.h	/^	MPCONFIGURATIONTABLEHEADER* pstMPConfigurationTableHeader;$/;"	m	struct:kMPConfigurationManagerStruct
pstMPConfigurationTableHeader	save/02.Kernel64/Source/MPConfigurationTable.h	/^	MPCONFIGURATIONTABLEHEADER* pstMPConfigurationTableHeader;$/;"	m	struct:kMPConfigurationManagerStruct
pstMPFloatingPointer	02.Kernel64/Source/MPConfigurationTable.h	/^	MPFLOATINGPOINTER* pstMPFloatingPointer;$/;"	m	struct:kMPConfigurationManagerStruct
pstMPFloatingPointer	save/02.Kernel64/Source/MPConfigurationTable.h	/^	MPFLOATINGPOINTER* pstMPFloatingPointer;$/;"	m	struct:kMPConfigurationManagerStruct
pstRunningTask	02.Kernel64/Source/Task.h	/^	TCB* pstRunningTask;$/;"	m	struct:kSchedulerStruct
pstRunningTask	save/02.Kernel64/Source/Task.h	/^	TCB* pstRunningTask;$/;"	m	struct:kSchedulerStruct
pstStartAddress	02.Kernel64/Source/Task.h	/^	TCB* pstStartAddress;$/;"	m	struct:kTCBPoolManagerStruct
pstStartAddress	save/02.Kernel64/Source/Task.h	/^	TCB* pstStartAddress;$/;"	m	struct:kTCBPoolManagerStruct
push	00.BootLoader/BootLoader.asm	/^	push di	$/;"	d
push	00.BootLoader/BootLoader.asm	/^	push dx $/;"	d
push	00.BootLoader/BootLoader2.asm	/^	push di	$/;"	d
push	00.BootLoader/BootLoader2.asm	/^	push dx $/;"	d
pvHeader	02.Kernel64/Source/List.h	/^	void* pvHeader;$/;"	m	struct:kListManagerStruct
pvHeader	save/02.Kernel64/Source/List.h	/^	void* pvHeader;$/;"	m	struct:kListManagerStruct
pvMemoryAddress	02.Kernel64/Source/Task.h	/^	void* pvMemoryAddress;$/;"	m	struct:kTaskControlBlockStruct
pvMemoryAddress	save/02.Kernel64/Source/Task.h	/^	void* pvMemoryAddress;$/;"	m	struct:kTaskControlBlockStruct
pvNext	02.Kernel64/Source/List.h	/^	void* pvNext;$/;"	m	struct:kListLinkStruct
pvNext	save/02.Kernel64/Source/List.h	/^	void* pvNext;$/;"	m	struct:kListLinkStruct
pvPrevious	02.Kernel64/Source/List.h	/^	void* pvPrevious;$/;"	m	struct:kListLinkStruct
pvPrevious	save/02.Kernel64/Source/List.h	/^	void* pvPrevious;$/;"	m	struct:kListLinkStruct
pvQueueArray	02.Kernel64/Source/Queue.h	/^	void* pvQueueArray;$/;"	m	struct:kQueueManagerStruct
pvQueueArray	save/02.Kernel64/Source/Queue.h	/^	void* pvQueueArray;$/;"	m	struct:kQueueManagerStruct
pvStackAddress	02.Kernel64/Source/Task.h	/^	void* pvStackAddress;$/;"	m	struct:kTaskControlBlockStruct
pvStackAddress	save/02.Kernel64/Source/Task.h	/^	void* pvStackAddress;$/;"	m	struct:kTaskControlBlockStruct
pvTail	02.Kernel64/Source/List.h	/^	void* pvTail;$/;"	m	struct:kListManagerStruct
pvTail	save/02.Kernel64/Source/List.h	/^	void* pvTail;$/;"	m	struct:kListManagerStruct
qwBaseAddress	02.Kernel64/Source/Descriptor.h	/^	QWORD qwBaseAddress;$/;"	m	struct:kGDTRStruct
qwBaseAddress	save/02.Kernel64/Source/Descriptor.h	/^	QWORD qwBaseAddress;$/;"	m	struct:kGDTRStruct
qwBaseEntryStartAddress	02.Kernel64/Source/MPConfigurationTable.h	/^	QWORD qwBaseEntryStartAddress;$/;"	m	struct:kMPConfigurationManagerStruct
qwBaseEntryStartAddress	save/02.Kernel64/Source/MPConfigurationTable.h	/^	QWORD qwBaseEntryStartAddress;$/;"	m	struct:kMPConfigurationManagerStruct
qwEndAddress	02.Kernel64/Source/DynamicMemory.h	/^	QWORD qwEndAddress;$/;"	m	struct:kDynamicMemoryManagerStruct
qwEndAddress	save/02.Kernel64/Source/DynamicMemory.h	/^	QWORD qwEndAddress;$/;"	m	struct:kDynamicMemoryManagerStruct
qwExistBitCount	02.Kernel64/Source/DynamicMemory.h	/^	QWORD qwExistBitCount;$/;"	m	struct:kBitmapStruct
qwExistBitCount	save/02.Kernel64/Source/DynamicMemory.h	/^	QWORD qwExistBitCount;$/;"	m	struct:kBitmapStruct
qwFlags	02.Kernel64/Source/Task.h	/^	QWORD qwFlags;$/;"	m	struct:kTaskControlBlockStruct
qwFlags	save/02.Kernel64/Source/Task.h	/^	QWORD qwFlags;$/;"	m	struct:kTaskControlBlockStruct
qwID	02.Kernel64/Source/List.h	/^	QWORD qwID;$/;"	m	struct:kListLinkStruct
qwID	save/02.Kernel64/Source/List.h	/^	QWORD qwID;$/;"	m	struct:kListLinkStruct
qwIOAPICBaseAddrressOfISA	02.Kernel64/Source/IOAPIC.h	/^	QWORD qwIOAPICBaseAddrressOfISA;$/;"	m	struct:kIOAPICManagerStruct
qwIST	02.Kernel64/Source/Descriptor.h	/^	QWORD qwIST[7];$/;"	m	struct:kTSSDataStruct
qwIST	save/02.Kernel64/Source/Descriptor.h	/^	QWORD qwIST[7];$/;"	m	struct:kTSSDataStruct
qwLastFPUUsedTaskID	02.Kernel64/Source/Task.h	/^	QWORD qwLastFPUUsedTaskID;$/;"	m	struct:kSchedulerStruct
qwLastFPUUsedTaskID	save/02.Kernel64/Source/Task.h	/^	QWORD qwLastFPUUsedTaskID;$/;"	m	struct:kSchedulerStruct
qwMemorySize	02.Kernel64/Source/Task.h	/^	QWORD qwMemorySize;$/;"	m	struct:kTaskControlBlockStruct
qwMemorySize	save/02.Kernel64/Source/Task.h	/^	QWORD qwMemorySize;$/;"	m	struct:kTaskControlBlockStruct
qwParentProcessID	02.Kernel64/Source/Task.h	/^	QWORD qwParentProcessID;$/;"	m	struct:kTaskControlBlockStruct
qwParentProcessID	save/02.Kernel64/Source/Task.h	/^	QWORD qwParentProcessID;$/;"	m	struct:kTaskControlBlockStruct
qwProcessorLoad	02.Kernel64/Source/Task.h	/^	QWORD qwProcessorLoad;$/;"	m	struct:kSchedulerStruct
qwProcessorLoad	save/02.Kernel64/Source/Task.h	/^	QWORD qwProcessorLoad;$/;"	m	struct:kSchedulerStruct
qwReserved2	02.Kernel64/Source/Descriptor.h	/^	QWORD qwReserved2;$/;"	m	struct:kTSSDataStruct
qwReserved2	save/02.Kernel64/Source/Descriptor.h	/^	QWORD qwReserved2;$/;"	m	struct:kTSSDataStruct
qwReserved3	02.Kernel64/Source/Descriptor.h	/^	QWORD qwReserved3;$/;"	m	struct:kTSSDataStruct
qwReserved3	save/02.Kernel64/Source/Descriptor.h	/^	QWORD qwReserved3;$/;"	m	struct:kTSSDataStruct
qwRsp	02.Kernel64/Source/Descriptor.h	/^	QWORD qwRsp[3];$/;"	m	struct:kTSSDataStruct
qwRsp	save/02.Kernel64/Source/Descriptor.h	/^	QWORD qwRsp[3];$/;"	m	struct:kTSSDataStruct
qwSpendProcessorTimeInIdleTask	02.Kernel64/Source/Task.h	/^	QWORD qwSpendProcessorTimeInIdleTask;$/;"	m	struct:kSchedulerStruct
qwSpendProcessorTimeInIdleTask	save/02.Kernel64/Source/Task.h	/^	QWORD qwSpendProcessorTimeInIdleTask;$/;"	m	struct:kSchedulerStruct
qwStackSize	02.Kernel64/Source/Task.h	/^	QWORD qwStackSize;$/;"	m	struct:kTaskControlBlockStruct
qwStackSize	save/02.Kernel64/Source/Task.h	/^	QWORD qwStackSize;$/;"	m	struct:kTaskControlBlockStruct
qwStartAddress	02.Kernel64/Source/DynamicMemory.h	/^	QWORD qwStartAddress;$/;"	m	struct:kDynamicMemoryManagerStruct
qwStartAddress	save/02.Kernel64/Source/DynamicMemory.h	/^	QWORD qwStartAddress;$/;"	m	struct:kDynamicMemoryManagerStruct
qwTaskID	02.Kernel64/Source/Synchronization.h	/^	volatile QWORD qwTaskID;$/;"	m	struct:kMutextStruct
qwTaskID	save/02.Kernel64/Source/Synchronization.h	/^	volatile QWORD qwTaskID;$/;"	m	struct:kMutextStruct
qwUsedSize	02.Kernel64/Source/DynamicMemory.h	/^	QWORD qwUsedSize;$/;"	m	struct:kDynamicMemoryManagerStruct
qwUsedSize	save/02.Kernel64/Source/DynamicMemory.h	/^	QWORD qwUsedSize;$/;"	m	struct:kDynamicMemoryManagerStruct
readdir	02.Kernel64/Source/FileSystem.h	52;"	d
readdir	save/02.Kernel64/Source/FileSystem.h	52;"	d
remove	02.Kernel64/Source/FileSystem.h	50;"	d
remove	save/02.Kernel64/Source/FileSystem.h	50;"	d
rewinddir	02.Kernel64/Source/FileSystem.h	53;"	d
rewinddir	save/02.Kernel64/Source/FileSystem.h	53;"	d
size_t	02.Kernel64/Source/FileSystem.h	62;"	d
size_t	save/02.Kernel64/Source/FileSystem.h	62;"	d
stChildThreadList	02.Kernel64/Source/Task.h	/^	LIST stChildThreadList;$/;"	m	struct:kTaskControlBlockStruct
stChildThreadList	save/02.Kernel64/Source/Task.h	/^	LIST stChildThreadList;$/;"	m	struct:kTaskControlBlockStruct
stContext	02.Kernel64/Source/Task.h	/^	CONTEXT stContext;$/;"	m	struct:kTaskControlBlockStruct
stContext	save/02.Kernel64/Source/Task.h	/^	CONTEXT stContext;$/;"	m	struct:kTaskControlBlockStruct
stDirectoryHandle	02.Kernel64/Source/FileSystem.h	/^		DIRECTORYHANDLE stDirectoryHandle;$/;"	m	union:kFileDirectoryHandleStruct::__anon1
stDirectoryHandle	save/02.Kernel64/Source/FileSystem.h	/^		DIRECTORYHANDLE stDirectoryHandle;$/;"	m	union:kFileDirectoryHandleStruct::__anon2
stFileHandle	02.Kernel64/Source/FileSystem.h	/^		FILEHANDLE stFileHandle;$/;"	m	union:kFileDirectoryHandleStruct::__anon1
stFileHandle	save/02.Kernel64/Source/FileSystem.h	/^		FILEHANDLE stFileHandle;$/;"	m	union:kFileDirectoryHandleStruct::__anon2
stHDDInformation	02.Kernel64/Source/HardDisk.h	/^	HDDINFORMATION stHDDInformation;$/;"	m	struct:kHDDManagerStruct
stHDDInformation	save/02.Kernel64/Source/HardDisk.h	/^	HDDINFORMATION stHDDInformation;$/;"	m	struct:kHDDManagerStruct
stLink	02.Kernel64/Source/Task.h	/^	LISTLINK stLink;$/;"	m	struct:kTaskControlBlockStruct
stLink	save/02.Kernel64/Source/Task.h	/^	LISTLINK stLink;$/;"	m	struct:kTaskControlBlockStruct
stLock	02.Kernel64/Source/SerialPort.h	/^	MUTEX stLock;$/;"	m	struct:kSerialPortManager
stLock	save/02.Kernel64/Source/SerialPort.h	/^	MUTEX stLock;$/;"	m	struct:kSerialPortManager
stMutex	02.Kernel64/Source/FileSystem.h	/^	MUTEX stMutex;$/;"	m	struct:kFileSystemManagerStruct
stMutex	02.Kernel64/Source/HardDisk.h	/^	MUTEX stMutex;$/;"	m	struct:kHDDManagerStruct
stMutex	02.Kernel64/Source/RAMDisk.h	/^	MUTEX stMutex;$/;"	m	struct:kRDDManagerStruct
stMutex	save/02.Kernel64/Source/FileSystem.h	/^	MUTEX stMutex;$/;"	m	struct:kFileSystemManagerStruct
stMutex	save/02.Kernel64/Source/HardDisk.h	/^	MUTEX stMutex;$/;"	m	struct:kHDDManagerStruct
stMutex	save/02.Kernel64/Source/RAMDisk.h	/^	MUTEX stMutex;$/;"	m	struct:kRDDManagerStruct
stSpinLock	02.Kernel64/Source/DynamicMemory.h	/^	SPINLOCK stSpinLock;$/;"	m	struct:kDynamicMemoryManagerStruct
stSpinLock	02.Kernel64/Source/Keyboard.h	/^	SPINLOCK stSpinLock;$/;"	m	struct:kKeyboardManagerStruct
stSpinLock	02.Kernel64/Source/Task.h	/^	SPINLOCK stSpinLock;$/;"	m	struct:kSchedulerStruct
stSpinLock	02.Kernel64/Source/Task.h	/^	SPINLOCK stSpinLock;$/;"	m	struct:kTCBPoolManagerStruct
stThreadLink	02.Kernel64/Source/Task.h	/^	LISTLINK stThreadLink;$/;"	m	struct:kTaskControlBlockStruct
stThreadLink	save/02.Kernel64/Source/Task.h	/^	LISTLINK stThreadLink;$/;"	m	struct:kTaskControlBlockStruct
stWaitList	02.Kernel64/Source/Task.h	/^	LIST stWaitList;$/;"	m	struct:kSchedulerStruct
stWaitList	save/02.Kernel64/Source/Task.h	/^	LIST stWaitList;$/;"	m	struct:kSchedulerStruct
times	00.BootLoader/BootLoader.asm	/^times 510 - ($-$$) db 0x00      	; $ 현재 라인의 어드레스 $/;"	l
times	00.BootLoader/BootLoader2.asm	/^times 510 - ($-$$) db 0x00      	; $ 현재 라인의 어드레스 $/;"	l
times	01.Kernel32/Source/EntryPoint.s	/^times 512 - ($-$$) db 0x00	; 512 바이트를 맞추기 위해 남은 부분을 0으로 채움$/;"	l
vbBootCode	02.Kernel64/Source/FileSystem.h	/^	BYTE vbBootCode[430];$/;"	m	struct:kMBRStruct
vbBootCode	save/02.Kernel64/Source/FileSystem.h	/^	BYTE vbBootCode[430];$/;"	m	struct:kMBRStruct
vbBootLoaderSignature	02.Kernel64/Source/FileSystem.h	/^	BYTE vbBootLoaderSignature[2];$/;"	m	struct:kMBRStruct
vbBootLoaderSignature	save/02.Kernel64/Source/FileSystem.h	/^	BYTE vbBootLoaderSignature[2];$/;"	m	struct:kMBRStruct
vbCPUSignature	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE vbCPUSignature[4];$/;"	m	struct:kProcessorEntryStruct
vbCPUSignature	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE vbCPUSignature[4];$/;"	m	struct:kProcessorEntryStruct
vbEndingCHSAddress	02.Kernel64/Source/FileSystem.h	/^	BYTE vbEndingCHSAddress[3];$/;"	m	struct:kPartitionStruct
vbEndingCHSAddress	save/02.Kernel64/Source/FileSystem.h	/^	BYTE vbEndingCHSAddress[3];$/;"	m	struct:kPartitionStruct
vbIRQToINTINMap	02.Kernel64/Source/IOAPIC.h	/^	BYTE vbIRQToINTINMap[IOAPIC_MAXIRQTOINTINMAPCOUNT];$/;"	m	struct:kIOAPICManagerStruct
vbMPFeatureByte	02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE vbMPFeatureByte[5];$/;"	m	struct:kMPFloatingPointerStruct
vbMPFeatureByte	save/02.Kernel64/Source/MPConfigurationTable.h	/^	BYTE vbMPFeatureByte[5];$/;"	m	struct:kMPFloatingPointerStruct
vbPadding	02.Kernel64/Source/Synchronization.h	/^	BYTE vbPadding[3];$/;"	m	struct:kMutextStruct
vbPadding	save/02.Kernel64/Source/Synchronization.h	/^	BYTE vbPadding[3];$/;"	m	struct:kMutextStruct
vbReserved	02.Kernel64/Source/IOAPIC.h	/^	BYTE vbReserved[4];$/;"	m	struct:kIOREdirectionTableStrcut
vbStartingCHSAddress	02.Kernel64/Source/FileSystem.h	/^	BYTE vbStartingCHSAddress[3];$/;"	m	struct:kPartitionStruct
vbStartingCHSAddress	save/02.Kernel64/Source/FileSystem.h	/^	BYTE vbStartingCHSAddress[3];$/;"	m	struct:kPartitionStruct
vcBusTypeString	02.Kernel64/Source/MPConfigurationTable.h	/^	char vcBusTypeString[6];$/;"	m	struct:kBusEntryStruct
vcBusTypeString	save/02.Kernel64/Source/MPConfigurationTable.h	/^	char vcBusTypeString[6];$/;"	m	struct:kBusEntryStruct
vcFileName	02.Kernel64/Source/FileSystem.h	/^	char vcFileName[FILESYSTEM_MAXFILENAMELENGTH];$/;"	m	struct:kDirectoryEntryStruct
vcFileName	save/02.Kernel64/Source/FileSystem.h	/^	char vcFileName[FILESYSTEM_MAXFILENAMELENGTH];$/;"	m	struct:kDirectoryEntryStruct
vcOEMIDString	02.Kernel64/Source/MPConfigurationTable.h	/^	char vcOEMIDString[8];$/;"	m	struct:kMPConfigurationTableHeaderStruct
vcOEMIDString	save/02.Kernel64/Source/MPConfigurationTable.h	/^	char vcOEMIDString[8];$/;"	m	struct:kMPConfigurationTableHeaderStruct
vcPadding	02.Kernel64/Source/Task.h	/^	char vcPadding[9];$/;"	m	struct:kTaskControlBlockStruct
vcPadding	save/02.Kernel64/Source/Task.h	/^	char vcPadding[11];$/;"	m	struct:kTaskControlBlockStruct
vcProductIDString	02.Kernel64/Source/MPConfigurationTable.h	/^	char vcProductIDString[12];$/;"	m	struct:kMPConfigurationTableHeaderStruct
vcProductIDString	save/02.Kernel64/Source/MPConfigurationTable.h	/^	char vcProductIDString[12];$/;"	m	struct:kMPConfigurationTableHeaderStruct
vcSignature	02.Kernel64/Source/MPConfigurationTable.h	/^	char vcSignature[4];$/;"	m	struct:kMPConfigurationTableHeaderStruct
vcSignature	02.Kernel64/Source/MPConfigurationTable.h	/^	char vcSignature[4];$/;"	m	struct:kMPFloatingPointerStruct
vcSignature	save/02.Kernel64/Source/MPConfigurationTable.h	/^	char vcSignature[4];$/;"	m	struct:kMPConfigurationTableHeaderStruct
vcSignature	save/02.Kernel64/Source/MPConfigurationTable.h	/^	char vcSignature[4];$/;"	m	struct:kMPFloatingPointerStruct
vdwAccessTime	02.Kernel64/Source/CacheManager.h	/^	DWORD vdwAccessTime[CACHE_MAXCACHETABLEINDEX];$/;"	m	struct:kCacheManagerStruct
vdwAccessTime	save/02.Kernel64/Source/CacheManager.h	/^	DWORD vdwAccessTime[CACHE_MAXCACHETABLEINDEX];$/;"	m	struct:kCacheManagerStruct
vdwMaxCount	02.Kernel64/Source/CacheManager.h	/^	DWORD vdwMaxCount[CACHE_MAXCACHETABLEINDEX];$/;"	m	struct:kCacheManagerStruct
vdwMaxCount	save/02.Kernel64/Source/CacheManager.h	/^	DWORD vdwMaxCount[CACHE_MAXCACHETABLEINDEX];$/;"	m	struct:kCacheManagerStruct
vdwReserved	02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD vdwReserved[2];$/;"	m	struct:kProcessorEntryStruct
vdwReserved	save/02.Kernel64/Source/MPConfigurationTable.h	/^	DWORD vdwReserved[2];$/;"	m	struct:kProcessorEntryStruct
viExecuteCount	02.Kernel64/Source/Task.h	/^	int viExecuteCount[TASK_MAXREADYLISTCOUNT];$/;"	m	struct:kSchedulerStruct
viExecuteCount	save/02.Kernel64/Source/Task.h	/^	int viExecuteCount[TASK_MAXREADYLISTCOUNT];$/;"	m	struct:kSchedulerStruct
vpbBuffer	02.Kernel64/Source/CacheManager.h	/^	BYTE* vpbBuffer[CACHE_MAXCACHETABLEINDEX];$/;"	m	struct:kCacheManagerStruct
vpbBuffer	save/02.Kernel64/Source/CacheManager.h	/^	BYTE* vpbBuffer[CACHE_MAXCACHETABLEINDEX];$/;"	m	struct:kCacheManagerStruct
vqRegister	02.Kernel64/Source/Task.h	/^	QWORD vqRegister[TASK_REGISTERCOUNT];$/;"	m	struct:kContextStruct
vqRegister	save/02.Kernel64/Source/Task.h	/^	QWORD vqRegister[TASK_REGISTERCOUNT];$/;"	m	struct:kContextStruct
vqwFPUContext	02.Kernel64/Source/Task.h	/^	QWORD vqwFPUContext[512\/8];$/;"	m	struct:kTaskControlBlockStruct
vqwFPUContext	save/02.Kernel64/Source/Task.h	/^	QWORD vqwFPUContext[512\/8];$/;"	m	struct:kTaskControlBlockStruct
vstPartiton	02.Kernel64/Source/FileSystem.h	/^	PARTITION vstPartiton[4];$/;"	m	struct:kMBRStruct
vstPartiton	save/02.Kernel64/Source/FileSystem.h	/^	PARTITION vstPartiton[4];$/;"	m	struct:kMBRStruct
vstReadyList	02.Kernel64/Source/Task.h	/^	LIST vstReadyList[TASK_MAXREADYLISTCOUNT];$/;"	m	struct:kSchedulerStruct
vstReadyList	save/02.Kernel64/Source/Task.h	/^	LIST vstReadyList[TASK_MAXREADYLISTCOUNT];$/;"	m	struct:kSchedulerStruct
vvqwCoreInterruptCount	02.Kernel64/Source/InterruptHandler.h	/^	QWORD vvqwCoreInterruptCount[MAXPROCESSORCOUNT][INTERRUPT_MAXVECTORCOUNT];$/;"	m	struct:kInterruptManagerStruct
vvstCacheBuffer	02.Kernel64/Source/CacheManager.h	/^	CACHEBUFFER vvstCacheBuffer[CACHE_MAXCACHETABLEINDEX][CACHE_MAXDATAAREACOUNT];$/;"	m	struct:kCacheManagerStruct
vvstCacheBuffer	save/02.Kernel64/Source/CacheManager.h	/^	CACHEBUFFER vvstCacheBuffer[CACHE_MAXCACHETABLEINDEX][CACHE_MAXDATAAREACOUNT];$/;"	m	struct:kCacheManagerStruct
vwFirmwareRevision	02.Kernel64/Source/HardDisk.h	/^	WORD vwFirmwareRevision[4];$/;"	m	struct:kHDDInformationStruct
vwFirmwareRevision	save/02.Kernel64/Source/HardDisk.h	/^	WORD vwFirmwareRevision[4];$/;"	m	struct:kHDDInformationStruct
vwModelNumber	02.Kernel64/Source/HardDisk.h	/^	WORD vwModelNumber[20];$/;"	m	struct:kHDDInformationStruct
vwModelNumber	save/02.Kernel64/Source/HardDisk.h	/^	WORD vwModelNumber[20];$/;"	m	struct:kHDDInformationStruct
vwReserved2	02.Kernel64/Source/HardDisk.h	/^	WORD vwReserved2[13];$/;"	m	struct:kHDDInformationStruct
vwReserved2	save/02.Kernel64/Source/HardDisk.h	/^	WORD vwReserved2[13];$/;"	m	struct:kHDDInformationStruct
vwReserved3	02.Kernel64/Source/HardDisk.h	/^	WORD vwReserved3[196];$/;"	m	struct:kHDDInformationStruct
vwReserved3	save/02.Kernel64/Source/HardDisk.h	/^	WORD vwReserved3[196];$/;"	m	struct:kHDDInformationStruct
vwSerialNumber	02.Kernel64/Source/HardDisk.h	/^	WORD vwSerialNumber[10];$/;"	m	struct:kHDDInformationStruct
vwSerialNumber	save/02.Kernel64/Source/HardDisk.h	/^	WORD vwSerialNumber[10];$/;"	m	struct:kHDDInformationStruct
wBaseTableLength	02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wBaseTableLength;$/;"	m	struct:kMPConfigurationTableHeaderStruct
wBaseTableLength	save/02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wBaseTableLength;$/;"	m	struct:kMPConfigurationTableHeaderStruct
wBufferSize	02.Kernel64/Source/HardDisk.h	/^	WORD wBufferSize;$/;"	m	struct:kHDDInformationStruct
wBufferSize	save/02.Kernel64/Source/HardDisk.h	/^	WORD wBufferSize;$/;"	m	struct:kHDDInformationStruct
wBytesInPhaseLock	02.Kernel64/Source/HardDisk.h	/^	WORD wBytesInPhaseLock;$/;"	m	struct:kHDDInformationStruct
wBytesInPhaseLock	save/02.Kernel64/Source/HardDisk.h	/^	WORD wBytesInPhaseLock;$/;"	m	struct:kHDDInformationStruct
wConfiguation	02.Kernel64/Source/HardDisk.h	/^	WORD wConfiguation;$/;"	m	struct:kHDDInformationStruct
wConfiguation	save/02.Kernel64/Source/HardDisk.h	/^	WORD wConfiguation;$/;"	m	struct:kHDDInformationStruct
wControllerType	02.Kernel64/Source/HardDisk.h	/^	WORD wControllerType;$/;"	m	struct:kHDDInformationStruct
wControllerType	save/02.Kernel64/Source/HardDisk.h	/^	WORD wControllerType;$/;"	m	struct:kHDDInformationStruct
wEntryCount	02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wEntryCount;$/;"	m	struct:kMPConfigurationTableHeaderStruct
wEntryCount	save/02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wEntryCount;$/;"	m	struct:kMPConfigurationTableHeaderStruct
wExtendedTableLength	02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wExtendedTableLength;$/;"	m	struct:kMPConfigurationTableHeaderStruct
wExtendedTableLength	save/02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wExtendedTableLength;$/;"	m	struct:kMPConfigurationTableHeaderStruct
wIOMapBaseAddress	02.Kernel64/Source/Descriptor.h	/^	WORD wIOMapBaseAddress;$/;"	m	struct:kTSSDataStruct
wIOMapBaseAddress	save/02.Kernel64/Source/Descriptor.h	/^	WORD wIOMapBaseAddress;$/;"	m	struct:kTSSDataStruct
wInterSectorGap	02.Kernel64/Source/HardDisk.h	/^	WORD wInterSectorGap;$/;"	m	struct:kHDDInformationStruct
wInterSectorGap	save/02.Kernel64/Source/HardDisk.h	/^	WORD wInterSectorGap;$/;"	m	struct:kHDDInformationStruct
wInterruptFlags	02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wInterruptFlags;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
wInterruptFlags	02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wInterruptFlags;$/;"	m	struct:kLocalInterruptEntryStruct
wInterruptFlags	save/02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wInterruptFlags;$/;"	m	struct:kIOInterruptAssignmentEntryStruct
wInterruptFlags	save/02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wInterruptFlags;$/;"	m	struct:kLocalInterruptEntryStruct
wLimit	02.Kernel64/Source/Descriptor.h	/^	WORD wLimit;$/;"	m	struct:kGDTRStruct
wLimit	save/02.Kernel64/Source/Descriptor.h	/^	WORD wLimit;$/;"	m	struct:kGDTRStruct
wLowerBaseAddress	02.Kernel64/Source/Descriptor.h	/^	WORD wLowerBaseAddress;$/;"	m	struct:kGDTEntry16struct
wLowerBaseAddress	02.Kernel64/Source/Descriptor.h	/^	WORD wLowerBaseAddress;$/;"	m	struct:kGDTEntry8Struct
wLowerBaseAddress	02.Kernel64/Source/Descriptor.h	/^	WORD wLowerBaseAddress;$/;"	m	struct:kIDTEntryStruct
wLowerBaseAddress	save/02.Kernel64/Source/Descriptor.h	/^	WORD wLowerBaseAddress;$/;"	m	struct:kGDTEntry16struct
wLowerBaseAddress	save/02.Kernel64/Source/Descriptor.h	/^	WORD wLowerBaseAddress;$/;"	m	struct:kGDTEntry8Struct
wLowerBaseAddress	save/02.Kernel64/Source/Descriptor.h	/^	WORD wLowerBaseAddress;$/;"	m	struct:kIDTEntryStruct
wLowerLimit	02.Kernel64/Source/Descriptor.h	/^	WORD wLowerLimit;$/;"	m	struct:kGDTEntry16struct
wLowerLimit	02.Kernel64/Source/Descriptor.h	/^	WORD wLowerLimit;$/;"	m	struct:kGDTEntry8Struct
wLowerLimit	save/02.Kernel64/Source/Descriptor.h	/^	WORD wLowerLimit;$/;"	m	struct:kGDTEntry16struct
wLowerLimit	save/02.Kernel64/Source/Descriptor.h	/^	WORD wLowerLimit;$/;"	m	struct:kGDTEntry8Struct
wMiddleBaseAddress	02.Kernel64/Source/Descriptor.h	/^	WORD wMiddleBaseAddress;$/;"	m	struct:kIDTEntryStruct
wMiddleBaseAddress	save/02.Kernel64/Source/Descriptor.h	/^	WORD wMiddleBaseAddress;$/;"	m	struct:kIDTEntryStruct
wNumberOfCylinder	02.Kernel64/Source/HardDisk.h	/^	WORD wNumberOfCylinder;$/;"	m	struct:kHDDInformationStruct
wNumberOfCylinder	save/02.Kernel64/Source/HardDisk.h	/^	WORD wNumberOfCylinder;$/;"	m	struct:kHDDInformationStruct
wNumberOfECCBytes	02.Kernel64/Source/HardDisk.h	/^	WORD wNumberOfECCBytes;$/;"	m	struct:kHDDInformationStruct
wNumberOfECCBytes	save/02.Kernel64/Source/HardDisk.h	/^	WORD wNumberOfECCBytes;$/;"	m	struct:kHDDInformationStruct
wNumberOfHead	02.Kernel64/Source/HardDisk.h	/^	WORD wNumberOfHead;$/;"	m	struct:kHDDInformationStruct
wNumberOfHead	save/02.Kernel64/Source/HardDisk.h	/^	WORD wNumberOfHead;$/;"	m	struct:kHDDInformationStruct
wNumberOfSectorPerCylinder	02.Kernel64/Source/HardDisk.h	/^	WORD wNumberOfSectorPerCylinder;$/;"	m	struct:kHDDInformationStruct
wNumberOfSectorPerCylinder	save/02.Kernel64/Source/HardDisk.h	/^	WORD wNumberOfSectorPerCylinder;$/;"	m	struct:kHDDInformationStruct
wNumberOfVendorUniqueStatusWord	02.Kernel64/Source/HardDisk.h	/^	WORD wNumberOfVendorUniqueStatusWord;$/;"	m	struct:kHDDInformationStruct
wNumberOfVendorUniqueStatusWord	save/02.Kernel64/Source/HardDisk.h	/^	WORD wNumberOfVendorUniqueStatusWord;$/;"	m	struct:kHDDInformationStruct
wOEMTableSize	02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wOEMTableSize;$/;"	m	struct:kMPConfigurationTableHeaderStruct
wOEMTableSize	save/02.Kernel64/Source/MPConfigurationTable.h	/^	WORD wOEMTableSize;$/;"	m	struct:kMPConfigurationTableHeaderStruct
wPading	02.Kernel64/Source/Descriptor.h	/^	WORD wPading;$/;"	m	struct:kGDTRStruct
wPading	save/02.Kernel64/Source/Descriptor.h	/^	WORD wPading;$/;"	m	struct:kGDTRStruct
wReserved	02.Kernel64/Source/Descriptor.h	/^	WORD wReserved;$/;"	m	struct:kTSSDataStruct
wReserved	save/02.Kernel64/Source/Descriptor.h	/^	WORD wReserved;$/;"	m	struct:kTSSDataStruct
wReserved1	02.Kernel64/Source/HardDisk.h	/^	WORD wReserved1;$/;"	m	struct:kHDDInformationStruct
wReserved1	save/02.Kernel64/Source/HardDisk.h	/^	WORD wReserved1;$/;"	m	struct:kHDDInformationStruct
wSegmentSelector	02.Kernel64/Source/Descriptor.h	/^	WORD wSegmentSelector;$/;"	m	struct:kIDTEntryStruct
wSegmentSelector	save/02.Kernel64/Source/Descriptor.h	/^	WORD wSegmentSelector;$/;"	m	struct:kIDTEntryStruct
wUnformattedBytePerSector	02.Kernel64/Source/HardDisk.h	/^	WORD wUnformattedBytePerSector;$/;"	m	struct:kHDDInformationStruct
wUnformattedBytePerSector	save/02.Kernel64/Source/HardDisk.h	/^	WORD wUnformattedBytePerSector;$/;"	m	struct:kHDDInformationStruct
wUnformattedBytePerTrack	02.Kernel64/Source/HardDisk.h	/^	WORD wUnformattedBytePerTrack;$/;"	m	struct:kHDDInformationStruct
wUnformattedBytePerTrack	save/02.Kernel64/Source/HardDisk.h	/^	WORD wUnformattedBytePerTrack;$/;"	m	struct:kHDDInformationStruct
